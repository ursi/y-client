// Generated by purs bundle 0.14.2
var PS = {};
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var Data_Function = $PS["Data.Function"];          
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };
  var Discard = function (discard) {
      this.discard = discard;
  };
  var discard = function (dict) {
      return dict.discard;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var composeKleisliFlipped = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bindFlipped(dictBind)(f)(g(a));
              };
          };
      };
  };
  var composeKleisli = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bind(dictBind)(f(a))(g);
              };
          };
      };
  }; 
  var discardUnit = new Discard(function (dictBind) {
      return bind(dictBind);
  });
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["discard"] = discard;
  exports["composeKleisli"] = composeKleisli;
  exports["composeKleisliFlipped"] = composeKleisliFlipped;
  exports["discardUnit"] = discardUnit;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["compose"] = compose;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                
  var Category = function (Semigroupoid0, identity) {
      this.Semigroupoid0 = Semigroupoid0;
      this.identity = identity;
  };
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var mapFlipped = function (dictFunctor) {
      return function (fa) {
          return function (f) {
              return map(dictFunctor)(f)(fa);
          };
      };
  }; 
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["mapFlipped"] = mapFlipped;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];            
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  var lift2 = function (dictApply) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
              };
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applySecond"] = applySecond;
  exports["lift2"] = lift2;
})(PS);
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Unit = $PS["Data.Unit"];                  
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 61, column 1 - line 61, column 63): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["when"] = when;
})(PS);
(function(exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Symbol"] = $PS["Data.Symbol"] || {};
  var exports = $PS["Data.Symbol"];                  
  var SProxy = (function () {
      function SProxy() {

      };
      SProxy.value = new SProxy();
      return SProxy;
  })();
  var IsSymbol = function (reflectSymbol) {
      this.reflectSymbol = reflectSymbol;
  };
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["IsSymbol"] = IsSymbol;
  exports["reflectSymbol"] = reflectSymbol;
  exports["SProxy"] = SProxy;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeGet = function (label) {
    return function (rec) {
      return rec[label];
    };
  };

  exports.unsafeSet = function (label) {
    return function (value) {
      return function (rec) {
        var copy = {};
        for (var key in rec) {
          if ({}.hasOwnProperty.call(rec, key)) {
            copy[key] = rec[key];
          }
        }
        copy[label] = value;
        return copy;
      };
    };
  };
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Record.Unsafe"] = $PS["Record.Unsafe"] || {};
  var exports = $PS["Record.Unsafe"];
  var $foreign = $PS["Record.Unsafe"];
  exports["unsafeGet"] = $foreign.unsafeGet;
  exports["unsafeSet"] = $foreign.unsafeSet;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Type.Proxy"] = $PS["Type.Proxy"] || {};
  var exports = $PS["Type.Proxy"];
  var $$Proxy = (function () {
      function $$Proxy() {

      };
      $$Proxy.value = new $$Proxy();
      return $$Proxy;
  })();
  exports["Proxy"] = $$Proxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var SemigroupRecord = function (appendRecord) {
      this.appendRecord = appendRecord;
  };
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupUnit = new Semigroup(function (v) {
      return function (v1) {
          return Data_Unit.unit;
      };
  });
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupRecordNil = new SemigroupRecord(function (v) {
      return function (v1) {
          return function (v2) {
              return {};
          };
      };
  });
  var semigroupArray = new Semigroup($foreign.concatArray);
  var appendRecord = function (dict) {
      return dict.appendRecord;
  };
  var semigroupRecord = function (dictRowToList) {
      return function (dictSemigroupRecord) {
          return new Semigroup(appendRecord(dictSemigroupRecord)(Type_Proxy["Proxy"].value));
      };
  };
  var append = function (dict) {
      return dict.append;
  };
  var semigroupRecordCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictSemigroupRecord) {
              return function (dictSemigroup) {
                  return new SemigroupRecord(function (v) {
                      return function (ra) {
                          return function (rb) {
                              var tail = appendRecord(dictSemigroupRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
                              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                              var insert = Record_Unsafe.unsafeSet(key);
                              var get = Record_Unsafe.unsafeGet(key);
                              return insert(append(dictSemigroup)(get(ra))(get(rb)))(tail);
                          };
                      };
                  });
              };
          };
      };
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupUnit"] = semigroupUnit;
  exports["semigroupArray"] = semigroupArray;
  exports["semigroupRecord"] = semigroupRecord;
  exports["semigroupRecordNil"] = semigroupRecordNil;
  exports["semigroupRecordCons"] = semigroupRecordCons;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var MonoidRecord = function (SemigroupRecord0, memptyRecord) {
      this.SemigroupRecord0 = SemigroupRecord0;
      this.memptyRecord = memptyRecord;
  };
  var Monoid = function (Semigroup0, mempty) {
      this.Semigroup0 = Semigroup0;
      this.mempty = mempty;
  };
  var monoidUnit = new Monoid(function () {
      return Data_Semigroup.semigroupUnit;
  }, Data_Unit.unit);
  var monoidString = new Monoid(function () {
      return Data_Semigroup.semigroupString;
  }, "");
  var monoidRecordNil = new MonoidRecord(function () {
      return Data_Semigroup.semigroupRecordNil;
  }, function (v) {
      return {};
  });      
  var memptyRecord = function (dict) {
      return dict.memptyRecord;
  };
  var monoidRecord = function (dictRowToList) {
      return function (dictMonoidRecord) {
          return new Monoid(function () {
              return Data_Semigroup.semigroupRecord()(dictMonoidRecord.SemigroupRecord0());
          }, memptyRecord(dictMonoidRecord)(Type_Proxy["Proxy"].value));
      };
  };
  var mempty = function (dict) {
      return dict.mempty;
  };
  var monoidRecordCons = function (dictIsSymbol) {
      return function (dictMonoid) {
          return function (dictCons) {
              return function (dictMonoidRecord) {
                  return new MonoidRecord(function () {
                      return Data_Semigroup.semigroupRecordCons(dictIsSymbol)()(dictMonoidRecord.SemigroupRecord0())(dictMonoid.Semigroup0());
                  }, function (v) {
                      var tail = memptyRecord(dictMonoidRecord)(Type_Proxy["Proxy"].value);
                      var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                      var insert = Record_Unsafe.unsafeSet(key);
                      return insert(mempty(dictMonoid))(tail);
                  });
              };
          };
      };
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidUnit"] = monoidUnit;
  exports["monoidString"] = monoidString;
  exports["monoidRecord"] = monoidRecord;
  exports["monoidRecordNil"] = monoidRecordNil;
  exports["monoidRecordCons"] = monoidRecordCons;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Monoid.Endo"] = $PS["Data.Monoid.Endo"] || {};
  var exports = $PS["Data.Monoid.Endo"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Endo = function (x) {
      return x;
  };
  var semigroupEndo = function (dictSemigroupoid) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Control_Semigroupoid.compose(dictSemigroupoid)(v)(v1);
          };
      });
  };
  var monoidEndo = function (dictCategory) {
      return new Data_Monoid.Monoid(function () {
          return semigroupEndo(dictCategory.Semigroupoid0());
      }, Control_Category.identity(dictCategory));
  };
  exports["Endo"] = Endo;
  exports["monoidEndo"] = monoidEndo;
})(PS);
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Safe.Coerce"] = $PS["Safe.Coerce"] || {};
  var exports = $PS["Safe.Coerce"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var coerce = function (dictCoercible) {
      return Unsafe_Coerce.unsafeCoerce;
  };
  exports["coerce"] = coerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];
  var Safe_Coerce = $PS["Safe.Coerce"];
  var unwrap = function (dictNewtype) {
      return Safe_Coerce.coerce();
  };
  exports["unwrap"] = unwrap;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Monoid_Endo = $PS["Data.Monoid.Endo"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];                
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)((function () {
                  var $313 = Control_Apply.applySecond(dictApplicative.Apply0());
                  return function ($314) {
                      return $313(f($314));
                  };
              })())(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false,
                                  acc: x
                              };
                          };
                          return {
                              init: false,
                              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true,
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  }; 
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var surroundMap = function (dictFoldable) {
      return function (dictSemigroup) {
          return function (d) {
              return function (t) {
                  return function (f) {
                      var joined = function (a) {
                          return function (m) {
                              return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(a))(m));
                          };
                      };
                      return Data_Newtype.unwrap()(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(joined)(f))(d);
                  };
              };
          };
      };
  };
  var foldM = function (dictFoldable) {
      return function (dictMonad) {
          return function (f) {
              return function (b0) {
                  return foldl(dictFoldable)(function (b) {
                      return function (a) {
                          return Control_Bind.bind(dictMonad.Bind1())(b)(Data_Function.flip(f)(a));
                      };
                  })(Control_Applicative.pure(dictMonad.Applicative0())(b0));
              };
          };
      };
  };
  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["foldM"] = foldM;
  exports["traverse_"] = traverse_;
  exports["intercalate"] = intercalate;
  exports["surroundMap"] = surroundMap;
  exports["foldableArray"] = foldableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Control.Alt"] = $PS["Control.Alt"] || {};
  var exports = $PS["Control.Alt"];                          
  var Alt = function (Functor0, alt) {
      this.Functor0 = Functor0;
      this.alt = alt;
  };                                                       
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Control.Plus"] = $PS["Control.Plus"] || {};
  var exports = $PS["Control.Plus"];                     
  var Plus = function (Alt0, empty) {
      this.Alt0 = Alt0;
      this.empty = empty;
  };       
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
})(PS);
(function(exports) {
  "use strict";

  var refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqBooleanImpl = refEq;
  exports.eqNumberImpl = refEq;
  exports.eqStringImpl = refEq;

  exports.eqArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        if (xs.length !== ys.length) return false;
        for (var i = 0; i < xs.length; i++) {
          if (!f(xs[i])(ys[i])) return false;
        }
        return true;
      };
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];
  var Eq = function (eq) {
      this.eq = eq;
  }; 
  var eqString = new Eq($foreign.eqStringImpl);
  var eqNumber = new Eq($foreign.eqNumberImpl);
  var eqBoolean = new Eq($foreign.eqBooleanImpl);
  var eq = function (dict) {
      return dict.eq;
  };
  var eqArray = function (dictEq) {
      return new Eq($foreign.eqArrayImpl(eq(dictEq)));
  };
  var notEq = function (dictEq) {
      return function (x) {
          return function (y) {
              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
          };
      };
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["eqNumber"] = eqNumber;
  exports["eqString"] = eqString;
  exports["eqArray"] = eqArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];          
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 230, column 1 - line 230, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          if (v instanceof Just) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 281, column 1 - line 281, column 46): " + [ v.constructor.name ]);
      };
  }; 
  var eqMaybe = function (dictEq) {
      return new Data_Eq.Eq(function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return true;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0);
              };
              return false;
          };
      });
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 68, column 1 - line 70, column 30): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 126, column 1 - line 128, column 28): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromMaybe"] = fromMaybe;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["eqMaybe"] = eqMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.NonEmpty"] = $PS["Data.NonEmpty"] || {};
  var exports = $PS["Data.NonEmpty"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];                    
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var singleton = function (dictPlus) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(dictPlus));
      };
  };
  var functorNonEmpty = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (m) {
              return new NonEmpty(f(m.value0), Data_Functor.map(dictFunctor)(f)(m.value1));
          };
      });
  };
  var foldableNonEmpty = function (dictFoldable) {
      return new Data_Foldable.Foldable(function (dictMonoid) {
          return function (f) {
              return function (v) {
                  return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
              };
          };
      }, function (f) {
          return function (b) {
              return function (v) {
                  return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
              };
          };
      }, function (f) {
          return function (b) {
              return function (v) {
                  return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
              };
          };
      });
  };
  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
  exports["functorNonEmpty"] = functorNonEmpty;
  exports["foldableNonEmpty"] = foldableNonEmpty;
})(PS);
(function(exports) {
  "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = (function () {
    function array1(a) {
      return [a];
    }

    function array2(a) {
      return function (b) {
        return [a, b];
      };
    }

    function array3(a) {
      return function (b) {
        return function (c) {
          return [a, b, c];
        };
      };
    }

    function concat2(xs) {
      return function (ys) {
        return xs.concat(ys);
      };
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            return function (array) {
              function go(bot, top) {
                switch (top - bot) {
                case 0: return pure([]);
                case 1: return map(array1)(f(array[bot]));
                case 2: return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));
                case 3: return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                default:
                  // This slightly tricky pivot selection aims to produce two
                  // even-length partitions where possible.
                  var pivot = bot + Math.floor((top - bot) / 4) * 2;
                  return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                }
              }
              return go(0, array.length);
            };
          };
        };
      };
    };
  })();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Traversable"] = $PS["Data.Traversable"] || {};
  var exports = $PS["Data.Traversable"];
  var $foreign = $PS["Data.Traversable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];            
  var Traversable = function (Foldable1, Functor0, sequence, traverse) {
      this.Foldable1 = Foldable1;
      this.Functor0 = Functor0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Data_Functor.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["Traversable"] = Traversable;
  exports["traverse"] = traverse;
  exports["sequence"] = sequence;
  exports["traversableArray"] = traversableArray;
})(PS);
(function(exports) {
  "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Tuple"] = $PS["Data.Tuple"] || {};
  var exports = $PS["Data.Tuple"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var uncurry = function (f) {
      return function (v) {
          return f(v.value0)(v.value1);
      };
  };
  var snd = function (v) {
      return v.value1;
  }; 
  var semigroupTuple = function (dictSemigroup) {
      return function (dictSemigroup1) {
          return new Data_Semigroup.Semigroup(function (v) {
              return function (v1) {
                  return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value1));
              };
          });
      };
  };
  var monoidTuple = function (dictMonoid) {
      return function (dictMonoid1) {
          return new Data_Monoid.Monoid(function () {
              return semigroupTuple(dictMonoid.Semigroup0())(dictMonoid1.Semigroup0());
          }, new Tuple(Data_Monoid.mempty(dictMonoid), Data_Monoid.mempty(dictMonoid1)));
      };
  };                                                                                                    
  var fst = function (v) {
      return v.value0;
  }; 
  var eqTuple = function (dictEq) {
      return function (dictEq1) {
          return new Data_Eq.Eq(function (x) {
              return function (y) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
              };
          });
      };
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["uncurry"] = uncurry;
  exports["eqTuple"] = eqTuple;
  exports["semigroupTuple"] = semigroupTuple;
  exports["monoidTuple"] = monoidTuple;
})(PS);
(function(exports) {
  "use strict";

  exports.unfoldr1ArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var tuple = f(value);
                result.push(fst(tuple));
                var maybe = snd(tuple);
                if (isNothing(maybe)) return result;
                value = fromJust(maybe);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Unfoldable1"] = $PS["Data.Unfoldable1"] || {};
  var exports = $PS["Data.Unfoldable1"];
  var $foreign = $PS["Data.Unfoldable1"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Unfoldable1 = function (unfoldr1) {
      this.unfoldr1 = unfoldr1;
  }; 
  var unfoldable1Array = new Unfoldable1($foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable1"] = Unfoldable1;
  exports["unfoldable1Array"] = unfoldable1Array;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Unfoldable"] = $PS["Data.Unfoldable"] || {};
  var exports = $PS["Data.Unfoldable"];
  var $foreign = $PS["Data.Unfoldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];  
  var Unfoldable = function (Unfoldable10, unfoldr) {
      this.Unfoldable10 = Unfoldable10;
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  }; 
  var unfoldableArray = new Unfoldable(function () {
      return Data_Unfoldable1.unfoldable1Array;
  }, $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable"] = Unfoldable;
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.List.Types"] = $PS["Data.List.Types"] || {};
  var exports = $PS["Data.List.Types"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];                
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var NonEmptyList = function (x) {
      return x;
  };
  var listMap = function (f) {
      var chunkedRevMap = function ($copy_chunksAcc) {
          return function ($copy_v) {
              var $tco_var_chunksAcc = $copy_chunksAcc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(chunksAcc, v) {
                  if (v instanceof Cons && (v.value1 instanceof Cons && v.value1.value1 instanceof Cons)) {
                      $tco_var_chunksAcc = new Cons(v, chunksAcc);
                      $copy_v = v.value1.value1.value1;
                      return;
                  };
                  var unrolledMap = function (v1) {
                      if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil)) {
                          return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
                      };
                      if (v1 instanceof Cons && v1.value1 instanceof Nil) {
                          return new Cons(f(v1.value0), Nil.value);
                      };
                      return Nil.value;
                  };
                  var reverseUnrolledMap = function ($copy_v1) {
                      return function ($copy_acc) {
                          var $tco_var_v1 = $copy_v1;
                          var $tco_done1 = false;
                          var $tco_result;
                          function $tco_loop(v1, acc) {
                              if (v1 instanceof Cons && (v1.value0 instanceof Cons && (v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons))) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                                  return;
                              };
                              $tco_done1 = true;
                              return acc;
                          };
                          while (!$tco_done1) {
                              $tco_result = $tco_loop($tco_var_v1, $copy_acc);
                          };
                          return $tco_result;
                      };
                  };
                  $tco_done = true;
                  return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
              };
              return $tco_result;
          };
      };
      return chunkedRevMap(Nil.value);
  };
  var functorList = new Data_Functor.Functor(listMap);
  var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              var $205 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
              return function ($206) {
                  return $205(f($206));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function ($copy_b) {
          return function ($copy_v) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, v) {
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = f(b)(v.value0);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Types (line 112, column 12 - line 114, column 30): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_v);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          var rev = (function () {
              var go = function ($copy_acc) {
                  return function ($copy_v) {
                      var $tco_var_acc = $copy_acc;
                      var $tco_done1 = false;
                      var $tco_result;
                      function $tco_loop(acc, v) {
                          if (v instanceof Nil) {
                              $tco_done1 = true;
                              return acc;
                          };
                          if (v instanceof Cons) {
                              $tco_var_acc = new Cons(v.value0, acc);
                              $copy_v = v.value1;
                              return;
                          };
                          throw new Error("Failed pattern match at Data.List.Types (line 108, column 7 - line 108, column 23): " + [ acc.constructor.name, v.constructor.name ]);
                      };
                      while (!$tco_done1) {
                          $tco_result = $tco_loop($tco_var_acc, $copy_v);
                      };
                      return $tco_result;
                  };
              };
              return go(Nil.value);
          })();
          var $207 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);
          return function ($208) {
              return $207(rev($208));
          };
      };
  });
  var foldableNonEmptyList = Data_NonEmpty.foldableNonEmpty(foldableList);
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });
  var monoidList = new Data_Monoid.Monoid(function () {
      return semigroupList;
  }, Nil.value);
  var traversableList = new Data_Traversable.Traversable(function () {
      return foldableList;
  }, function () {
      return functorList;
  }, function (dictApplicative) {
      return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  }, function (dictApplicative) {
      return function (f) {
          var $222 = Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value));
          var $223 = Data_Foldable.foldl(foldableList)(function (acc) {
              var $225 = Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc);
              return function ($226) {
                  return $225(f($226));
              };
          })(Control_Applicative.pure(dictApplicative)(Nil.value));
          return function ($224) {
              return $222($223($224));
          };
      };
  });
  var unfoldable1List = new Data_Unfoldable1.Unfoldable1(function (f) {
      return function (b) {
          var go = function ($copy_source) {
              return function ($copy_memo) {
                  var $tco_var_source = $copy_source;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(source, memo) {
                      var v = f(source);
                      if (v.value1 instanceof Data_Maybe.Just) {
                          $tco_var_source = v.value1.value0;
                          $copy_memo = new Cons(v.value0, memo);
                          return;
                      };
                      if (v.value1 instanceof Data_Maybe.Nothing) {
                          $tco_done = true;
                          return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(new Cons(v.value0, memo));
                      };
                      throw new Error("Failed pattern match at Data.List.Types (line 136, column 22 - line 138, column 61): " + [ v.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_source, $copy_memo);
                  };
                  return $tco_result;
              };
          };
          return go(b)(Nil.value);
      };
  });
  var unfoldableList = new Data_Unfoldable.Unfoldable(function () {
      return unfoldable1List;
  }, function (f) {
      return function (b) {
          var go = function ($copy_source) {
              return function ($copy_memo) {
                  var $tco_var_source = $copy_source;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(source, memo) {
                      var v = f(source);
                      if (v instanceof Data_Maybe.Nothing) {
                          $tco_done = true;
                          return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
                      };
                      if (v instanceof Data_Maybe.Just) {
                          $tco_var_source = v.value0.value1;
                          $copy_memo = new Cons(v.value0.value0, memo);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.List.Types (line 143, column 22 - line 145, column 52): " + [ v.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_source, $copy_memo);
                  };
                  return $tco_result;
              };
          };
          return go(b)(Nil.value);
      };
  });
  var applyList = new Control_Apply.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types (line 158, column 1 - line 160, column 48): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applyNonEmptyList = new Control_Apply.Apply(function () {
      return functorNonEmptyList;
  }, function (v) {
      return function (v1) {
          return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
      };
  });
  var applicativeList = new Control_Applicative.Applicative(function () {
      return applyList;
  }, function (a) {
      return new Cons(a, Nil.value);
  });                                              
  var altList = new Control_Alt.Alt(function () {
      return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
      return altList;
  }, Nil.value);
  var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
      return applyNonEmptyList;
  }, (function () {
      var $236 = Data_NonEmpty.singleton(plusList);
      return function ($237) {
          return NonEmptyList($236($237));
      };
  })());
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["semigroupList"] = semigroupList;
  exports["monoidList"] = monoidList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["unfoldableList"] = unfoldableList;
  exports["traversableList"] = traversableList;
  exports["applicativeList"] = applicativeList;
  exports["applicativeNonEmptyList"] = applicativeNonEmptyList;
  exports["foldableNonEmptyList"] = foldableNonEmptyList;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Monoid.Dual"] = $PS["Data.Monoid.Dual"] || {};
  var exports = $PS["Data.Monoid.Dual"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Dual = function (x) {
      return x;
  };
  var semigroupDual = function (dictSemigroup) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_Semigroup.append(dictSemigroup)(v1)(v);
          };
      });
  };
  var monoidDual = function (dictMonoid) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDual(dictMonoid.Semigroup0());
      }, Data_Monoid.mempty(dictMonoid));
  };
  exports["Dual"] = Dual;
  exports["monoidDual"] = monoidDual;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Batched"] = $PS["Data.Batched"] || {};
  var exports = $PS["Data.Batched"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Monoid_Dual = $PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = $PS["Data.Monoid.Endo"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];                
  var NestedFoldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var Single = (function () {
      function Single(value0) {
          this.value0 = value0;
      };
      Single.create = function (value0) {
          return new Single(value0);
      };
      return Single;
  })();
  var Batch = (function () {
      function Batch(value0) {
          this.value0 = value0;
      };
      Batch.create = function (value0) {
          return new Batch(value0);
      };
      return Batch;
  })();
  var foldr = function (dict) {
      return dict.foldr;
  };
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var foldlDefault = function (dictNestedFoldable) {
      return function (c) {
          return function (u) {
              return function (xs) {
                  return Data_Newtype.unwrap()(Data_Newtype.unwrap()(foldMap(dictNestedFoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn)))((function () {
                      var $34 = Data_Function.flip(c);
                      return function ($35) {
                          return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo($34($35)));
                      };
                  })())(xs)))(u);
              };
          };
      };
  };
  var foldrDefault = function (dictNestedFoldable) {
      return function (c) {
          return function (u) {
              return function (xs) {
                  return Data_Newtype.unwrap()(foldMap(dictNestedFoldable)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(function ($36) {
                      return Data_Monoid_Endo.Endo(c($36));
                  })(xs))(u);
              };
          };
      };
  };
  var $dollar_SemigroupBatched_6 = new Data_Semigroup.Semigroup(function (b1) {
      return function (b2) {
          if (b1 instanceof Batch && b1.value0.length === 0) {
              return b2;
          };
          if (b2 instanceof Batch && b2.value0.length === 0) {
              return b1;
          };
          return new Batch([ b1, b2 ]);
      };
  });
  var $dollar_NestedFoldableBatched_8 = new NestedFoldable(function (dictMonoid) {
      return function (ab2m) {
          return function (v) {
              if (v instanceof Single) {
                  return ab2m(v.value0);
              };
              if (v instanceof Batch) {
                  return Data_Foldable.foldMap(Data_Foldable.foldableArray)(dictMonoid)(foldMap($dollar_NestedFoldableBatched_8)(dictMonoid)(ab2m))(v.value0);
              };
              throw new Error("Failed pattern match at Data.Batched (line 57, column 18 - line 59, column 51): " + [ v.constructor.name ]);
          };
      };
  }, function (f) {
      return foldlDefault($dollar_NestedFoldableBatched_8)(f);
  }, function (f) {
      return foldrDefault($dollar_NestedFoldableBatched_8)(f);
  });
  var flattenMap = function (f) {
      return foldr($dollar_NestedFoldableBatched_8)(function ($37) {
          return Data_List_Types.Cons.create(f($37));
      })(Data_List_Types.Nil.value);
  };
  var flatten = flattenMap(Control_Category.identity(Control_Category.categoryFn));
  var $dollar_MonoidBatched_7 = new Data_Monoid.Monoid(function () {
      return $dollar_SemigroupBatched_6;
  }, new Batch([  ]));
  var $dollar_FunctorBatched_3 = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              if (v instanceof Single) {
                  return Single.create(Data_Functor.map(dictFunctor)(f)(v.value0));
              };
              if (v instanceof Batch) {
                  return Batch.create(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map($dollar_FunctorBatched_3(dictFunctor))(f))(v.value0));
              };
              throw new Error("Failed pattern match at Data.Batched (line 17, column 11 - line 19, column 39): " + [ v.constructor.name ]);
          };
      });
  };
  var $dollar_ApplyBatched_4 = function (dictApply) {
      return new Control_Apply.Apply(function () {
          return $dollar_FunctorBatched_3(dictApply.Functor0());
      }, function (batched_af) {
          return function (batched_ab) {
              if (batched_af instanceof Single && batched_ab instanceof Single) {
                  return Single.create(Control_Apply.apply(dictApply)(batched_af.value0)(batched_ab.value0));
              };
              if (batched_af instanceof Batch) {
                  return Batch.create(Data_Functor.mapFlipped(Data_Functor.functorArray)(batched_af.value0)(function (batched_af$prime) {
                      return Control_Apply.apply($dollar_ApplyBatched_4(dictApply))(batched_af$prime)(batched_ab);
                  }));
              };
              if (batched_ab instanceof Batch) {
                  return Batch.create(Data_Functor.map(Data_Functor.functorArray)(Control_Apply.apply($dollar_ApplyBatched_4(dictApply))(batched_af))(batched_ab.value0));
              };
              throw new Error("Failed pattern match at Data.Batched (line 22, column 33 - line 28, column 67): " + [ batched_af.constructor.name, batched_ab.constructor.name ]);
          };
      });
  };
  var $dollar_ApplicativeBatched_5 = function (dictApplicative) {
      return new Control_Applicative.Applicative(function () {
          return $dollar_ApplyBatched_4(dictApplicative.Apply0());
      }, (function () {
          var $38 = Control_Applicative.pure(dictApplicative);
          return function ($39) {
              return Single.create($38($39));
          };
      })());
  };
  exports["Single"] = Single;
  exports["Batch"] = Batch;
  exports["flattenMap"] = flattenMap;
  exports["flatten"] = flatten;
  exports["$_FunctorBatched_3"] = $dollar_FunctorBatched_3;
  exports["$_ApplicativeBatched_5"] = $dollar_ApplicativeBatched_5;
  exports["$_SemigroupBatched_6"] = $dollar_SemigroupBatched_6;
  exports["$_MonoidBatched_7"] = $dollar_MonoidBatched_7;
})(PS);
(function(exports) {
  exports.jseq = a => b => a === b;
})(PS["Data.JSValue"] = PS["Data.JSValue"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.JSValue"] = $PS["Data.JSValue"] || {};
  var exports = $PS["Data.JSValue"];
  var $foreign = $PS["Data.JSValue"];
  var Data_Eq = $PS["Data.Eq"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var toJSValue = Unsafe_Coerce.unsafeCoerce;
  var $dollar_EqJSValue_0 = new Data_Eq.Eq($foreign.jseq);
  exports["toJSValue"] = toJSValue;
  exports["$_EqJSValue_0"] = $dollar_EqJSValue_0;
})(PS);
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];                
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];                
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  var semigroupEffect = function (dictSemigroup) {
      return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyEffect)(Data_Semigroup.append(dictSemigroup)));
  };
  var monoidEffect = function (dictMonoid) {
      return new Data_Monoid.Monoid(function () {
          return semigroupEffect(dictMonoid.Semigroup0());
      }, $foreign.pureE(Data_Monoid.mempty(dictMonoid)));
  };
  exports["functorEffect"] = functorEffect;
  exports["applyEffect"] = applyEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
  exports["monoidEffect"] = monoidEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.mkEffectFn1 = function mkEffectFn1(fn) {
    return function(x) {
      return fn(x)();
    };
  };
})(PS["Effect.Uncurried"] = PS["Effect.Uncurried"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Effect.Uncurried"] = $PS["Effect.Uncurried"] || {};
  var exports = $PS["Effect.Uncurried"];
  var $foreign = $PS["Effect.Uncurried"];
  exports["mkEffectFn1"] = $foreign.mkEffectFn1;
})(PS);
(function(exports) {
  exports.unsafeEqImpl = eq => a => b => eq(a)(b);
})(PS["Producer"] = PS["Producer"] || {});
(function(exports) {
  exports.refEq = a => b => a === b;
})(PS["RefEq"] = PS["RefEq"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["RefEq"] = $PS["RefEq"] || {};
  var exports = $PS["RefEq"];
  var $foreign = $PS["RefEq"];
  var Data_Eq = $PS["Data.Eq"];                
  var RefEq = (function () {
      function RefEq(value0) {
          this.value0 = value0;
      };
      RefEq.create = function (value0) {
          return new RefEq(value0);
      };
      return RefEq;
  })();
  var eqRefEq = new Data_Eq.Eq(function (v) {
      return function (v1) {
          return $foreign.refEq(v.value0)(v1.value0);
      };
  });
  exports["RefEq"] = RefEq;
  exports["eqRefEq"] = eqRefEq;
  exports["refEq"] = $foreign.refEq;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Producer"] = $PS["Producer"] || {};
  var exports = $PS["Producer"];
  var $foreign = $PS["Producer"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Tuple = $PS["Data.Tuple"];
  var RefEq = $PS["RefEq"];
  var Produce = function (lift, produce) {
      this.lift = lift;
      this.produce = produce;
  };
  var unsafeEq = function (dictEq) {
      return $foreign.unsafeEqImpl(Data_Eq.eq(dictEq));
  };
  var unRefEq = function (v) {
      return v.value0;
  };
  var producer3Helper = function (v) {
      return v.value0.value0(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1);
  };
  var producer2Helper = function (v) {
      return v.value0.value0(v.value1.value0)(v.value1.value1);
  };
  var producer = function (dictEq) {
      return function (f) {
          return function (b) {
              return function (v) {
                  return v(dictEq)(new Data_Tuple.Tuple(f, b));
              };
          };
      };
  };
  var producer2 = function (dictEq) {
      return function (f) {
          return function (b) {
              return function (c) {
                  return producer(Data_Tuple.eqTuple(RefEq.eqRefEq)(dictEq))(producer2Helper)(new Data_Tuple.Tuple(new RefEq.RefEq(f), new Data_Tuple.Tuple(b, c)));
              };
          };
      };
  };
  var producer3 = function (dictEq) {
      return function (f) {
          return function (b) {
              return function (c) {
                  return function (d) {
                      return producer(Data_Tuple.eqTuple(RefEq.eqRefEq)(dictEq))(producer3Helper)(new Data_Tuple.Tuple(new RefEq.RefEq(f), new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, d))));
                  };
              };
          };
      };
  };
  var produceab = new Produce((function () {
      var $94 = producer(RefEq.eqRefEq)(unRefEq);
      return function ($95) {
          return $94(RefEq.RefEq.create($95));
      };
  })(), Control_Category.identity(Control_Category.categoryFn));
  var producea = function (dictEq) {
      return new Produce(producer(dictEq)(Control_Category.identity(Control_Category.categoryFn)), Control_Category.identity(Control_Category.categoryFn));
  };
  var produceProducer = new Produce(Control_Category.identity(Control_Category.categoryFn), function (v) {
      return v(function (dictEq) {
          return function (v1) {
              return v1.value0(v1.value1);
          };
      });
  });
  var produce = function (dict) {
      return dict.produce;
  };
  var lift = function (dict) {
      return dict.lift;
  };
  var eqProducer = new Data_Eq.Eq(function (v) {
      return function (v1) {
          return v(function (dictEq) {
              return function (v2) {
                  return v1(function (dictEq1) {
                      return function (v3) {
                          var $89 = RefEq.refEq(v2.value0)(v3.value0);
                          if ($89) {
                              return unsafeEq(dictEq)(v2.value1)(v3.value1);
                          };
                          return false;
                      };
                  });
              };
          });
      };
  });
  exports["lift"] = lift;
  exports["produce"] = produce;
  exports["producer"] = producer;
  exports["producer2"] = producer2;
  exports["producer3"] = producer3;
  exports["eqProducer"] = eqProducer;
  exports["produceProducer"] = produceProducer;
  exports["produceab"] = produceab;
  exports["producea"] = producea;
})(PS);
(function(exports) {
  "use strict";                                                                                      

  exports.fromFoldableImpl = (function () {
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.unconsImpl = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.findIndexImpl = function (just) {
    return function (nothing) {
      return function (f) {
        return function (xs) {
          for (var i = 0, l = xs.length; i < l; i++) {
            if (f(xs[i])) return just(i);
          }
          return nothing;
        };
      };
    };
  };

  exports._deleteAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 1);
          return just(l1);
        };
      };
    };
  };

  //------------------------------------------------------------------------------
  // Transformations -------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.reverse = function (l) {
    return l.slice().reverse();
  };

  //------------------------------------------------------------------------------
  // Sorting ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.sortByImpl = (function () {
    function mergeFromTo(compare, fromOrdering, xs1, xs2, from, to) {
      var mid;
      var i;
      var j;
      var k;
      var x;
      var y;
      var c;

      mid = from + ((to - from) >> 1);
      if (mid - from > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, from, mid);
      if (to - mid > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, mid, to);

      i = from;
      j = mid;
      k = from;
      while (i < mid && j < to) {
        x = xs2[i];
        y = xs2[j];
        c = fromOrdering(compare(x)(y));
        if (c > 0) {
          xs1[k++] = y;
          ++j;
        }
        else {
          xs1[k++] = x;
          ++i;
        }
      }
      while (i < mid) {
        xs1[k++] = xs2[i++];
      }
      while (j < to) {
        xs1[k++] = xs2[j++];
      }
    }

    return function (compare) {
      return function (fromOrdering) {
        return function (xs) {
          var out;

          if (xs.length < 2) return xs;

          out = xs.slice(0);
          mergeFromTo(compare, fromOrdering, out, xs.slice(0), 0, xs.length);

          return out;
        };
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  "use strict";

  exports.pushAll = function (as) {
    return function (xs) {
      return function () {
        return xs.push.apply(xs, as);
      };
    };
  };

  exports.unsafeFreeze = function (xs) {
    return function () {
      return xs;
    };
  };

  function copyImpl(xs) {
    return function () {
      return xs.slice();
    };
  }                         

  exports.thaw = copyImpl;
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Array.ST"] = $PS["Data.Array.ST"] || {};
  var exports = $PS["Data.Array.ST"];
  var $foreign = $PS["Data.Array.ST"];                     
  var withArray = function (f) {
      return function (xs) {
          return function __do() {
              var result = $foreign.thaw(xs)();
              f(result)();
              return $foreign.unsafeFreeze(result)();
          };
      };
  };
  var push = function (a) {
      return $foreign.pushAll([ a ]);
  };
  exports["withArray"] = withArray;
  exports["push"] = push;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);
(function(exports) {
  "use strict";

  var unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };                                     
  exports.ordNumberImpl = unsafeCompareImpl;
  exports.ordStringImpl = unsafeCompareImpl;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Ordering"] = $PS["Data.Ordering"] || {};
  var exports = $PS["Data.Ordering"];
  var Data_Eq = $PS["Data.Eq"];                    
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  var eqOrdering = new Data_Eq.Eq(function (v) {
      return function (v1) {
          if (v instanceof LT && v1 instanceof LT) {
              return true;
          };
          if (v instanceof GT && v1 instanceof GT) {
              return true;
          };
          if (v instanceof EQ && v1 instanceof EQ) {
              return true;
          };
          return false;
      };
  });
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
  exports["eqOrdering"] = eqOrdering;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Ord"] = $PS["Data.Ord"] || {};
  var exports = $PS["Data.Ord"];
  var $foreign = $PS["Data.Ord"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Ord = function (Eq0, compare) {
      this.Eq0 = Eq0;
      this.compare = compare;
  }; 
  var ordString = new Ord(function () {
      return Data_Eq.eqString;
  }, $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordNumber = new Ord(function () {
      return Data_Eq.eqNumber;
  }, $foreign.ordNumberImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var compare = function (dict) {
      return dict.compare;
  };
  var comparing = function (dictOrd) {
      return function (f) {
          return function (x) {
              return function (y) {
                  return compare(dictOrd)(f(x))(f(y));
              };
          };
      };
  };
  var lessThanOrEq = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.GT) {
                  return false;
              };
              return true;
          };
      };
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["lessThanOrEq"] = lessThanOrEq;
  exports["comparing"] = comparing;
  exports["ordNumber"] = ordNumber;
  exports["ordString"] = ordString;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Array_ST = $PS["Data.Array.ST"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var uncons = $foreign.unconsImpl(Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x,
              tail: xs
          });
      };
  });
  var sortBy = function (comp) {
      return $foreign.sortByImpl(comp)(function (v) {
          if (v instanceof Data_Ordering.GT) {
              return 1;
          };
          if (v instanceof Data_Ordering.EQ) {
              return 0;
          };
          if (v instanceof Data_Ordering.LT) {
              return -1 | 0;
          };
          throw new Error("Failed pattern match at Data.Array (line 831, column 31 - line 834, column 11): " + [ v.constructor.name ]);
      });
  };
  var sortWith = function (dictOrd) {
      return function (f) {
          return sortBy(Data_Ord.comparing(dictOrd)(f));
      };
  };
  var snoc = function (xs) {
      return function (x) {
          return Data_Array_ST.withArray(Data_Array_ST.push(x))(xs)();
      };
  };
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };                                                                                     
  var init = function (xs) {
      if ($$null(xs)) {
          return Data_Maybe.Nothing.value;
      };
      if (Data_Boolean.otherwise) {
          return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));
      };
      throw new Error("Failed pattern match at Data.Array (line 340, column 1 - line 340, column 45): " + [ xs.constructor.name ]);
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var last = function (xs) {
      return index(xs)($foreign.length(xs) - 1 | 0);
  };
  var unsnoc = function (xs) {
      return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return function (v1) {
              return {
                  init: v,
                  last: v1
              };
          };
      })(init(xs)))(last(xs));
  };
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  var foldr = Data_Foldable.foldr(Data_Foldable.foldableArray);
  var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteAt = $foreign["_deleteAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteBy = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2.length === 0) {
                  return [  ];
              };
              return Data_Maybe.maybe(v2)(function (i) {
                  return Data_Maybe.fromJust()(deleteAt(i)(v2));
              })(findIndex(v(v1))(v2));
          };
      };
  };
  var $$delete = function (dictEq) {
      return deleteBy(Data_Eq.eq(dictEq));
  };
  var cons = function (x) {
      return function (xs) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ x ])(xs);
      };
  };
  exports["fromFoldable"] = fromFoldable;
  exports["cons"] = cons;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
  exports["unsnoc"] = unsnoc;
  exports["findIndex"] = findIndex;
  exports["deleteAt"] = deleteAt;
  exports["sortBy"] = sortBy;
  exports["sortWith"] = sortWith;
  exports["delete"] = $$delete;
  exports["reverse"] = $foreign.reverse;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Sub"] = $PS["Sub"] || {};
  var exports = $PS["Sub"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Array = $PS["Data.Array"];
  var Data_Batched = $PS["Data.Batched"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Effect = $PS["Effect"];
  var Producer = $PS["Producer"];          
  var SingleSub = function (x) {
      return x;
  };
  var ActiveSub = (function () {
      function ActiveSub(value0) {
          this.value0 = value0;
      };
      ActiveSub.create = function (value0) {
          return new ActiveSub(value0);
      };
      return ActiveSub;
  })();
  var unsafeDeleteAt = function (dictPartial) {
      return function (index) {
          return function (array) {
              var v = Data_Array.deleteAt(index)(array);
              if (v instanceof Data_Maybe.Just) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Sub (line 97, column 30 - line 98, column 14): " + [ v.constructor.name ]);
          };
      };
  };
  var launch = function (callback) {
      return function (v) {
          return function __do() {
              var canceler = Producer.produce(Producer.produceProducer)(v)(callback)();
              return new ActiveSub({
                  canceler: canceler,
                  sub: v
              });
          };
      };
  };
  var getCanceler = function (v) {
      return v.value0.canceler;
  }; 
  var $dollar_EqSingleSub_9 = Producer.eqProducer;
  var sameAsActive = function (v) {
      return function (ss) {
          return Data_Eq.eq($dollar_EqSingleSub_9)(v.value0.sub)(ss);
      };
  };
  var something = function (activeSubs) {
      return function (newSub) {
          return function (callback) {
              var go = function ($copy_current) {
                  return function ($copy_newSubs) {
                      return function ($copy_acc) {
                          var $tco_var_current = $copy_current;
                          var $tco_var_newSubs = $copy_newSubs;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(current, newSubs, acc) {
                              var v = Data_Array.uncons(current);
                              if (v instanceof Data_Maybe.Just) {
                                  var v1 = Data_Array.findIndex(sameAsActive(v.value0.head))(newSubs);
                                  if (v1 instanceof Data_Maybe.Just) {
                                      $tco_var_current = v.value0.tail;
                                      $tco_var_newSubs = unsafeDeleteAt()(v1.value0)(newSubs);
                                      $copy_acc = {
                                          keep: Data_Array.snoc(acc.keep)(v.value0.head),
                                          cancel: acc.cancel
                                      };
                                      return;
                                  };
                                  if (v1 instanceof Data_Maybe.Nothing) {
                                      $tco_var_current = v.value0.tail;
                                      $tco_var_newSubs = newSubs;
                                      $copy_acc = {
                                          keep: acc.keep,
                                          cancel: Control_Apply.applySecond(Effect.applyEffect)(acc.cancel)(getCanceler(v.value0.head))
                                      };
                                      return;
                                  };
                                  throw new Error("Failed pattern match at Sub (line 64, column 28 - line 77, column 60): " + [ v1.constructor.name ]);
                              };
                              if (v instanceof Data_Maybe.Nothing) {
                                  $tco_done = true;
                                  return function __do() {
                                      acc.cancel();
                                      var newAcitveSubs = Data_Traversable.traverse(Data_Traversable.traversableArray)(Effect.applicativeEffect)(launch(callback))(newSubs)();
                                      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc.keep)(newAcitveSubs);
                                  };
                              };
                              throw new Error("Failed pattern match at Sub (line 63, column 28 - line 83, column 41): " + [ v.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_current, $tco_var_newSubs, $copy_acc);
                          };
                          return $tco_result;
                      };
                  };
              };
              return go(activeSubs)(Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Batched.flatten(newSub)))({
                  keep: [  ],
                  cancel: Data_Monoid.mempty(Effect.monoidEffect(Data_Monoid.monoidUnit))
              });
          };
      };
  };
  exports["SingleSub"] = SingleSub;
  exports["something"] = something;
})(PS);
(function(exports) {
  exports.setProperty = prop => value => element => () => element[prop] = value;
})(PS["VirtualDom"] = PS["VirtualDom"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Control.Monad.Reader.Class"] = $PS["Control.Monad.Reader.Class"] || {};
  var exports = $PS["Control.Monad.Reader.Class"];       
  var MonadAsk = function (Monad0, ask) {
      this.Monad0 = Monad0;
      this.ask = ask;
  };
  var MonadReader = function (MonadAsk0, local) {
      this.MonadAsk0 = MonadAsk0;
      this.local = local;
  };                                                                           
  var local = function (dict) {
      return dict.local;
  };
  var ask = function (dict) {
      return dict.ask;
  };
  exports["ask"] = ask;
  exports["local"] = local;
  exports["MonadAsk"] = MonadAsk;
  exports["MonadReader"] = MonadReader;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Control.Monad.Trans.Class"] = $PS["Control.Monad.Trans.Class"] || {};
  var exports = $PS["Control.Monad.Trans.Class"];
  var MonadTrans = function (lift) {
      this.lift = lift;
  };
  var lift = function (dict) {
      return dict.lift;
  };
  exports["lift"] = lift;
  exports["MonadTrans"] = MonadTrans;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Control.Monad.Writer.Class"] = $PS["Control.Monad.Writer.Class"] || {};
  var exports = $PS["Control.Monad.Writer.Class"];   
  var MonadTell = function (Monad1, Semigroup0, tell) {
      this.Monad1 = Monad1;
      this.Semigroup0 = Semigroup0;
      this.tell = tell;
  };
  var tell = function (dict) {
      return dict.tell;
  };
  exports["tell"] = tell;
  exports["MonadTell"] = MonadTell;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Effect.Class"] = $PS["Effect.Class"] || {};
  var exports = $PS["Effect.Class"];
  var Control_Category = $PS["Control.Category"];
  var Effect = $PS["Effect"];                
  var MonadEffect = function (Monad0, liftEffect) {
      this.Monad0 = Monad0;
      this.liftEffect = liftEffect;
  };
  var monadEffectEffect = new MonadEffect(function () {
      return Effect.monadEffect;
  }, Control_Category.identity(Control_Category.categoryFn));
  var liftEffect = function (dict) {
      return dict.liftEffect;
  };
  exports["liftEffect"] = liftEffect;
  exports["MonadEffect"] = MonadEffect;
  exports["monadEffectEffect"] = monadEffectEffect;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Control.Monad.Reader.Trans"] = $PS["Control.Monad.Reader.Trans"] || {};
  var exports = $PS["Control.Monad.Reader.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = $PS["Control.Monad.Writer.Class"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect_Class = $PS["Effect.Class"];                
  var ReaderT = function (x) {
      return x;
  };
  var withReaderT = function (f) {
      return function (v) {
          return function ($63) {
              return v(f($63));
          };
      };
  };
  var runReaderT = function (v) {
      return v;
  }; 
  var monadTransReaderT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function ($64) {
          return ReaderT(Data_Function["const"]($64));
      };
  });
  var mapReaderT = function (f) {
      return function (v) {
          return function ($65) {
              return f(v($65));
          };
      };
  };
  var functorReaderT = function (dictFunctor) {
      return new Data_Functor.Functor((function () {
          var $66 = Data_Functor.map(dictFunctor);
          return function ($67) {
              return mapReaderT($66($67));
          };
      })());
  };
  var applyReaderT = function (dictApply) {
      return new Control_Apply.Apply(function () {
          return functorReaderT(dictApply.Functor0());
      }, function (v) {
          return function (v1) {
              return function (r) {
                  return Control_Apply.apply(dictApply)(v(r))(v1(r));
              };
          };
      });
  };
  var bindReaderT = function (dictBind) {
      return new Control_Bind.Bind(function () {
          return applyReaderT(dictBind.Apply0());
      }, function (v) {
          return function (k) {
              return function (r) {
                  return Control_Bind.bind(dictBind)(v(r))(function (a) {
                      var v1 = k(a);
                      return v1(r);
                  });
              };
          };
      });
  };
  var applicativeReaderT = function (dictApplicative) {
      return new Control_Applicative.Applicative(function () {
          return applyReaderT(dictApplicative.Apply0());
      }, (function () {
          var $71 = Control_Applicative.pure(dictApplicative);
          return function ($72) {
              return ReaderT(Data_Function["const"]($71($72)));
          };
      })());
  };
  var monadReaderT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeReaderT(dictMonad.Applicative0());
      }, function () {
          return bindReaderT(dictMonad.Bind1());
      });
  };
  var monadAskReaderT = function (dictMonad) {
      return new Control_Monad_Reader_Class.MonadAsk(function () {
          return monadReaderT(dictMonad);
      }, Control_Applicative.pure(dictMonad.Applicative0()));
  };
  var monadReaderReaderT = function (dictMonad) {
      return new Control_Monad_Reader_Class.MonadReader(function () {
          return monadAskReaderT(dictMonad);
      }, withReaderT);
  };
  var monadEffectReader = function (dictMonadEffect) {
      return new Effect_Class.MonadEffect(function () {
          return monadReaderT(dictMonadEffect.Monad0());
      }, (function () {
          var $74 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadEffect.Monad0());
          var $75 = Effect_Class.liftEffect(dictMonadEffect);
          return function ($76) {
              return $74($75($76));
          };
      })());
  };
  var monadTellReaderT = function (dictMonadTell) {
      return new Control_Monad_Writer_Class.MonadTell(function () {
          return monadReaderT(dictMonadTell.Monad1());
      }, dictMonadTell.Semigroup0, (function () {
          var $80 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadTell.Monad1());
          var $81 = Control_Monad_Writer_Class.tell(dictMonadTell);
          return function ($82) {
              return $80($81($82));
          };
      })());
  };
  exports["runReaderT"] = runReaderT;
  exports["functorReaderT"] = functorReaderT;
  exports["applicativeReaderT"] = applicativeReaderT;
  exports["bindReaderT"] = bindReaderT;
  exports["monadReaderT"] = monadReaderT;
  exports["monadTransReaderT"] = monadTransReaderT;
  exports["monadEffectReader"] = monadEffectReader;
  exports["monadAskReaderT"] = monadAskReaderT;
  exports["monadReaderReaderT"] = monadReaderReaderT;
  exports["monadTellReaderT"] = monadTellReaderT;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Control.Monad.Writer.Trans"] = $PS["Control.Monad.Writer.Trans"] || {};
  var exports = $PS["Control.Monad.Writer.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = $PS["Control.Monad.Writer.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Class = $PS["Effect.Class"];                
  var WriterT = function (x) {
      return x;
  };
  var runWriterT = function (v) {
      return v;
  }; 
  var monadTransWriterT = function (dictMonoid) {
      return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
          return function (m) {
              return Control_Bind.bind(dictMonad.Bind1())(m)(function (a) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid)));
              });
          };
      });
  };
  var mapWriterT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorWriterT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapWriterT(Data_Functor.map(dictFunctor)(function (v) {
              return new Data_Tuple.Tuple(f(v.value0), v.value1);
          }));
      });
  };
  var applyWriterT = function (dictSemigroup) {
      return function (dictApply) {
          return new Control_Apply.Apply(function () {
              return functorWriterT(dictApply.Functor0());
          }, function (v) {
              return function (v1) {
                  var k = function (v3) {
                      return function (v4) {
                          return new Data_Tuple.Tuple(v3.value0(v4.value0), Data_Semigroup.append(dictSemigroup)(v3.value1)(v4.value1));
                      };
                  };
                  return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(k)(v))(v1);
              };
          });
      };
  };
  var bindWriterT = function (dictSemigroup) {
      return function (dictBind) {
          return new Control_Bind.Bind(function () {
              return applyWriterT(dictSemigroup)(dictBind.Apply0());
          }, function (v) {
              return function (k) {
                  return WriterT(Control_Bind.bind(dictBind)(v)(function (v1) {
                      var v2 = k(v1.value0);
                      return Data_Functor.map((dictBind.Apply0()).Functor0())(function (v3) {
                          return new Data_Tuple.Tuple(v3.value0, Data_Semigroup.append(dictSemigroup)(v1.value1)(v3.value1));
                      })(v2);
                  }));
              };
          });
      };
  };
  var applicativeWriterT = function (dictMonoid) {
      return function (dictApplicative) {
          return new Control_Applicative.Applicative(function () {
              return applyWriterT(dictMonoid.Semigroup0())(dictApplicative.Apply0());
          }, function (a) {
              return WriterT(Control_Applicative.pure(dictApplicative)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
          });
      };
  };
  var monadWriterT = function (dictMonoid) {
      return function (dictMonad) {
          return new Control_Monad.Monad(function () {
              return applicativeWriterT(dictMonoid)(dictMonad.Applicative0());
          }, function () {
              return bindWriterT(dictMonoid.Semigroup0())(dictMonad.Bind1());
          });
      };
  };
  var monadEffectWriter = function (dictMonoid) {
      return function (dictMonadEffect) {
          return new Effect_Class.MonadEffect(function () {
              return monadWriterT(dictMonoid)(dictMonadEffect.Monad0());
          }, (function () {
              var $124 = Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadEffect.Monad0());
              var $125 = Effect_Class.liftEffect(dictMonadEffect);
              return function ($126) {
                  return $124($125($126));
              };
          })());
      };
  };
  var monadTellWriterT = function (dictMonoid) {
      return function (dictMonad) {
          return new Control_Monad_Writer_Class.MonadTell(function () {
              return monadWriterT(dictMonoid)(dictMonad);
          }, dictMonoid.Semigroup0, (function () {
              var $127 = Control_Applicative.pure(dictMonad.Applicative0());
              var $128 = Data_Tuple.Tuple.create(Data_Unit.unit);
              return function ($129) {
                  return WriterT($127($128($129)));
              };
          })());
      };
  };
  exports["runWriterT"] = runWriterT;
  exports["functorWriterT"] = functorWriterT;
  exports["applicativeWriterT"] = applicativeWriterT;
  exports["bindWriterT"] = bindWriterT;
  exports["monadWriterT"] = monadWriterT;
  exports["monadTransWriterT"] = monadTransWriterT;
  exports["monadEffectWriter"] = monadEffectWriter;
  exports["monadTellWriterT"] = monadTellWriterT;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.List"] = $PS["Data.List"] || {};
  var exports = $PS["Data.List"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];                                  
  var uncons = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just({
              head: v.value0,
              tail: v.value1
          });
      };
      throw new Error("Failed pattern match at Data.List (line 263, column 1 - line 263, column 66): " + [ v.constructor.name ]);
  };
  var toUnfoldable = function (dictUnfoldable) {
      return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
              return new Data_Tuple.Tuple(rec.head, rec.tail);
          })(uncons(xs));
      });
  };
  var tail = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value1);
      };
      throw new Error("Failed pattern match at Data.List (line 249, column 1 - line 249, column 43): " + [ v.constructor.name ]);
  };
  var reverse = (function () {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return acc;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List (line 372, column 3 - line 372, column 19): " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var $$null = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };                                                                                          
  var mapMaybe = function (f) {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return reverse(acc);
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      var v1 = f(v.value0);
                      if (v1 instanceof Data_Maybe.Nothing) {
                          $tco_var_acc = acc;
                          $copy_v = v.value1;
                          return;
                      };
                      if (v1 instanceof Data_Maybe.Just) {
                          $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
                          $copy_v = v.value1;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.List (line 423, column 5 - line 425, column 32): " + [ v1.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.List (line 421, column 3 - line 421, column 27): " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  };
  var head = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value0);
      };
      throw new Error("Failed pattern match at Data.List (line 234, column 1 - line 234, column 22): " + [ v.constructor.name ]);
  };
  var fromFoldable = function (dictFoldable) {
      return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
  };
  exports["toUnfoldable"] = toUnfoldable;
  exports["fromFoldable"] = fromFoldable;
  exports["null"] = $$null;
  exports["reverse"] = reverse;
  exports["mapMaybe"] = mapMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["PointFree"] = $PS["PointFree"] || {};
  var exports = $PS["PointFree"];
  var compose2 = function (f) {
      return function (g) {
          return function (x) {
              return function (y) {
                  return f(g(x)(y));
              };
          };
      };
  };
  var applySecond = function (f) {
      return function (x) {
          return function (y) {
              return f(y)(x);
          };
      };
  };
  exports["compose2"] = compose2;
  exports["applySecond"] = applySecond;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Diff"] = $PS["Data.Diff"] || {};
  var exports = $PS["Data.Diff"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var PointFree = $PS["PointFree"];                
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var Both = (function () {
      function Both(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Both.create = function (value0) {
          return function (value1) {
              return new Both(value0, value1);
          };
      };
      return Both;
  })();
  var Diffable = function (diff) {
      this.diff = diff;
  };
  var maybeCons = function (ma) {
      return function (list) {
          if (ma instanceof Data_Maybe.Just) {
              return new Data_List_Types.Cons(ma.value0, list);
          };
          if (ma instanceof Data_Maybe.Nothing) {
              return list;
          };
          throw new Error("Failed pattern match at Data.Diff (line 42, column 21 - line 44, column 18): " + [ ma.constructor.name ]);
      };
  };
  var diffList = function (dictMonad) {
      return function (f) {
          var go = function (acc) {
              return function (v) {
                  return function (v1) {
                      if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                          return Control_Bind.bind(dictMonad.Bind1())(f(new Both(v.value0, v1.value0)))(function (mc) {
                              return go(maybeCons(mc)(acc))(v.value1)(v1.value1);
                          });
                      };
                      if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Nil) {
                          return Control_Bind.bind(dictMonad.Bind1())(f(new Left(v.value0)))(function (mc) {
                              return go(maybeCons(mc)(acc))(v.value1)(Data_List_Types.Nil.value);
                          });
                      };
                      if (v instanceof Data_List_Types.Nil && v1 instanceof Data_List_Types.Cons) {
                          return Control_Bind.bind(dictMonad.Bind1())(f(new Right(v1.value0)))(function (mc) {
                              return go(maybeCons(mc)(acc))(Data_List_Types.Nil.value)(v1.value1);
                          });
                      };
                      if (v instanceof Data_List_Types.Nil && v1 instanceof Data_List_Types.Nil) {
                          return Control_Applicative.pure(dictMonad.Applicative0())(acc);
                      };
                      throw new Error("Failed pattern match at Data.Diff (line 29, column 12 - line 39, column 25): " + [ v.constructor.name, v1.constructor.name ]);
                  };
              };
          };
          return PointFree.compose2(Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_List.reverse))(go(Data_List_Types.Nil.value));
      };
  };
  var diff = function (dict) {
      return dict.diff;
  };
  var $dollar_DiffableList_2 = new Diffable(function (dictMonad) {
      return diffList(dictMonad);
  });
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["Both"] = Both;
  exports["diff"] = diff;
  exports["$_DiffableList_2"] = $dollar_DiffableList_2;
})(PS);
(function(exports) {
  "use strict";

  exports.mapWithIndexArray = function (f) {
    return function (xs) {
      var l = xs.length;
      var result = Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(i)(xs[i]);
      }
      return result;
    };
  };
})(PS["Data.FunctorWithIndex"] = PS["Data.FunctorWithIndex"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.FunctorWithIndex"] = $PS["Data.FunctorWithIndex"] || {};
  var exports = $PS["Data.FunctorWithIndex"];
  var $foreign = $PS["Data.FunctorWithIndex"];
  var Data_Functor = $PS["Data.Functor"];          
  var FunctorWithIndex = function (Functor0, mapWithIndex) {
      this.Functor0 = Functor0;
      this.mapWithIndex = mapWithIndex;
  };
  var mapWithIndex = function (dict) {
      return dict.mapWithIndex;
  };
  var functorWithIndexArray = new FunctorWithIndex(function () {
      return Data_Functor.functorArray;
  }, $foreign.mapWithIndexArray);
  exports["mapWithIndex"] = mapWithIndex;
  exports["functorWithIndexArray"] = functorWithIndexArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.FoldableWithIndex"] = $PS["Data.FoldableWithIndex"] || {};
  var exports = $PS["Data.FoldableWithIndex"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FunctorWithIndex = $PS["Data.FunctorWithIndex"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];              
  var FoldableWithIndex = function (Foldable0, foldMapWithIndex, foldlWithIndex, foldrWithIndex) {
      this.Foldable0 = Foldable0;
      this.foldMapWithIndex = foldMapWithIndex;
      this.foldlWithIndex = foldlWithIndex;
      this.foldrWithIndex = foldrWithIndex;
  };
  var foldrWithIndex = function (dict) {
      return dict.foldrWithIndex;
  };
  var foldMapWithIndexDefaultR = function (dictFoldableWithIndex) {
      return function (dictMonoid) {
          return function (f) {
              return foldrWithIndex(dictFoldableWithIndex)(function (i) {
                  return function (x) {
                      return function (acc) {
                          return Data_Semigroup.append(dictMonoid.Semigroup0())(f(i)(x))(acc);
                      };
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableWithIndexArray = new FoldableWithIndex(function () {
      return Data_Foldable.foldableArray;
  }, function (dictMonoid) {
      return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
  }, function (f) {
      return function (z) {
          var $164 = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (y) {
              return function (v) {
                  return f(v.value0)(y)(v.value1);
              };
          })(z);
          var $165 = Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Data_Tuple.Tuple.create);
          return function ($166) {
              return $164($165($166));
          };
      };
  }, function (f) {
      return function (z) {
          var $167 = Data_Foldable.foldr(Data_Foldable.foldableArray)(function (v) {
              return function (y) {
                  return f(v.value0)(v.value1)(y);
              };
          })(z);
          var $168 = Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Data_Tuple.Tuple.create);
          return function ($169) {
              return $167($168($169));
          };
      };
  });
  exports["FoldableWithIndex"] = FoldableWithIndex;
  exports["foldrWithIndex"] = foldrWithIndex;
  exports["foldableWithIndexArray"] = foldableWithIndexArray;
})(PS);
(function(exports) {
  /* eslint-disable no-eq-null, eqeqeq */

  "use strict";

  exports["null"] = null;
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  exports["null"] = $foreign["null"];
})(PS);
(function(exports) {
  "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
})(PS["Effect.Exception"] = PS["Effect.Exception"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Effect.Exception"] = $PS["Effect.Exception"] || {};
  var exports = $PS["Effect.Exception"];
  var $foreign = $PS["Effect.Exception"];
  var $$throw = function ($2) {
      return $foreign.throwException($foreign.error($2));
  };
  exports["throw"] = $$throw;
  exports["error"] = $foreign.error;
  exports["throwException"] = $foreign.throwException;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Map.Internal"] = $PS["Data.Map.Internal"] || {};
  var exports = $PS["Data.Map.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FoldableWithIndex = $PS["Data.FoldableWithIndex"];
  var Data_Function = $PS["Data.Function"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];                
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var values = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map.Internal (line 626, column 1 - line 626, column 40): " + [ v.constructor.name ]);
  };
  var singleton = function (k) {
      return function (v) {
          return new Two(Leaf.value, k, v, Leaf.value);
      };
  };
  var toUnfoldable = function (dictUnfoldable) {
      return function (m) {
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof Leaf) {
                          $copy_v = v.value1;
                          return;
                      };
                      if (v.value0 instanceof Two && (v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf)) {
                          $tco_done = true;
                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), v.value1));
                      };
                      if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
                          $tco_done = true;
                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                      };
                      if (v.value0 instanceof Two) {
                          $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                          return;
                      };
                      if (v.value0 instanceof Three) {
                          $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value6, v.value1)))));
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 591, column 18 - line 600, column 71): " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 590, column 3 - line 590, column 19): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
      };
  };
  var lookup = function (dictOrd) {
      return function (k) {
          var comp = Data_Ord.compare(dictOrd);
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Leaf) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Two) {
                      var v2 = comp(k)(v.value1);
                      if (v2 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      if (v2 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  if (v instanceof Three) {
                      var v3 = comp(k)(v.value1);
                      if (v3 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      var v4 = comp(k)(v.value4);
                      if (v4 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value5);
                      };
                      if (v3 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      if (v4 instanceof Data_Ordering.GT) {
                          $copy_v = v.value6;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 211, column 5 - line 211, column 22): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return go;
      };
  };
  var keys = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(keys(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value4))(keys(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map.Internal (line 620, column 1 - line 620, column 38): " + [ v.constructor.name ]);
  }; 
  var fromZipper = function ($copy_dictOrd) {
      return function ($copy_v) {
          return function ($copy_tree) {
              var $tco_var_dictOrd = $copy_dictOrd;
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictOrd, v, tree) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          return;
                      };
                      if (v.value0 instanceof TwoRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          return;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 432, column 3 - line 437, column 88): " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 429, column 1 - line 429, column 80): " + [ v.constructor.name, tree.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
              };
              return $tco_result;
          };
      };
  };
  var insert = function (dictOrd) {
      return function (k) {
          return function (v) {
              var up = function ($copy_v1) {
                  return function ($copy_v2) {
                      var $tco_var_v1 = $copy_v1;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(v1, v2) {
                          if (v1 instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                          };
                          if (v1 instanceof Data_List_Types.Cons) {
                              if (v1.value0 instanceof TwoLeft) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                              };
                              if (v1.value0 instanceof TwoRight) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                              };
                              if (v1.value0 instanceof ThreeLeft) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeMiddle) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeRight) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.Map.Internal (line 468, column 5 - line 473, column 108): " + [ v1.value0.constructor.name, v2.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 465, column 3 - line 465, column 56): " + [ v1.constructor.name, v2.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                      };
                      return $tco_result;
                  };
              };
              var comp = Data_Ord.compare(dictOrd);
              var down = function ($copy_ctx) {
                  return function ($copy_v1) {
                      var $tco_var_ctx = $copy_ctx;
                      var $tco_done1 = false;
                      var $tco_result;
                      function $tco_loop(ctx, v1) {
                          if (v1 instanceof Leaf) {
                              $tco_done1 = true;
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var v2 = comp(k)(v1.value1);
                              if (v2 instanceof Data_Ordering.EQ) {
                                  $tco_done1 = true;
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if (v2 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              $copy_v1 = v1.value3;
                              return;
                          };
                          if (v1 instanceof Three) {
                              var v3 = comp(k)(v1.value1);
                              if (v3 instanceof Data_Ordering.EQ) {
                                  $tco_done1 = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var v4 = comp(k)(v1.value4);
                              if (v4 instanceof Data_Ordering.EQ) {
                                  $tco_done1 = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if (v3 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value3;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              $copy_v1 = v1.value6;
                              return;
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 448, column 3 - line 448, column 55): " + [ ctx.constructor.name, v1.constructor.name ]);
                      };
                      while (!$tco_done1) {
                          $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                      };
                      return $tco_result;
                  };
              };
              return down(Data_List_Types.Nil.value);
          };
      };
  };
  var pop = function (dictOrd) {
      return function (k) {
          var up = function ($copy_ctxs) {
              return function ($copy_tree) {
                  var $tco_var_ctxs = $copy_ctxs;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctxs, tree) {
                      if (ctxs instanceof Data_List_Types.Nil) {
                          $tco_done = true;
                          return tree;
                      };
                      if (ctxs instanceof Data_List_Types.Cons) {
                          if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                              $tco_var_ctxs = ctxs.value1;
                              $copy_tree = new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
                              return;
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                              $tco_var_ctxs = ctxs.value1;
                              $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);
                              return;
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 525, column 9 - line 542, column 136): " + [ ctxs.value0.constructor.name, tree.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 522, column 5 - line 542, column 136): " + [ ctxs.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
                  };
                  return $tco_result;
              };
          };
          var removeMaxNode = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done1 = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
                          $tco_done1 = true;
                          return up(ctx)(Leaf.value);
                      };
                      if (m instanceof Two) {
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
                          $tco_done1 = true;
                          return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
                      };
                      if (m instanceof Three) {
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 554, column 5 - line 558, column 107): " + [ m.constructor.name ]);
                  };
                  while (!$tco_done1) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          var maxNode = function ($copy_m) {
              var $tco_done2 = false;
              var $tco_result;
              function $tco_loop(m) {
                  if (m instanceof Two && m.value3 instanceof Leaf) {
                      $tco_done2 = true;
                      return {
                          key: m.value1,
                          value: m.value2
                      };
                  };
                  if (m instanceof Two) {
                      $copy_m = m.value3;
                      return;
                  };
                  if (m instanceof Three && m.value6 instanceof Leaf) {
                      $tco_done2 = true;
                      return {
                          key: m.value4,
                          value: m.value5
                      };
                  };
                  if (m instanceof Three) {
                      $copy_m = m.value6;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 545, column 33 - line 549, column 45): " + [ m.constructor.name ]);
              };
              while (!$tco_done2) {
                  $tco_result = $tco_loop($copy_m);
              };
              return $tco_result;
          };
          var comp = Data_Ord.compare(dictOrd);
          var down = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done3 = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Leaf) {
                          $tco_done3 = true;
                          return Data_Maybe.Nothing.value;
                      };
                      if (m instanceof Two) {
                          var v = comp(k)(m.value1);
                          if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three) {
                          var leaves = (function () {
                              if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                                  return true;
                              };
                              return false;
                          })();
                          var v = comp(k)(m.value4);
                          var v3 = comp(k)(m.value1);
                          if (leaves && v3 instanceof Data_Ordering.EQ) {
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
                          };
                          if (leaves && v instanceof Data_Ordering.EQ) {
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
                          };
                          if (v3 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value3);
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
                          };
                          if (v3 instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value3;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 495, column 34 - line 518, column 80): " + [ m.constructor.name ]);
                  };
                  while (!$tco_done3) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          return down(Data_List_Types.Nil.value);
      };
  };
  var foldableMap = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return function (m) {
              return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(values(m));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(values(m));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(values(m));
          };
      };
  });
  var findMax = (function () {
      var go = function ($copy_v) {
          return function ($copy_v1) {
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, v1) {
                  if (v1 instanceof Leaf) {
                      $tco_done = true;
                      return v;
                  };
                  if (v1 instanceof Two) {
                      $tco_var_v = new Data_Maybe.Just({
                          key: v1.value1,
                          value: v1.value2
                      });
                      $copy_v1 = v1.value3;
                      return;
                  };
                  if (v1 instanceof Three) {
                      $tco_var_v = new Data_Maybe.Just({
                          key: v1.value4,
                          value: v1.value5
                      });
                      $copy_v1 = v1.value6;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 300, column 5 - line 300, column 22): " + [ v.constructor.name, v1.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_v, $copy_v1);
              };
              return $tco_result;
          };
      };
      return go(Data_Maybe.Nothing.value);
  })();
  var empty = Leaf.value;
  var $$delete = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
          };
      };
  };
  var asList = Control_Category.identity(Control_Category.categoryFn);
  var foldableWithIndexMap = new Data_FoldableWithIndex.FoldableWithIndex(function () {
      return foldableMap;
  }, function (dictMonoid) {
      return function (f) {
          return function (m) {
              return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(Data_Tuple.uncurry(f))(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldl(Data_List_Types.foldableList)((function () {
                  var $769 = Data_Function.flip(f);
                  return function ($770) {
                      return Data_Tuple.uncurry($769($770));
                  };
              })())(z)(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_Tuple.uncurry(f))(z)(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
          };
      };
  });
  var alter = function (dictOrd) {
      return function (f) {
          return function (k) {
              return function (m) {
                  var v = f(lookup(dictOrd)(k)(m));
                  if (v instanceof Data_Maybe.Nothing) {
                      return $$delete(dictOrd)(k)(m);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return insert(dictOrd)(k)(v.value0)(m);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 563, column 15 - line 565, column 25): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var unionWith = function (dictOrd) {
      return function (f) {
          return function (m1) {
              return function (m2) {
                  var go = function (m) {
                      return function (v) {
                          return alter(dictOrd)((function () {
                              var $777 = Data_Maybe.maybe(v.value1)(f(v.value1));
                              return function ($778) {
                                  return Data_Maybe.Just.create($777($778));
                              };
                          })())(v.value0)(m);
                      };
                  };
                  return Data_Foldable.foldl(Data_List_Types.foldableList)(go)(m2)(toUnfoldable(Data_List_Types.unfoldableList)(m1));
              };
          };
      };
  };
  var union = function (dictOrd) {
      return unionWith(dictOrd)(Data_Function["const"]);
  };
  exports["empty"] = empty;
  exports["singleton"] = singleton;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["findMax"] = findMax;
  exports["toUnfoldable"] = toUnfoldable;
  exports["delete"] = $$delete;
  exports["keys"] = keys;
  exports["union"] = union;
  exports["unionWith"] = unionWith;
  exports["foldableWithIndexMap"] = foldableWithIndexMap;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["MyMap"] = $PS["MyMap"] || {};
  var exports = $PS["MyMap"];
  var Data_Function = $PS["Data.Function"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var PointFree = $PS["PointFree"];
  var Safe_Coerce = $PS["Safe.Coerce"];
  var singleton = PointFree.compose2(Safe_Coerce.coerce())(Data_Map_Internal.singleton);
  var $dollar_SemigroupMyMap_2 = function (dictOrd) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Safe_Coerce.coerce()(Data_Map_Internal.unionWith(dictOrd)(Data_Function["const"])(v)(v1));
          };
      });
  };
  var $dollar_MonoidMyMap_3 = function (dictOrd) {
      return new Data_Monoid.Monoid(function () {
          return $dollar_SemigroupMyMap_2(dictOrd);
      }, Data_Map_Internal.empty);
  };
  var $dollar_FoldableWithIndexMyMap_5 = Data_Map_Internal.foldableWithIndexMap;
  exports["singleton"] = singleton;
  exports["$_SemigroupMyMap_2"] = $dollar_SemigroupMyMap_2;
  exports["$_MonoidMyMap_3"] = $dollar_MonoidMyMap_3;
  exports["$_FoldableWithIndexMyMap_5"] = $dollar_FoldableWithIndexMyMap_5;
})(PS);
(function(exports) {
  exports.add = tokens => dtl => () => dtl.add.apply(dtl, tokens);

  exports.remove = tokens => dtl => () => dtl.remove.apply(dtl, tokens);
})(PS["WHATWG.DOM.DOMTokenList"] = PS["WHATWG.DOM.DOMTokenList"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["WHATWG.DOM.DOMTokenList"] = $PS["WHATWG.DOM.DOMTokenList"] || {};
  var exports = $PS["WHATWG.DOM.DOMTokenList"];
  var $foreign = $PS["WHATWG.DOM.DOMTokenList"];
  exports["add"] = $foreign.add;
  exports["remove"] = $foreign.remove;
})(PS);
(function(exports) {
  exports.createElementImpl = localName => options => document => () => {
	  return document.createElement(localName, options);
  };

  exports.createTextNode = data => document => () => document.createTextNode(data);
})(PS["WHATWG.DOM.Document"] = PS["WHATWG.DOM.Document"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["WHATWG.DOM.Document"] = $PS["WHATWG.DOM.Document"] || {};
  var exports = $PS["WHATWG.DOM.Document"];
  var $foreign = $PS["WHATWG.DOM.Document"];
  var createElement = function (dictFFIOptions) {
      return $foreign.createElementImpl;
  };
  exports["createElement"] = createElement;
  exports["createTextNode"] = $foreign.createTextNode;
})(PS);
(function(exports) {
  exports.setAttribute = () => qualifiedName => value => element => () => {
	  return element.setAttribute(qualifiedName, value);
  };

  exports.removeAttribute = () => qualifiedName => element => () => element.removeAttribute(qualifiedName);
})(PS["WHATWG.DOM.Element"] = PS["WHATWG.DOM.Element"] || {});
(function(exports) {
  exports.instanceof = value => name => {
	  try {
		  return value instanceof window[name];
	  } catch (_) {
		  return false;
	  }
  };

  exports.unsafeGet = key => a => () => a[key];

  exports.unsafeGetPure = key => a => a[key];
})(PS["WHATWG.Internal"] = PS["WHATWG.Internal"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["WHATWG.Internal"] = $PS["WHATWG.Internal"] || {};
  var exports = $PS["WHATWG.Internal"];
  var $foreign = $PS["WHATWG.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var unsafeConvert = function (constructor) {
      return function (value) {
          var $0 = $foreign["instanceof"](value)(constructor);
          if ($0) {
              return Data_Maybe.Just.create(value);
          };
          return Data_Maybe.Nothing.value;
      };
  };
  exports["unsafeConvert"] = unsafeConvert;
  exports["unsafeGet"] = $foreign.unsafeGet;
  exports["unsafeGetPure"] = $foreign.unsafeGetPure;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["WHATWG.DOM.Element"] = $PS["WHATWG.DOM.Element"] || {};
  var exports = $PS["WHATWG.DOM.Element"];
  var $foreign = $PS["WHATWG.DOM.Element"];
  var WHATWG_Internal = $PS["WHATWG.Internal"];
  var classList = function (dictIsElement) {
      return WHATWG_Internal.unsafeGet("classList");
  };
  exports["classList"] = classList;
  exports["removeAttribute"] = $foreign.removeAttribute;
  exports["setAttribute"] = $foreign.setAttribute;
})(PS);
(function(exports) {
  exports.insertBefore = () => () => () => node => child => parent => () => {
	  return parent.insertBefore(node, child);
  };

  exports.appendChild = () => () => child => parent => () => {
	  return parent.appendChild(child);
  };

  exports.replaceChild = () => () => () => node => child => parent => () => {
	  return parent.replaceChild(node, child);
  };

  exports.removeChild = () => () => child => parent => () => {
	  return parent.removeChild(child);
  };
})(PS["WHATWG.DOM.Node"] = PS["WHATWG.DOM.Node"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["WHATWG.DOM.Node"] = $PS["WHATWG.DOM.Node"] || {};
  var exports = $PS["WHATWG.DOM.Node"];
  var $foreign = $PS["WHATWG.DOM.Node"];
  exports["appendChild"] = $foreign.appendChild;
  exports["insertBefore"] = $foreign.insertBefore;
  exports["removeChild"] = $foreign.removeChild;
  exports["replaceChild"] = $foreign.replaceChild;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["WHATWG.HTML.Types"] = $PS["WHATWG.HTML.Types"] || {};
  var exports = $PS["WHATWG.HTML.Types"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var WHATWG_Internal = $PS["WHATWG.Internal"];
  var toNode = function (dictIsNode) {
      return Unsafe_Coerce.unsafeCoerce;
  };
  var toMaybeHTMLElement = function (dictMaybeHTMLElement) {
      return WHATWG_Internal.unsafeConvert("HTMLElement");
  };
  var toEventTarget = function (dictIsEventTarget) {
      return Unsafe_Coerce.unsafeCoerce;
  };
  var toElement = function (dictIsElement) {
      return Unsafe_Coerce.unsafeCoerce;
  };
  exports["toEventTarget"] = toEventTarget;
  exports["toNode"] = toNode;
  exports["toElement"] = toElement;
  exports["toMaybeHTMLElement"] = toMaybeHTMLElement;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["VirtualDom"] = $PS["VirtualDom"] || {};
  var exports = $PS["VirtualDom"];
  var $foreign = $PS["VirtualDom"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Control_Monad_Reader_Trans = $PS["Control.Monad.Reader.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = $PS["Control.Monad.Writer.Class"];
  var Control_Monad_Writer_Trans = $PS["Control.Monad.Writer.Trans"];
  var Data_Batched = $PS["Data.Batched"];
  var Data_Diff = $PS["Data.Diff"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FoldableWithIndex = $PS["Data.FoldableWithIndex"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_JSValue = $PS["Data.JSValue"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var MyMap = $PS["MyMap"];
  var Safe_Coerce = $PS["Safe.Coerce"];
  var WHATWG_DOM_DOMTokenList = $PS["WHATWG.DOM.DOMTokenList"];
  var WHATWG_DOM_Document = $PS["WHATWG.DOM.Document"];
  var WHATWG_DOM_Element = $PS["WHATWG.DOM.Element"];
  var WHATWG_DOM_Node = $PS["WHATWG.DOM.Node"];
  var WHATWG_HTML_Types = $PS["WHATWG.HTML.Types"];                
  var Attr = (function () {
      function Attr(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Attr.create = function (value0) {
          return function (value1) {
              return new Attr(value0, value1);
          };
      };
      return Attr;
  })();
  var Prop = (function () {
      function Prop(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Prop.create = function (value0) {
          return function (value1) {
              return new Prop(value0, value1);
          };
      };
      return Prop;
  })();
  var AddClass = (function () {
      function AddClass(value0) {
          this.value0 = value0;
      };
      AddClass.create = function (value0) {
          return new AddClass(value0);
      };
      return AddClass;
  })();
  var Listener = (function () {
      function Listener(value0) {
          this.value0 = value0;
      };
      Listener.create = function (value0) {
          return new Listener(value0);
      };
      return Listener;
  })();
  var VElement = (function () {
      function VElement(value0) {
          this.value0 = value0;
      };
      VElement.create = function (value0) {
          return new VElement(value0);
      };
      return VElement;
  })();
  var KeyedElement = (function () {
      function KeyedElement(value0) {
          this.value0 = value0;
      };
      KeyedElement.create = function (value0) {
          return new KeyedElement(value0);
      };
      return KeyedElement;
  })();
  var VText = (function () {
      function VText(value0) {
          this.value0 = value0;
      };
      VText.create = function (value0) {
          return new VText(value0);
      };
      return VText;
  })();
  var Remove = (function () {
      function Remove(value0) {
          this.value0 = value0;
      };
      Remove.create = function (value0) {
          return new Remove(value0);
      };
      return Remove;
  })();
  var InsertLast = (function () {
      function InsertLast(value0) {
          this.value0 = value0;
      };
      InsertLast.create = function (value0) {
          return new InsertLast(value0);
      };
      return InsertLast;
  })();
  var InsertBefore = (function () {
      function InsertBefore(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      InsertBefore.create = function (value0) {
          return function (value1) {
              return new InsertBefore(value0, value1);
          };
      };
      return InsertBefore;
  })();
  var Switch = (function () {
      function Switch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Switch.create = function (value0) {
          return function (value1) {
              return new Switch(value0, value1);
          };
      };
      return Switch;
  })();
  var text = function ($220) {
      return VText.create((function (v) {
          return {
              text: v,
              node: Data_Maybe.Nothing.value
          };
      })($220));
  };
  var setAttributes = function (attribute) {
      return function (elem) {
          var go = function (acc) {
              return function (v) {
                  if (v instanceof Attr) {
                      return function __do() {
                          WHATWG_DOM_Element.setAttribute()(v.value0)(v.value1)(elem)();
                          return acc;
                      };
                  };
                  if (v instanceof Prop) {
                      return function __do() {
                          $foreign.setProperty(v.value0)(v.value1)(elem)();
                          return acc;
                      };
                  };
                  if (v instanceof AddClass) {
                      return function __do() {
                          Control_Bind.bind(Effect.bindEffect)(WHATWG_DOM_Element.classList()(elem))(WHATWG_DOM_DOMTokenList.add([ v.value0 ]))();
                          return acc;
                      };
                  };
                  if (v instanceof Listener) {
                      return Control_Applicative.pure(Effect.applicativeEffect)(Data_Semigroup.append(Data_Batched["$_SemigroupBatched_6"])(acc)(v.value0(WHATWG_HTML_Types.toEventTarget()(elem))));
                  };
                  throw new Error("Failed pattern match at VirtualDom (line 529, column 12 - line 539, column 65): " + [ v.constructor.name ]);
              };
          };
          return Data_Foldable.foldM(Data_List_Types.foldableList)(Effect.monadEffect)(go)(Data_Monoid.mempty(Data_Batched["$_MonoidBatched_7"]))(attribute);
      };
  };
  var removeAttribute = function (attr) {
      return function (elem) {
          if (attr instanceof Attr) {
              return WHATWG_DOM_Element.removeAttribute()(attr.value0)(elem);
          };
          if (attr instanceof Prop) {
              return $foreign.setProperty(attr.value0)(Data_JSValue.toJSValue(Data_Nullable["null"]))(elem);
          };
          if (attr instanceof AddClass) {
              return Control_Bind.bind(Effect.bindEffect)(WHATWG_DOM_Element.classList()(elem))(WHATWG_DOM_DOMTokenList.remove([ attr.value0 ]));
          };
          if (attr instanceof Listener) {
              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
          };
          throw new Error("Failed pattern match at VirtualDom (line 421, column 29 - line 425, column 26): " + [ attr.constructor.name ]);
      };
  };
  var noNodeError = function (dictMonadEffect) {
      return Effect_Class.liftEffect(dictMonadEffect)(Effect_Exception["throw"]("there is no node"));
  };
  var makeStyleNode = function (styleMap) {
      return new KeyedElement({
          tag: "style",
          styles: Data_List_Types.Nil.value,
          css: Data_Maybe.Nothing.value,
          attributes: Data_List_Types.Nil.value,
          children: Data_FoldableWithIndex.foldrWithIndex(MyMap["$_FoldableWithIndexMyMap_5"])(function (k) {
              return function (v) {
                  return function (acc) {
                      return new Data_List_Types.Cons(new Data_Tuple.Tuple(k, new VElement({
                          tag: "style",
                          styles: Data_List_Types.Nil.value,
                          css: Data_Maybe.Nothing.value,
                          attributes: Data_List_Types.Nil.value,
                          children: Control_Applicative.pure(Data_List_Types.applicativeList)(new VText({
                              text: v,
                              node: Data_Maybe.Nothing.value
                          })),
                          node: Data_Maybe.Nothing.value,
                          noDiff: false
                      })), acc);
                  };
              };
          })(Data_List_Types.Nil.value)(styleMap),
          node: Data_Maybe.Nothing.value
      });
  };
  var keyedElement = function (tag) {
      return function (attributes) {
          return function (children) {
              return new KeyedElement({
                  tag: tag,
                  styles: Data_List_Types.Nil.value,
                  css: Data_Maybe.Nothing.value,
                  attributes: attributes,
                  children: children,
                  node: Data_Maybe.Nothing.value
              });
          };
      };
  };
  var getNode = function (v) {
      if (v instanceof VElement) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(WHATWG_HTML_Types.toNode())(v.value0.node);
      };
      if (v instanceof KeyedElement) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(WHATWG_HTML_Types.toNode())(v.value0.node);
      };
      if (v instanceof VText) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(WHATWG_HTML_Types.toNode())(v.value0.node);
      };
      throw new Error("Failed pattern match at VirtualDom (line 435, column 11 - line 438, column 33): " + [ v.constructor.name ]);
  };
  var element = function (tag) {
      return function (attributes) {
          return function (children) {
              return new VElement({
                  tag: tag,
                  styles: Data_List_Types.Nil.value,
                  css: Data_Maybe.Nothing.value,
                  attributes: attributes,
                  children: children,
                  node: Data_Maybe.Nothing.value,
                  noDiff: false
              });
          };
      };
  };
  var changeParent = function (elem) {
      return function (v) {
          return {
              doc: v.doc,
              parent: elem
          };
      };
  };
  var placeNodeHelper = function (placer) {
      return function (v) {
          return function (traverser) {
              return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Control_Monad_Writer_Trans.monadWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.monadEffect))))(function (v1) {
                  return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Writer_Trans.monadEffectWriter(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect_Class.monadEffectEffect)))(WHATWG_DOM_Document.createElement()(v.tag)({})(v1.doc)))(function (elem) {
                      return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Writer_Trans.monadEffectWriter(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect_Class.monadEffectEffect)))(setAttributes(v.attributes)(elem)))(function (subs) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(Control_Monad_Writer_Class.tell(Control_Monad_Reader_Trans.monadTellReaderT(Control_Monad_Writer_Trans.monadTellWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.monadEffect)))(new Data_Tuple.Tuple(subs, Data_Monoid.mempty(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))))(function () {
                              return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Writer_Trans.monadEffectWriter(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect_Class.monadEffectEffect)))(placer({
                                  node: WHATWG_HTML_Types.toNode()(elem),
                                  parent: v1.parent
                              })))(function () {
                                  return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(Data_Traversable.traverse(Data_List_Types.traversableList)(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect)))((function () {
                                      var $222 = Control_Monad_Reader_Class.local(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Writer_Trans.monadWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.monadEffect)))(changeParent(elem));
                                      return function ($223) {
                                          return $222(traverser($223));
                                      };
                                  })())(v.children))(function (newChildren) {
                                      return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect)))(new Data_Tuple.Tuple(newChildren, elem));
                                  });
                              });
                          });
                      });
                  });
              });
          };
      };
  };
  var addCss = function (v) {
      if (v instanceof Data_Maybe.Just) {
          return Control_Monad_Writer_Class.tell(Control_Monad_Reader_Trans.monadTellReaderT(Control_Monad_Writer_Trans.monadTellWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.monadEffect)))(new Data_Tuple.Tuple(Data_Monoid.mempty(Data_Batched["$_MonoidBatched_7"]), Safe_Coerce.coerce()(v.value0)));
      };
      if (v instanceof Data_Maybe.Nothing) {
          return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect)))(Data_Unit.unit);
      };
      throw new Error("Failed pattern match at VirtualDom (line 508, column 10 - line 510, column 23): " + [ v.constructor.name ]);
  };
  var placeNode = function (placer) {
      return function (svn) {
          return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Control_Monad_Writer_Trans.monadWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.monadEffect))))(function (v) {
              if (svn instanceof VElement) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(addCss(svn.value0.css))(function () {
                      return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(placeNodeHelper(placer)(svn.value0)(addNode))(function (v1) {
                          return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect)))(VElement.create({
                              tag: svn.value0.tag,
                              styles: svn.value0.styles,
                              css: svn.value0.css,
                              attributes: svn.value0.attributes,
                              children: v1.value0,
                              node: new Data_Maybe.Just(v1.value1),
                              noDiff: svn.value0.noDiff
                          }));
                      });
                  });
              };
              if (svn instanceof KeyedElement) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(addCss(svn.value0.css))(function () {
                      return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(placeNodeHelper(placer)(svn.value0)(addKeyedNode))(function (v1) {
                          return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect)))(KeyedElement.create({
                              tag: svn.value0.tag,
                              styles: svn.value0.styles,
                              css: svn.value0.css,
                              attributes: svn.value0.attributes,
                              children: v1.value0,
                              node: new Data_Maybe.Just(v1.value1)
                          }));
                      });
                  });
              };
              if (svn instanceof VText) {
                  return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Writer_Trans.monadEffectWriter(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect_Class.monadEffectEffect)))(WHATWG_DOM_Document.createTextNode(svn.value0.text)(v.doc)))(function (node) {
                      return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Writer_Trans.monadEffectWriter(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect_Class.monadEffectEffect)))(placer({
                          node: WHATWG_HTML_Types.toNode()(node),
                          parent: v.parent
                      })))(function () {
                          return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect)))(new VText({
                              text: svn.value0.text,
                              node: new Data_Maybe.Just(node)
                          }));
                      });
                  });
              };
              throw new Error("Failed pattern match at VirtualDom (line 461, column 3 - line 481, column 53): " + [ svn.constructor.name ]);
          });
      };
  };
  var addNode = function (svn) {
      return placeNode(function (v) {
          return WHATWG_DOM_Node.appendChild()()(v.node)(v.parent);
      })(svn);
  };
  var addKeyedNode = function (v) {
      return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(addNode(v.value1))(function (addedVNode) {
          return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect)))(new Data_Tuple.Tuple(v.value0, addedVNode));
      });
  };
  var applyPatch = function (patch) {
      if (patch instanceof Remove) {
          return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Control_Monad_Writer_Trans.monadWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.monadEffect))))(function (v) {
              return Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Writer_Trans.monadEffectWriter(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect_Class.monadEffectEffect)))(function __do() {
                  WHATWG_DOM_Node.removeChild()()(patch.value0)(v.parent)();
                  return Data_Maybe.Nothing.value;
              });
          });
      };
      if (patch instanceof InsertLast) {
          return Data_Functor.map(Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Writer_Trans.functorWriterT(Effect.functorEffect)))(Data_Maybe.Just.create)(addNode(patch.value0));
      };
      if (patch instanceof InsertBefore) {
          return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Writer_Trans.functorWriterT(Effect.functorEffect)))(placeNode(function (v) {
              return WHATWG_DOM_Node.insertBefore()()()(v.node)(patch.value1)(v.parent);
          })(patch.value0))(Data_Maybe.Just.create);
      };
      if (patch instanceof Switch) {
          return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Control_Monad_Writer_Trans.monadWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.monadEffect))))(function (v) {
              return Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Writer_Trans.monadEffectWriter(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect_Class.monadEffectEffect)))(function __do() {
                  WHATWG_DOM_Node.insertBefore()()()(patch.value0)(patch.value1)(v.parent)();
                  return Data_Maybe.Nothing.value;
              });
          });
      };
      throw new Error("Failed pattern match at VirtualDom (line 131, column 20 - line 146, column 19): " + [ patch.constructor.name ]);
  };
  var removeVNode = function (svn) {
      return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(Data_Maybe.fromMaybe(noNodeError(Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Writer_Trans.monadEffectWriter(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect_Class.monadEffectEffect))))(Control_Bind.bind(Data_Maybe.bindMaybe)(getNode(svn))(function (node) {
          return Data_Maybe.Just.create(applyPatch(new Remove(node)));
      })))(function () {
          return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect)))(Data_Unit.unit);
      });
  };
  var replaceNode = function (oldNode) {
      return placeNode(function (v) {
          return WHATWG_DOM_Node.replaceChild()()()(v.node)(oldNode)(v.parent);
      });
  };
  var addAttribute = function (attr) {
      return function (elem) {
          if (attr instanceof Attr) {
              return Control_Monad_Trans_Class.lift(Control_Monad_Writer_Trans.monadTransWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString))))(Effect.monadEffect)(WHATWG_DOM_Element.setAttribute()(attr.value0)(attr.value1)(elem));
          };
          if (attr instanceof Prop) {
              return Control_Monad_Trans_Class.lift(Control_Monad_Writer_Trans.monadTransWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString))))(Effect.monadEffect)($foreign.setProperty(attr.value0)(attr.value1)(elem));
          };
          if (attr instanceof AddClass) {
              return Control_Monad_Trans_Class.lift(Control_Monad_Writer_Trans.monadTransWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString))))(Effect.monadEffect)(Control_Bind.bind(Effect.bindEffect)(WHATWG_DOM_Element.classList()(elem))(WHATWG_DOM_DOMTokenList.add([ attr.value0 ])));
          };
          if (attr instanceof Listener) {
              return Control_Monad_Writer_Class.tell(Control_Monad_Writer_Trans.monadTellWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.monadEffect))(new Data_Tuple.Tuple(attr.value0(WHATWG_HTML_Types.toEventTarget()(elem)), Data_Monoid.mempty(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString))));
          };
          throw new Error("Failed pattern match at VirtualDom (line 428, column 26 - line 432, column 66): " + [ attr.constructor.name ]);
      };
  };
  var diffAttributes = function (elem) {
      return Data_Diff.diff(Data_Diff["$_DiffableList_2"])(Control_Monad_Writer_Trans.monadWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.monadEffect))(function (v) {
          if (v instanceof Data_Diff.Left) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect))(Control_Monad_Trans_Class.lift(Control_Monad_Writer_Trans.monadTransWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString))))(Effect.monadEffect)(removeAttribute(v.value0)(elem)))(function () {
                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect))(Data_Maybe.Nothing.value);
              });
          };
          if (v instanceof Data_Diff.Right) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect))(addAttribute(v.value0)(elem))(function () {
                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect))(new Data_Maybe.Just(v.value0));
              });
          };
          if (v instanceof Data_Diff.Both) {
              var $$switch = Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect))(Control_Monad_Trans_Class.lift(Control_Monad_Writer_Trans.monadTransWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString))))(Effect.monadEffect)(removeAttribute(v.value0)(elem)))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect))(addAttribute(v.value1)(elem))(function () {
                      return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect))(new Data_Maybe.Just(v.value1));
                  });
              });
              if (v.value0 instanceof Attr && v.value1 instanceof Attr) {
                  var $113 = v.value0.value0 === v.value1.value0;
                  if ($113) {
                      var $114 = v.value0.value1 === v.value1.value1;
                      if ($114) {
                          return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect))(new Data_Maybe.Just(v.value0));
                      };
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect))(addAttribute(v.value1)(elem))(function () {
                          return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect))(new Data_Maybe.Just(v.value1));
                      });
                  };
                  return $$switch;
              };
              if (v.value0 instanceof AddClass && v.value1 instanceof AddClass) {
                  var $119 = v.value0.value0 === v.value1.value0;
                  if ($119) {
                      return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect))(new Data_Maybe.Just(v.value0));
                  };
                  return $$switch;
              };
              if (v.value0 instanceof Prop && v.value1 instanceof Prop) {
                  var $122 = v.value0.value0 === v.value1.value0;
                  if ($122) {
                      var $123 = Data_Eq.eq(Data_JSValue["$_EqJSValue_0"])(v.value0.value1)(v.value1.value1);
                      if ($123) {
                          return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect))(new Data_Maybe.Just(v.value0));
                      };
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect))(addAttribute(v.value1)(elem))(function () {
                          return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect))(new Data_Maybe.Just(v.value1));
                      });
                  };
                  return $$switch;
              };
              return $$switch;
          };
          throw new Error("Failed pattern match at VirtualDom (line 378, column 7 - line 417, column 23): " + [ v.constructor.name ]);
      });
  };
  var vDomDiff = Data_Diff.diff(Data_Diff["$_DiffableList_2"])(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Writer_Trans.monadWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.monadEffect)))(function (v) {
      if (v instanceof Data_Diff.Left) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(removeVNode(v.value0))(function () {
              return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect)))(Data_Maybe.Nothing.value);
          });
      };
      if (v instanceof Data_Diff.Right) {
          return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(addNode(v.value0))(function (singleNode) {
              return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect)))(new Data_Maybe.Just(singleNode));
          });
      };
      if (v instanceof Data_Diff.Both) {
          return Data_Functor.map(Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Writer_Trans.functorWriterT(Effect.functorEffect)))(Data_Maybe.Just.create)(diffSingle(v.value0)(v.value1));
      };
      throw new Error("Failed pattern match at VirtualDom (line 213, column 7 - line 221, column 40): " + [ v.constructor.name ]);
  });
  var keyedDiffReplace = function (vnode1) {
      return function (v) {
          return function (tail1) {
              return function (tail2) {
                  return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(diffSingle(vnode1)(v.value1))(function (newVNode) {
                      return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(keyedDiff(tail1)(tail2))(function (rest) {
                          return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect)))(new Data_List_Types.Cons(new Data_Tuple.Tuple(v.value0, newVNode), rest));
                      });
                  });
              };
          };
      };
  };
  var keyedDiffRemove = function (removeMe) {
      return function (oldVNode) {
          return function (v) {
              return function (tail1) {
                  return function (tail2) {
                      return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(diffSingle(oldVNode)(v.value1))(function (newVNodeNoded) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(removeVNode(removeMe))(function () {
                              return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(keyedDiff(tail1)(tail2))(function (rest) {
                                  return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect)))(new Data_List_Types.Cons(new Data_Tuple.Tuple(v.value0, newVNodeNoded), rest));
                              });
                          });
                      });
                  };
              };
          };
      };
  };
  var keyedDiffInsertBefore = function (v) {
      return function (newVNode1$prime) {
          return function (v1) {
              return function (tail1) {
                  return function (tail2) {
                      return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(diffSingle(v.value1)(newVNode1$prime))(function (newVNode1) {
                          return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))((function () {
                              var v2 = getNode(newVNode1);
                              if (v2 instanceof Data_Maybe.Just) {
                                  return Data_Functor.map(Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Writer_Trans.functorWriterT(Effect.functorEffect)))(Data_Maybe.fromMaybe(v1.value1))(applyPatch(new InsertBefore(v1.value1, v2.value0)));
                              };
                              if (v2 instanceof Data_Maybe.Nothing) {
                                  return noNodeError(Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Writer_Trans.monadEffectWriter(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect_Class.monadEffectEffect)));
                              };
                              throw new Error("Failed pattern match at VirtualDom (line 309, column 16 - line 311, column 27): " + [ v2.constructor.name ]);
                          })())(function (newVNode2) {
                              return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(keyedDiff(tail1)(tail2))(function (rest) {
                                  return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect)))(new Data_List_Types.Cons(new Data_Tuple.Tuple(v1.value0, newVNode2), new Data_List_Types.Cons(new Data_Tuple.Tuple(v.value0, newVNode1), rest)));
                              });
                          });
                      });
                  };
              };
          };
      };
  };
  var keyedDiff = function (v) {
      return function (v1) {
          if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
              var $163 = v.value0.value0 === v1.value0.value0;
              if ($163) {
                  return keyedDiffReplace(v.value0.value1)(v1.value0)(v.value1)(v1.value1);
              };
              if (v.value1 instanceof Data_List_Types.Cons && v1.value1 instanceof Data_List_Types.Cons) {
                  var $166 = v.value0.value0 === Data_Tuple.fst(v1.value1.value0);
                  if ($166) {
                      var $167 = v1.value0.value0 === Data_Tuple.fst(v.value1.value0);
                      if ($167) {
                          return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(diffSingle(Data_Tuple.snd(v.value1.value0))(v1.value0.value1))(function (newKey1VNode) {
                              return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(diffSingle(v.value0.value1)(Data_Tuple.snd(v1.value1.value0)))(function (newKey2VNode) {
                                  return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(Data_Maybe.fromMaybe(noNodeError(Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Writer_Trans.monadEffectWriter(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect_Class.monadEffectEffect))))(Control_Bind.bind(Data_Maybe.bindMaybe)(getNode(newKey1VNode))(function (node1) {
                                      return Control_Bind.bind(Data_Maybe.bindMaybe)(getNode(newKey2VNode))(function (node2) {
                                          return Data_Maybe.Just.create(applyPatch(new Switch(node1, node2)));
                                      });
                                  })))(function () {
                                      return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(keyedDiff(v.value1.value1)(v1.value1.value1))(function (rest) {
                                          return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect)))(new Data_List_Types.Cons(new Data_Tuple.Tuple(v1.value0.value0, newKey1VNode), new Data_List_Types.Cons(new Data_Tuple.Tuple(v.value0.value0, newKey2VNode), rest)));
                                      });
                                  });
                              });
                          });
                      };
                      return keyedDiffInsertBefore(v.value0)(Data_Tuple.snd(v1.value1.value0))(v1.value0)(v.value1)(v1.value1.value1);
                  };
                  var $168 = v1.value0.value0 === Data_Tuple.fst(v.value1.value0);
                  if ($168) {
                      return keyedDiffRemove(v.value0.value1)(Data_Tuple.snd(v.value1.value0))(v1.value0)(v.value1.value1)(v1.value1);
                  };
                  return keyedDiffReplace(v.value0.value1)(v1.value0)(v.value1)(v1.value1);
              };
              if (v.value1 instanceof Data_List_Types.Cons && v1.value1 instanceof Data_List_Types.Nil) {
                  var $173 = v1.value0.value0 === Data_Tuple.fst(v.value1.value0);
                  if ($173) {
                      return keyedDiffRemove(v.value0.value1)(Data_Tuple.snd(v.value1.value0))(v1.value0)(v.value1.value1)(v1.value1);
                  };
                  return keyedDiffReplace(v.value0.value1)(v1.value0)(v.value1)(v1.value1);
              };
              if (v.value1 instanceof Data_List_Types.Nil && v1.value1 instanceof Data_List_Types.Cons) {
                  var $176 = v.value0.value0 === Data_Tuple.fst(v1.value1.value0);
                  if ($176) {
                      return keyedDiffInsertBefore(v.value0)(Data_Tuple.snd(v1.value1.value0))(v1.value0)(v.value1)(v1.value1.value1);
                  };
                  return keyedDiffReplace(v.value0.value1)(v1.value0)(v.value1)(v1.value1);
              };
              if (v.value1 instanceof Data_List_Types.Nil && v1.value1 instanceof Data_List_Types.Nil) {
                  return keyedDiffReplace(v.value0.value1)(v1.value0)(v.value1)(v1.value1);
              };
              throw new Error("Failed pattern match at VirtualDom (line 238, column 12 - line 267, column 62): " + [ v.value1.constructor.name, v1.value1.constructor.name ]);
          };
          if (v1 instanceof Data_List_Types.Nil) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(Data_Foldable.traverse_(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect)))(Data_List_Types.foldableList)(function ($224) {
                  return removeVNode(Data_Tuple.snd($224));
              })(v))(function () {
                  return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect)))(Data_Monoid.mempty(Data_List_Types.monoidList));
              });
          };
          if (v instanceof Data_List_Types.Nil) {
              return Data_Traversable.traverse(Data_List_Types.traversableList)(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect)))(addKeyedNode)(v1);
          };
          throw new Error("Failed pattern match at VirtualDom (line 229, column 13 - line 271, column 46): " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var diffSingle = function (svn1) {
      return function (svn2) {
          var replace = (function () {
              var v = getNode(svn1);
              if (v instanceof Data_Maybe.Just) {
                  return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(replaceNode(v.value0)(svn2))(function (svn) {
                      return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect)))(svn);
                  });
              };
              if (v instanceof Data_Maybe.Nothing) {
                  return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect)))(svn2);
              };
              throw new Error("Failed pattern match at VirtualDom (line 322, column 15 - line 326, column 27): " + [ v.constructor.name ]);
          })();
          if (svn1 instanceof VElement && svn2 instanceof VElement) {
              var $191 = svn1.value0.tag === svn2.value0.tag;
              if ($191) {
                  if (svn1.value0.noDiff) {
                      return replace;
                  };
                  return Data_Maybe.fromMaybe(replace)(Control_Bind.bind(Data_Maybe.bindMaybe)(svn1.value0.node)(function (elem) {
                      return new Data_Maybe.Just(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(addCss(svn2.value0.css))(function () {
                          return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Control_Monad_Writer_Trans.monadWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.monadEffect))(diffAttributes(elem)(svn1.value0.attributes)(svn2.value0.attributes)))(function (attributes) {
                              return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(Control_Monad_Reader_Class.local(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Writer_Trans.monadWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.monadEffect)))(changeParent(elem))(vDomDiff(svn1.value0.children)(svn2.value0.children)))(function (children) {
                                  return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect)))(new VElement({
                                      tag: svn1.value0.tag,
                                      styles: svn1.value0.styles,
                                      css: svn1.value0.css,
                                      attributes: attributes,
                                      children: children,
                                      node: svn1.value0.node,
                                      noDiff: svn1.value0.noDiff
                                  }));
                              });
                          });
                      }));
                  }));
              };
              return replace;
          };
          if (svn1 instanceof KeyedElement && svn2 instanceof KeyedElement) {
              var $195 = svn1.value0.tag === svn2.value0.tag;
              if ($195) {
                  return Data_Maybe.fromMaybe(replace)(Control_Bind.bind(Data_Maybe.bindMaybe)(svn1.value0.node)(function (elem) {
                      return new Data_Maybe.Just(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(addCss(svn2.value0.css))(function () {
                          return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Control_Monad_Writer_Trans.monadWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.monadEffect))(diffAttributes(elem)(svn1.value0.attributes)(svn2.value0.attributes)))(function (attributes) {
                              return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Writer_Trans.bindWriterT(Data_Tuple.semigroupTuple(Data_Batched["$_SemigroupBatched_6"])(MyMap["$_SemigroupMyMap_2"](Data_Ord.ordString)))(Effect.bindEffect)))(Control_Monad_Reader_Class.local(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Writer_Trans.monadWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.monadEffect)))(changeParent(elem))(keyedDiff(svn1.value0.children)(svn2.value0.children)))(function (children) {
                                  return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect)))(new KeyedElement({
                                      tag: svn1.value0.tag,
                                      styles: svn1.value0.styles,
                                      css: svn1.value0.css,
                                      attributes: attributes,
                                      children: children,
                                      node: svn1.value0.node
                                  }));
                              });
                          });
                      }));
                  }));
              };
              return replace;
          };
          if (svn1 instanceof VText && svn2 instanceof VText) {
              var $198 = svn1.value0.text === svn2.value0.text;
              if ($198) {
                  return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Writer_Trans.applicativeWriterT(Data_Tuple.monoidTuple(Data_Batched["$_MonoidBatched_7"])(MyMap["$_MonoidMyMap_3"](Data_Ord.ordString)))(Effect.applicativeEffect)))(svn1);
              };
              return replace;
          };
          return replace;
      };
  };
  var render = function (doc) {
      return function (parents) {
          return function (oldVNodes) {
              return function (newVNodes) {
                  return function __do() {
                      var v = Control_Monad_Writer_Trans.runWriterT(Control_Monad_Reader_Trans.runReaderT(vDomDiff(oldVNodes.body)(newVNodes.body))({
                          doc: doc,
                          parent: parents.body
                      }))();
                      var headVdom = Data_Functor.map(Effect.functorEffect)(Data_Tuple.fst)(Control_Monad_Writer_Trans.runWriterT(Control_Monad_Reader_Trans.runReaderT(vDomDiff(oldVNodes.head)(new Data_List_Types.Cons(makeStyleNode(Safe_Coerce.coerce()(v.value1.value1)), newVNodes.head)))({
                          doc: doc,
                          parent: parents.head
                      })))();
                      return new Data_Tuple.Tuple({
                          head: headVdom,
                          body: v.value0
                      }, v.value1.value0);
                  };
              };
          };
      };
  };
  exports["VElement"] = VElement;
  exports["text"] = text;
  exports["element"] = element;
  exports["keyedElement"] = keyedElement;
  exports["Attr"] = Attr;
  exports["Prop"] = Prop;
  exports["AddClass"] = AddClass;
  exports["Listener"] = Listener;
  exports["render"] = render;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["WHATWG.DOM.Event"] = $PS["WHATWG.DOM.Event"] || {};
  var exports = $PS["WHATWG.DOM.Event"];
  var WHATWG_Internal = $PS["WHATWG.Internal"];                
  var targetNullable = function (dictIsEvent) {
      return WHATWG_Internal.unsafeGetPure("target");
  };
  var unsafeTarget = function (dictIsEvent) {
      var $6 = targetNullable();
      return function ($7) {
          return $6($7);
      };
  };
  exports["unsafeTarget"] = unsafeTarget;
})(PS);
(function(exports) {
  exports.addEventListener = () => () => type => callback => options => target => () => {
	  target.addEventListener(type, callback, options);
  };

  exports.removeEventListener = () => () => type => callback => options => target => () => {
	  target.removeEventListener(type, callback, options);
  };
})(PS["WHATWG.DOM.EventTarget"] = PS["WHATWG.DOM.EventTarget"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["WHATWG.DOM.EventTarget"] = $PS["WHATWG.DOM.EventTarget"] || {};
  var exports = $PS["WHATWG.DOM.EventTarget"];
  var $foreign = $PS["WHATWG.DOM.EventTarget"];
  exports["addEventListener"] = $foreign.addEventListener;
  exports["removeEventListener"] = $foreign.removeEventListener;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Attribute"] = $PS["Attribute"] || {};
  var exports = $PS["Attribute"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Batched = $PS["Data.Batched"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_JSValue = $PS["Data.JSValue"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Effect = $PS["Effect"];
  var Effect_Uncurried = $PS["Effect.Uncurried"];
  var Producer = $PS["Producer"];
  var RefEq = $PS["RefEq"];
  var Sub = $PS["Sub"];
  var VirtualDom = $PS["VirtualDom"];
  var WHATWG_DOM_Event = $PS["WHATWG.DOM.Event"];
  var WHATWG_DOM_EventTarget = $PS["WHATWG.DOM.EventTarget"];
  var WHATWG_Internal = $PS["WHATWG.Internal"];
  var value = (function () {
      var $19 = VirtualDom.Prop.create("value");
      return function ($20) {
          return Data_Batched.Single.create($19(Data_JSValue.toJSValue($20)));
      };
  })();
  var onInputRefEq = function (toMsg) {
      return function (event) {
          return Data_Functor.mapFlipped(Effect.functorEffect)(WHATWG_Internal.unsafeGet("value")(WHATWG_DOM_Event.unsafeTarget()(event)))(Producer.produce(Producer.produceProducer)(toMsg));
      };
  };   
  var makeListener = function (toEventCallback) {
      return function (targ) {
          return function (event) {
              return function (send) {
                  var callback = Effect_Uncurried.mkEffectFn1(toEventCallback(send));
                  return function __do() {
                      WHATWG_DOM_EventTarget.addEventListener()()(event)(callback)({})(targ)();
                      return WHATWG_DOM_EventTarget.removeEventListener()()(event)(callback)({})(targ);
                  };
              };
          };
      };
  };
  var onRefEq = function (handlerP) {
      return function (v) {
          return makeListener(Data_Function.flip((function () {
              var $121 = Control_Bind.bind(Effect.bindEffect);
              var $122 = Producer.produce(Producer.produceProducer)(handlerP);
              return function ($123) {
                  return $121($122($123));
              };
          })()))(v.value0);
      };
  };
  var on = function (dictProduce) {
      return function (eventName) {
          return function (toMsg) {
              return Data_Batched.Single.create(new VirtualDom.Listener(function (targ) {
                  return Data_Batched.Single.create(Sub.SingleSub(Producer.producer3(Data_Tuple.eqTuple(Producer.eqProducer)(Data_Tuple.eqTuple(RefEq.eqRefEq)(Data_Eq.eqString)))(onRefEq)(Producer.lift(dictProduce)(toMsg))(new RefEq.RefEq(targ))(eventName)));
              }));
          };
      };
  };
  var onInput = function (dictProduce) {
      var $124 = on(Producer.produceProducer)("input");
      var $125 = Producer.producer(Producer.eqProducer)(onInputRefEq);
      var $126 = Producer.lift(dictProduce);
      return function ($127) {
          return $124($125($126($127)));
      };
  };
  var on_RefEq = function (msg) {
      return function (v) {
          return makeListener(function (send) {
              return function (v1) {
                  return send(Producer.produce(Producer.produceProducer)(msg));
              };
          })(v.value0);
      };
  };
  var on_ = function (dictProduce) {
      return function (eventName) {
          return function (msg) {
              return Data_Batched.Single.create(new VirtualDom.Listener(function (targ) {
                  return Data_Batched.Single.create(Sub.SingleSub(Producer.producer3(Data_Tuple.eqTuple(Producer.eqProducer)(Data_Tuple.eqTuple(RefEq.eqRefEq)(Data_Eq.eqString)))(on_RefEq)(Producer.lift(dictProduce)(msg))(new RefEq.RefEq(targ))(eventName)));
              }));
          };
      };
  };
  var onClick = function (dictProduce) {
      return on_(dictProduce)("click");
  };   
  var id = (function () {
      var $168 = VirtualDom.Attr.create("id");
      return function ($169) {
          return Data_Batched.Single.create($168($169));
      };
  })();
  exports["value"] = value;
  exports["id"] = id;
  exports["onClick"] = onClick;
  exports["onInput"] = onInput;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Identity"] = $PS["Data.Identity"] || {};
  var exports = $PS["Data.Identity"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Functor = $PS["Data.Functor"];          
  var Identity = function (x) {
      return x;
  };
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (m) {
          return f(m);
      };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  exports["functorIdentity"] = functorIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var note = function (a) {
      return Data_Maybe.maybe(new Left(a))(Right.create);
  }; 
  var functorEither = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof Left) {
              return new Left(m.value0);
          };
          if (m instanceof Right) {
              return new Right(f(m.value0));
          };
          throw new Error("Failed pattern match at Data.Either (line 31, column 1 - line 31, column 52): " + [ m.constructor.name ]);
      };
  });
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var hush = either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindEither = new Control_Bind.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (v) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  var applicativeEither = new Control_Applicative.Applicative(function () {
      return applyEither;
  }, Right.create);
  var altEither = new Control_Alt.Alt(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return v1;
          };
          return v;
      };
  });
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["note"] = note;
  exports["hush"] = hush;
  exports["functorEither"] = functorEither;
  exports["applicativeEither"] = applicativeEither;
  exports["altEither"] = altEither;
  exports["bindEither"] = bindEither;
})(PS);
(function(exports) {
  "use strict";

  // module Partial.Unsafe

  exports._unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  "use strict";

  // module Partial

  exports._crashWith = function (msg) {
    throw new Error(msg);
  };
})(PS["Partial"] = PS["Partial"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Partial"] = $PS["Partial"] || {};
  var exports = $PS["Partial"];
  var $foreign = $PS["Partial"];         
  var crashWith = function (dictPartial) {
      return $foreign["_crashWith"];
  };
  exports["crashWith"] = crashWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Partial.Unsafe"] = $PS["Partial.Unsafe"] || {};
  var exports = $PS["Partial.Unsafe"];
  var $foreign = $PS["Partial.Unsafe"];
  var Partial = $PS["Partial"];                
  var unsafePartial = $foreign["_unsafePartial"];
  var unsafeCrashWith = function (msg) {
      return unsafePartial(function (dictPartial) {
          return Partial.crashWith()(msg);
      });
  };
  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.List.NonEmpty"] = $PS["Data.List.NonEmpty"] || {};
  var exports = $PS["Data.List.NonEmpty"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var wrappedOperation = function (name) {
      return function (f) {
          return function (v) {
              var v1 = f(new Data_List_Types.Cons(v.value0, v.value1));
              if (v1 instanceof Data_List_Types.Cons) {
                  return new Data_NonEmpty.NonEmpty(v1.value0, v1.value1);
              };
              if (v1 instanceof Data_List_Types.Nil) {
                  return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
              };
              throw new Error("Failed pattern match at Data.List.NonEmpty (line 97, column 3 - line 99, column 81): " + [ v1.constructor.name ]);
          };
      };
  };
  var reverse = wrappedOperation("reverse")(Data_List.reverse);
  var head = function (v) {
      return v.value0;
  };
  var fromList = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(v.value0, v.value1));
      };
      throw new Error("Failed pattern match at Data.List.NonEmpty (line 126, column 1 - line 126, column 57): " + [ v.constructor.name ]);
  };
  var cons = function (y) {
      return function (v) {
          return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));
      };
  };
  exports["fromList"] = fromList;
  exports["cons"] = cons;
  exports["head"] = head;
  exports["reverse"] = reverse;
})(PS);
(function(exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];
  var Show = function (show) {
      this.show = show;
  };                                                 
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };
  exports["show"] = show;
  exports["showInt"] = showInt;
})(PS);
(function(exports) {
  // https://github.com/garycourt/murmurhash-js/blob/0197ce38bedac0e05f40b9d7152095d06db8292c/murmurhash3_gc.js

  /**
 * JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)
 * 
 * @author <a href="mailto:gary.court@gmail.com">Gary Court</a>
 * @see http://github.com/garycourt/murmurhash-js
 * @author <a href="mailto:aappleby@gmail.com">Austin Appleby</a>
 * @see http://sites.google.com/site/murmurhash/
 * 
 * @param {string} key ASCII only
 * @param {number} seed Positive integer only
 * @return {number} 32-bit positive integer hash
 */  

  exports.hashImpl = function(key, seed) {
	  var remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i;

	  remainder = key.length & 3; // key.length % 4
	  bytes = key.length - remainder;
	  h1 = seed;
	  c1 = 0xcc9e2d51;
	  c2 = 0x1b873593;
	  i = 0;

	  while (i < bytes) {
	  	k1 =
	  	  ((key.charCodeAt(i) & 0xff)) |
	  	  ((key.charCodeAt(++i) & 0xff) << 8) |
	  	  ((key.charCodeAt(++i) & 0xff) << 16) |
	  	  ((key.charCodeAt(++i) & 0xff) << 24);
		  ++i;

		  k1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;
		  k1 = (k1 << 15) | (k1 >>> 17);
		  k1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;

		  h1 ^= k1;
          h1 = (h1 << 13) | (h1 >>> 19);
		  h1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;
		  h1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));
	  }

	  k1 = 0;

	  switch (remainder) {
		  case 3: k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;
		  case 2: k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;
		  case 1: k1 ^= (key.charCodeAt(i) & 0xff);

		  k1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;
		  k1 = (k1 << 15) | (k1 >>> 17);
		  k1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;
		  h1 ^= k1;
	  }

	  h1 ^= key.length;

	  h1 ^= h1 >>> 16;
	  h1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;
	  h1 ^= h1 >>> 13;
	  h1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;
	  h1 ^= h1 >>> 16;

	  return h1 >>> 0;
  }
})(PS["Murmur3"] = PS["Murmur3"] || {});
(function(exports) {
  "use strict";

  exports.runFn2 = function (fn) {
    return function (a) {
      return function (b) {
        return fn(a, b);
      };
    };
  };

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Function.Uncurried"] = $PS["Data.Function.Uncurried"] || {};
  var exports = $PS["Data.Function.Uncurried"];
  var $foreign = $PS["Data.Function.Uncurried"];
  exports["runFn2"] = $foreign.runFn2;
  exports["runFn4"] = $foreign.runFn4;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Murmur3"] = $PS["Murmur3"] || {};
  var exports = $PS["Murmur3"];
  var $foreign = $PS["Murmur3"];
  var Data_Function = $PS["Data.Function"];
  var Data_Function_Uncurried = $PS["Data.Function.Uncurried"];                
  var hash = Data_Function.flip(Data_Function_Uncurried.runFn2($foreign.hashImpl));
  exports["hash"] = hash;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["VirtualDom.Css"] = $PS["VirtualDom.Css"] || {};
  var exports = $PS["VirtualDom.Css"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List = $PS["Data.List"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Murmur3 = $PS["Murmur3"];                
  var Id = (function () {
      function Id() {

      };
      Id.value = new Id();
      return Id;
  })();
  var Const = (function () {
      function Const(value0) {
          this.value0 = value0;
      };
      Const.create = function (value0) {
          return new Const(value0);
      };
      return Const;
  })();
  var Combine = (function () {
      function Combine(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Combine.create = function (value0) {
          return function (value1) {
              return new Combine(value0, value1);
          };
      };
      return Combine;
  })();
  var Compose = (function () {
      function Compose(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Compose.create = function (value0) {
          return function (value1) {
              return new Compose(value0, value1);
          };
      };
      return Compose;
  })();
  var Declaration = (function () {
      function Declaration(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Declaration.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Declaration(value0, value1, value2);
              };
          };
      };
      return Declaration;
  })();
  var reverseJoinMap = function (f) {
      return function (sep) {
          return function (v) {
              var v1 = Data_List_NonEmpty.fromList(v.value1);
              if (v1 instanceof Data_Maybe.Just) {
                  return reverseJoinMap(f)(sep)(v1.value0) + (sep + f(v.value0));
              };
              if (v1 instanceof Data_Maybe.Nothing) {
                  return f(v.value0);
              };
              throw new Error("Failed pattern match at VirtualDom.Css (line 111, column 61 - line 113, column 21): " + [ v1.constructor.name ]);
          };
      };
  };
  var hash = Murmur3.hash(0);
  var apply = function (stringOp) {
      return function (str) {
          if (stringOp instanceof Id) {
              return str;
          };
          if (stringOp instanceof Const) {
              return stringOp.value0;
          };
          if (stringOp instanceof Combine) {
              return apply(stringOp.value0)(str) + apply(stringOp.value1)(str);
          };
          if (stringOp instanceof Compose) {
              return apply(stringOp.value0)(apply(stringOp.value1)(str));
          };
          throw new Error("Failed pattern match at VirtualDom.Css (line 35, column 22 - line 39, column 47): " + [ stringOp.constructor.name ]);
      };
  };
  var makeHash = function (toCssOp) {
      var toCss = apply(toCssOp);
      return (function (c) {
          return {
              "class": c,
              css: toCss("." + c)
          };
      })("_" + Data_Show.show(Data_Show.showInt)(hash(toCss("o"))));
  };
  var $dollar_SemigroupStringOp_30 = new Data_Semigroup.Semigroup(Combine.create);
  var $dollar_EqStringOp_28 = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Id && y instanceof Id) {
              return true;
          };
          if (x instanceof Const && y instanceof Const) {
              return x.value0 === y.value0;
          };
          if (x instanceof Combine && y instanceof Combine) {
              return Data_Eq.eq($dollar_EqStringOp_28)(x.value0)(y.value0) && Data_Eq.eq($dollar_EqStringOp_28)(x.value1)(y.value1);
          };
          if (x instanceof Compose && y instanceof Compose) {
              return Data_Eq.eq($dollar_EqStringOp_28)(x.value0)(y.value0) && Data_Eq.eq($dollar_EqStringOp_28)(x.value1)(y.value1);
          };
          return false;
      };
  });
  var toLists = (function () {
      var $117 = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
          return function (v) {
              if (acc instanceof Data_Either.Right) {
                  var $89 = Data_Eq.eq($dollar_EqStringOp_28)(v.value0)(acc.value0.value0.value0.value0);
                  if ($89) {
                      return Data_Either.Right.create(new Data_Tuple.Tuple(Data_List_NonEmpty.cons(v)(acc.value0.value0), acc.value0.value1));
                  };
                  return Data_Either.Right.create(new Data_Tuple.Tuple(Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(v), Data_Array.cons(acc.value0.value0)(acc.value0.value1)));
              };
              if (acc instanceof Data_Either.Left) {
                  return Data_Either.Right.create(new Data_Tuple.Tuple(Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(v), acc.value0));
              };
              throw new Error("Failed pattern match at VirtualDom.Css (line 88, column 42 - line 94, column 50): " + [ acc.constructor.name ]);
          };
      })(new Data_Either.Left([  ]));
      return function ($118) {
          return (function (v) {
              if (v instanceof Data_Either.Right) {
                  return Data_Array.cons(v.value0.value0)(v.value0.value1);
              };
              if (v instanceof Data_Either.Left) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at VirtualDom.Css (line 97, column 8 - line 99, column 24): " + [ v.constructor.name ]);
          })($117($118));
      };
  })();
  var process = function (styles) {
      var $107 = Data_List["null"](styles);
      if ($107) {
          return Data_Maybe.Nothing.value;
      };
      return Data_Maybe.Just.create(makeHash(Data_Foldable.foldr(Data_Foldable.foldableArray)(function (styleList) {
          return function (acc) {
              var v = Data_List_NonEmpty.head(styleList);
              var declarations = " {\x0a" + (reverseJoinMap(function (v1) {
                  return "\x09" + (v1.value1 + (": " + (v1.value2 + ";")));
              })("\x0a")(styleList) + "\x0a}");
              if (acc instanceof Id) {
                  return Data_Semigroup.append($dollar_SemigroupStringOp_30)(v.value0)(new Const(declarations));
              };
              return Data_Semigroup.append($dollar_SemigroupStringOp_30)(acc)(Data_Semigroup.append($dollar_SemigroupStringOp_30)(new Const("\x0a\x0a"))(Data_Semigroup.append($dollar_SemigroupStringOp_30)(v.value0)(new Const(declarations))));
          };
      })(Id.value)(toLists(styles))));
  };
  exports["Declaration"] = Declaration;
  exports["Id"] = Id;
  exports["Const"] = Const;
  exports["Compose"] = Compose;
  exports["process"] = process;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Css"] = $PS["Css"] || {};
  var exports = $PS["Css"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Batched = $PS["Data.Batched"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Monoid = $PS["Data.Monoid"];
  var PointFree = $PS["PointFree"];
  var VirtualDom_Css = $PS["VirtualDom.Css"];
  var mapSelector = function (op) {
      return function (styles) {
          return Data_Functor.mapFlipped(Data_Batched["$_FunctorBatched_3"](Data_Identity.functorIdentity))(new Data_Batched.Batch(styles))(function (v) {
              return new VirtualDom_Css.Declaration(new VirtualDom_Css.Compose(op, v.value0), v.value1, v.value2);
          });
      };
  };                      
  var declaration = PointFree.compose2(Control_Applicative.pure(Data_Batched["$_ApplicativeBatched_5"](Data_Identity.applicativeIdentity)))(VirtualDom_Css.Declaration.create(VirtualDom_Css.Id.value));
  var display = declaration("display");     
  var flexDirection = declaration("flex-direction");
  var font = declaration("font");
  var fontFamily = declaration("font-family");                             
  var grid = declaration("grid");
  var gridTemplateRows = declaration("grid-template-rows");
  var margin = declaration("margin");                      
  var marginBottom = declaration("margin-bottom");
  var opacity = declaration("opacity");           
  var overflow = declaration("overflow");                        
  var padding = declaration("padding");           
  var paddingTop = declaration("padding-top");
  var whiteSpace = declaration("white-space");
  var borderJ = (function () {
      var $696 = declaration("border");
      var $697 = Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ");
      return function ($698) {
          return $696($697($698));
      };
  })();                                         
  var border = declaration("border");                             
  var background = declaration("background");
  exports["mapSelector"] = mapSelector;
  exports["background"] = background;
  exports["border"] = border;
  exports["borderJ"] = borderJ;
  exports["display"] = display;
  exports["flexDirection"] = flexDirection;
  exports["font"] = font;
  exports["fontFamily"] = fontFamily;
  exports["grid"] = grid;
  exports["gridTemplateRows"] = gridTemplateRows;
  exports["margin"] = margin;
  exports["marginBottom"] = marginBottom;
  exports["opacity"] = opacity;
  exports["overflow"] = overflow;
  exports["padding"] = padding;
  exports["paddingTop"] = paddingTop;
  exports["whiteSpace"] = whiteSpace;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Css.Global"] = $PS["Css.Global"] || {};
  var exports = $PS["Css.Global"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Category = $PS["Control.Category"];
  var Css = $PS["Css"];
  var Data_Batched = $PS["Data.Batched"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Murmur3 = $PS["Murmur3"];
  var PointFree = $PS["PointFree"];
  var VirtualDom = $PS["VirtualDom"];
  var VirtualDom_Css = $PS["VirtualDom.Css"];                
  var Rule = (function () {
      function Rule(value0) {
          this.value0 = value0;
      };
      Rule.create = function (value0) {
          return new Rule(value0);
      };
      return Rule;
  })();
  var Import = (function () {
      function Import(value0) {
          this.value0 = value0;
      };
      Import.create = function (value0) {
          return new Import(value0);
      };
      return Import;
  })();
  var rulesToStyleNodes = (function () {
      var $15 = Data_List.mapMaybe(function (v) {
          return Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(VirtualDom_Css.process(v.value1))(function (v1) {
              return v1.css;
          }))(function (ruleText) {
              return new Data_Tuple.Tuple(Data_Show.show(Data_Show.showInt)(Murmur3.hash(0)(ruleText)), VirtualDom.element("style")(Data_List_Types.Nil.value)(Control_Applicative.pure(Data_List_Types.applicativeList)(VirtualDom.text(ruleText))));
          });
      });
      var $16 = Data_Map_Internal.toUnfoldable(Data_List_Types.unfoldableList);
      return function ($17) {
          return $15($16($17));
      };
  })();
  var toChildNodes = (function () {
      var go = function ($copy_stylesheet) {
          return function ($copy_v) {
              var $tco_var_stylesheet = $copy_stylesheet;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(stylesheet, v) {
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof Rule) {
                          $tco_var_stylesheet = {
                              imports: stylesheet.imports,
                              keyframes: stylesheet.keyframes,
                              rules: PointFree.applySecond(Data_Map_Internal.insert(Data_Ord.ordString)(v.value0.value0.selector))(stylesheet.rules)(Data_Maybe.fromMaybe(v.value0.value0.declarations)(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(Data_Map_Internal.lookup(Data_Ord.ordString)(v.value0.value0.selector)(stylesheet.rules))(Data_Semigroup.append(Data_List_Types.semigroupList)(v.value0.value0.declarations))))
                          };
                          $copy_v = v.value1;
                          return;
                      };
                      if (v.value0 instanceof Import) {
                          $tco_var_stylesheet = {
                              imports: v.value0.value0,
                              keyframes: stylesheet.keyframes,
                              rules: stylesheet.rules
                          };
                          $copy_v = v.value1;
                          return;
                      };
                      throw new Error("Failed pattern match at Css.Global (line 61, column 21 - line 74, column 69): " + [ v.value0.constructor.name ]);
                  };
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return (function () {
                          var $14 = Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqString))(stylesheet.imports)([  ]);
                          if ($14) {
                              return Control_Category.identity(Control_Category.categoryFn);
                          };
                          return Data_List_Types.Cons.create(Data_Tuple.Tuple.create("imports")(VirtualDom.element("style")(Data_List_Types.Nil.value)(Control_Applicative.pure(Data_List_Types.applicativeList)(VirtualDom.text(Data_Foldable.surroundMap(Data_Foldable.foldableArray)(Data_Semigroup.semigroupString)("\x0a")(function (import_) {
                              return "@import '" + (import_ + "';");
                          })(stylesheet.imports))))));
                      })()(rulesToStyleNodes(stylesheet.rules));
                  };
                  throw new Error("Failed pattern match at Css.Global (line 60, column 19 - line 92, column 45): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_stylesheet, $copy_v);
              };
              return $tco_result;
          };
      };
      return go({
          imports: [  ],
          keyframes: Data_List_Types.Nil.value,
          rules: Data_Map_Internal.empty
      });
  })();
  var style = (function () {
      var $18 = VirtualDom.keyedElement("style")(Data_List_Types.Nil.value);
      var $19 = Data_Batched.flattenMap(Data_Newtype.unwrap());
      return function ($20) {
          return Data_Batched.Single.create($18(toChildNodes($19(Data_Batched.Batch.create($20)))));
      };
  })();
  var rule = function (selector) {
      return function (styles) {
          return Control_Applicative.pure(Data_Batched["$_ApplicativeBatched_5"](Data_Identity.applicativeIdentity))(new Rule({
              selector: selector,
              declarations: Data_Batched.flattenMap(Data_Newtype.unwrap())(Css.mapSelector(new VirtualDom_Css.Const(selector))(styles))
          }));
      };
  };                        
  var imports = (function () {
      var $21 = Control_Applicative.pure(Data_Batched["$_ApplicativeBatched_5"](Data_Identity.applicativeIdentity));
      return function ($22) {
          return $21(Import.create($22));
      };
  })();               
  var body = rule("body");
  exports["style"] = style;
  exports["body"] = body;
})(PS);
(function(exports) {
  /* eslint-disable no-eq-null, eqeqeq */
  "use strict";

  function id(x) {
    return x;
  }

  exports.fromBoolean = id;
  exports.fromNumber = id;
  exports.fromString = id;
  exports.fromArray = id;
  exports.fromObject = id;

  exports.stringify = function (j) {
    return JSON.stringify(j);
  };

  function isArray(a) {
    return Object.prototype.toString.call(a) === "[object Array]";
  }

  exports._caseJson = function (isNull, isBool, isNum, isStr, isArr, isObj, j) {
    if (j == null) return isNull();
    else if (typeof j === "boolean") return isBool(j);
    else if (typeof j === "number") return isNum(j);
    else if (typeof j === "string") return isStr(j);
    else if (Object.prototype.toString.call(j) === "[object Array]")
      return isArr(j);
    else return isObj(j);
  };

  exports._compare = function _compare(EQ, GT, LT, a, b) {
    if (a == null) {
      if (b == null) return EQ;
      else return LT;
    } else if (typeof a === "boolean") {
      if (typeof b === "boolean") {
        // boolean / boolean
        if (a === b) return EQ;
        else if (a === false) return LT;
        else return GT;
      } else if (b == null) return GT;
      else return LT;
    } else if (typeof a === "number") {
      if (typeof b === "number") {
        if (a === b) return EQ;
        else if (a < b) return LT;
        else return GT;
      } else if (b == null) return GT;
      else if (typeof b === "boolean") return GT;
      else return LT;
    } else if (typeof a === "string") {
      if (typeof b === "string") {
        if (a === b) return EQ;
        else if (a < b) return LT;
        else return GT;
      } else if (b == null) return GT;
      else if (typeof b === "boolean") return GT;
      else if (typeof b === "number") return GT;
      else return LT;
    } else if (isArray(a)) {
      if (isArray(b)) {
        for (var i = 0; i < Math.min(a.length, b.length); i++) {
          var ca = _compare(EQ, GT, LT, a[i], b[i]);
          if (ca !== EQ) return ca;
        }
        if (a.length === b.length) return EQ;
        else if (a.length < b.length) return LT;
        else return GT;
      } else if (b == null) return GT;
      else if (typeof b === "boolean") return GT;
      else if (typeof b === "number") return GT;
      else if (typeof b === "string") return GT;
      else return LT;
    } else {
      if (b == null) return GT;
      else if (typeof b === "boolean") return GT;
      else if (typeof b === "number") return GT;
      else if (typeof b === "string") return GT;
      else if (isArray(b)) return GT;
      else {
        var akeys = Object.keys(a);
        var bkeys = Object.keys(b);
        if (akeys.length < bkeys.length) return LT;
        else if (akeys.length > bkeys.length) return GT;
        var keys = akeys.concat(bkeys).sort();
        for (var j = 0; j < keys.length; j++) {
          var k = keys[j];
          if (a[k] === undefined) return LT;
          else if (b[k] === undefined) return GT;
          var ck = _compare(EQ, GT, LT, a[k], b[k]);
          if (ck !== EQ) return ck;
        }
        return EQ;
      }
    }
  };
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Argonaut.Core"] = $PS["Data.Argonaut.Core"] || {};
  var exports = $PS["Data.Argonaut.Core"];
  var $foreign = $PS["Data.Argonaut.Core"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];                  
  var verbJsonType = function (def) {
      return function (f) {
          return function (g) {
              return g(def)(f);
          };
      };
  };
  var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var ordJson = new Data_Ord.Ord(function () {
      return eqJson;
  }, function (a) {
      return function (b) {
          return $foreign["_compare"](Data_Ordering.EQ.value, Data_Ordering.GT.value, Data_Ordering.LT.value, a, b);
      };
  });
  var eqJson = new Data_Eq.Eq(function (j1) {
      return function (j2) {
          return Data_Eq.eq(Data_Ordering.eqOrdering)(Data_Ord.compare(ordJson)(j1)(j2))(Data_Ordering.EQ.value);
      };
  });
  var caseJsonString = function (d) {
      return function (f) {
          return function (j) {
              return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };                                        
  var toString = toJsonType(caseJsonString);
  var caseJsonObject = function (d) {
      return function (f) {
          return function (j) {
              return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, j);
          };
      };
  };                                        
  var toObject = toJsonType(caseJsonObject);
  var caseJsonNumber = function (d) {
      return function (f) {
          return function (j) {
              return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };                                    
  var caseJsonBoolean = function (d) {
      return function (f) {
          return function (j) {
              return $foreign["_caseJson"](Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };                                          
  var caseJsonArray = function (d) {
      return function (f) {
          return function (j) {
              return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), j);
          };
      };
  };                                      
  var toArray = toJsonType(caseJsonArray);
  exports["caseJsonBoolean"] = caseJsonBoolean;
  exports["caseJsonNumber"] = caseJsonNumber;
  exports["caseJsonString"] = caseJsonString;
  exports["toString"] = toString;
  exports["toArray"] = toArray;
  exports["toObject"] = toObject;
  exports["eqJson"] = eqJson;
  exports["fromBoolean"] = $foreign.fromBoolean;
  exports["fromNumber"] = $foreign.fromNumber;
  exports["fromString"] = $foreign.fromString;
  exports["fromArray"] = $foreign.fromArray;
  exports["fromObject"] = $foreign.fromObject;
  exports["stringify"] = $foreign.stringify;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Argonaut.Decode.Error"] = $PS["Data.Argonaut.Decode.Error"] || {};
  var exports = $PS["Data.Argonaut.Decode.Error"]; 
  var TypeMismatch = (function () {
      function TypeMismatch(value0) {
          this.value0 = value0;
      };
      TypeMismatch.create = function (value0) {
          return new TypeMismatch(value0);
      };
      return TypeMismatch;
  })();
  var UnexpectedValue = (function () {
      function UnexpectedValue(value0) {
          this.value0 = value0;
      };
      UnexpectedValue.create = function (value0) {
          return new UnexpectedValue(value0);
      };
      return UnexpectedValue;
  })();
  var AtIndex = (function () {
      function AtIndex(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AtIndex.create = function (value0) {
          return function (value1) {
              return new AtIndex(value0, value1);
          };
      };
      return AtIndex;
  })();
  var AtKey = (function () {
      function AtKey(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AtKey.create = function (value0) {
          return function (value1) {
              return new AtKey(value0, value1);
          };
      };
      return AtKey;
  })();
  var Named = (function () {
      function Named(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Named.create = function (value0) {
          return function (value1) {
              return new Named(value0, value1);
          };
      };
      return Named;
  })();
  var MissingValue = (function () {
      function MissingValue() {

      };
      MissingValue.value = new MissingValue();
      return MissingValue;
  })();
  exports["TypeMismatch"] = TypeMismatch;
  exports["UnexpectedValue"] = UnexpectedValue;
  exports["AtIndex"] = AtIndex;
  exports["AtKey"] = AtKey;
  exports["Named"] = Named;
  exports["MissingValue"] = MissingValue;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Bifunctor"] = $PS["Data.Bifunctor"] || {};
  var exports = $PS["Data.Bifunctor"];
  var Control_Category = $PS["Control.Category"];
  var Data_Either = $PS["Data.Either"];              
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  var lmap = function (dictBifunctor) {
      return function (f) {
          return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));
      };
  }; 
  var bifunctorEither = new Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Data_Either.Left) {
                  return new Data_Either.Left(v(v2.value0));
              };
              if (v2 instanceof Data_Either.Right) {
                  return new Data_Either.Right(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Data.Bifunctor (line 32, column 1 - line 34, column 36): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  exports["lmap"] = lmap;
  exports["bifunctorEither"] = bifunctorEither;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Set"] = $PS["Data.Set"] || {};
  var exports = $PS["Data.Set"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];
  var union = function (dictOrd) {
      return function (v) {
          return function (v1) {
              return Data_Map_Internal.union(dictOrd)(v)(v1);
          };
      };
  };
  var toList = function (v) {
      return Data_Map_Internal.keys(v);
  };
  var toUnfoldable = function (dictUnfoldable) {
      var $66 = Data_List.toUnfoldable(dictUnfoldable);
      return function ($67) {
          return $66(toList($67));
      };
  };
  var singleton = function (a) {
      return Data_Map_Internal.singleton(a)(Data_Unit.unit);
  };
  var semigroupSet = function (dictOrd) {
      return new Data_Semigroup.Semigroup(union(dictOrd));
  };
  var insert = function (dictOrd) {
      return function (a) {
          return function (v) {
              return Data_Map_Internal.insert(dictOrd)(a)(Data_Unit.unit)(v);
          };
      };
  };                  
  var foldableSet = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          var $68 = Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f);
          return function ($69) {
              return $68(toList($69));
          };
      };
  }, function (f) {
      return function (x) {
          var $70 = Data_Foldable.foldl(Data_List_Types.foldableList)(f)(x);
          return function ($71) {
              return $70(toList($71));
          };
      };
  }, function (f) {
      return function (x) {
          var $72 = Data_Foldable.foldr(Data_List_Types.foldableList)(f)(x);
          return function ($73) {
              return $72(toList($73));
          };
      };
  });
  var findMax = function (v) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
          return v1.key;
      })(Data_Map_Internal.findMax(v));
  }; 
  var empty = Data_Map_Internal.empty;
  var fromFoldable = function (dictFoldable) {
      return function (dictOrd) {
          return Data_Foldable.foldl(dictFoldable)(function (m) {
              return function (a) {
                  return insert(dictOrd)(a)(m);
              };
          })(empty);
      };
  };
  var map = function (dictOrd) {
      return function (f) {
          return Data_Foldable.foldl(foldableSet)(function (m) {
              return function (a) {
                  return insert(dictOrd)(f(a))(m);
              };
          })(empty);
      };
  };
  var monoidSet = function (dictOrd) {
      return new Data_Monoid.Monoid(function () {
          return semigroupSet(dictOrd);
      }, empty);
  };
  exports["fromFoldable"] = fromFoldable;
  exports["toUnfoldable"] = toUnfoldable;
  exports["singleton"] = singleton;
  exports["findMax"] = findMax;
  exports["monoidSet"] = monoidSet;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.TraversableWithIndex"] = $PS["Data.TraversableWithIndex"] || {};
  var exports = $PS["Data.TraversableWithIndex"];
  var Data_FoldableWithIndex = $PS["Data.FoldableWithIndex"];
  var Data_FunctorWithIndex = $PS["Data.FunctorWithIndex"];
  var Data_Traversable = $PS["Data.Traversable"];  
  var TraversableWithIndex = function (FoldableWithIndex1, FunctorWithIndex0, Traversable2, traverseWithIndex) {
      this.FoldableWithIndex1 = FoldableWithIndex1;
      this.FunctorWithIndex0 = FunctorWithIndex0;
      this.Traversable2 = Traversable2;
      this.traverseWithIndex = traverseWithIndex;
  };
  var traverseWithIndexDefault = function (dictTraversableWithIndex) {
      return function (dictApplicative) {
          return function (f) {
              var $63 = Data_Traversable.sequence(dictTraversableWithIndex.Traversable2())(dictApplicative);
              var $64 = Data_FunctorWithIndex.mapWithIndex(dictTraversableWithIndex.FunctorWithIndex0())(f);
              return function ($65) {
                  return $63($64($65));
              };
          };
      };
  };
  var traverseWithIndex = function (dict) {
      return dict.traverseWithIndex;
  };
  var traversableWithIndexArray = new TraversableWithIndex(function () {
      return Data_FoldableWithIndex.foldableWithIndexArray;
  }, function () {
      return Data_FunctorWithIndex.functorWithIndexArray;
  }, function () {
      return Data_Traversable.traversableArray;
  }, function (dictApplicative) {
      return traverseWithIndexDefault(traversableWithIndexArray)(dictApplicative);
  });
  exports["traverseWithIndex"] = traverseWithIndex;
  exports["traversableWithIndexArray"] = traversableWithIndexArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Argonaut.Decode.Decoders"] = $PS["Data.Argonaut.Decode.Decoders"] || {};
  var exports = $PS["Data.Argonaut.Decode.Decoders"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Error = $PS["Data.Argonaut.Decode.Error"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Set = $PS["Data.Set"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_TraversableWithIndex = $PS["Data.TraversableWithIndex"];
  var decodeString = Data_Argonaut_Core.caseJsonString(Data_Either.Left.create(new Data_Argonaut_Decode_Error.TypeMismatch("String")))(Data_Either.Right.create);
  var decodeNumber = Data_Argonaut_Core.caseJsonNumber(Data_Either.Left.create(new Data_Argonaut_Decode_Error.TypeMismatch("Number")))(Data_Either.Right.create);
  var decodeJArray = (function () {
      var $22 = Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("Array"));
      return function ($23) {
          return $22(Data_Argonaut_Core.toArray($23));
      };
  })();
  var decodeList = function (decoder) {
      return Control_Bind.composeKleisliFlipped(Data_Either.bindEither)((function () {
          var $24 = Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Data_Argonaut_Decode_Error.Named.create("List"));
          var $25 = Data_Traversable.traverse(Data_List_Types.traversableList)(Data_Either.applicativeEither)(decoder);
          return function ($26) {
              return $24($25($26));
          };
      })())(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Either.functorEither)(Data_List.fromFoldable(Data_Foldable.foldableArray)))(decodeJArray));
  };
  var decodeSet = function (dictOrd) {
      return function (decoder) {
          var $27 = Data_Functor.map(Data_Either.functorEither)(Data_Set.fromFoldable(Data_List_Types.foldableList)(dictOrd));
          var $28 = decodeList(decoder);
          return function ($29) {
              return $27($28($29));
          };
      };
  };
  var decodeBoolean = Data_Argonaut_Core.caseJsonBoolean(Data_Either.Left.create(new Data_Argonaut_Decode_Error.TypeMismatch("Boolean")))(Data_Either.Right.create);
  var decodeArray = function (decoder) {
      return Control_Bind.composeKleisliFlipped(Data_Either.bindEither)((function () {
          var $59 = Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Data_Argonaut_Decode_Error.Named.create("Array"));
          var $60 = Data_TraversableWithIndex.traverseWithIndex(Data_TraversableWithIndex.traversableWithIndexArray)(Data_Either.applicativeEither)(function (i) {
              var $62 = Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Data_Argonaut_Decode_Error.AtIndex.create(i));
              return function ($63) {
                  return $62(decoder($63));
              };
          });
          return function ($61) {
              return $59($60($61));
          };
      })())(decodeJArray);
  };
  exports["decodeBoolean"] = decodeBoolean;
  exports["decodeNumber"] = decodeNumber;
  exports["decodeString"] = decodeString;
  exports["decodeArray"] = decodeArray;
  exports["decodeSet"] = decodeSet;
})(PS);
(function(exports) {
  "use strict";

  exports._copyST = function (m) {
    return function () {
      var r = {};
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  };

  exports.empty = {};

  exports.runST = function (f) {
    return f();
  };

  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function toArrayWithKey(f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});
(function(exports) {
  "use strict";

  exports.poke = function (k) {
    return function (v) {
      return function (m) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };
})(PS["Foreign.Object.ST"] = PS["Foreign.Object.ST"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Foreign.Object.ST"] = $PS["Foreign.Object.ST"] || {};
  var exports = $PS["Foreign.Object.ST"];
  var $foreign = $PS["Foreign.Object.ST"];
  exports["poke"] = $foreign.poke;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Foreign.Object"] = $PS["Foreign.Object"] || {};
  var exports = $PS["Foreign.Object"];
  var $foreign = $PS["Foreign.Object"];
  var Data_Function_Uncurried = $PS["Data.Function.Uncurried"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Foreign_Object_ST = $PS["Foreign.Object.ST"];              
  var thawST = $foreign["_copyST"];
  var mutate = function (f) {
      return function (m) {
          return $foreign.runST(function __do() {
              var s = thawST(m)();
              f(s)();
              return s;
          });
      };
  };
  var lookup = Data_Function_Uncurried.runFn4($foreign["_lookup"])(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var insert = function (k) {
      return function (v) {
          return mutate(Foreign_Object_ST.poke(k)(v));
      };
  };
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["empty"] = $foreign.empty;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Record"] = $PS["Record"] || {};
  var exports = $PS["Record"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var insert = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return function (l) {
                  return function (a) {
                      return function (r) {
                          return Record_Unsafe.unsafeSet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r);
                      };
                  };
              };
          };
      };
  };
  var get = function (dictIsSymbol) {
      return function (dictCons) {
          return function (l) {
              return function (r) {
                  return Record_Unsafe.unsafeGet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
              };
          };
      };
  };
  exports["get"] = get;
  exports["insert"] = insert;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Argonaut.Decode.Class"] = $PS["Data.Argonaut.Decode.Class"] || {};
  var exports = $PS["Data.Argonaut.Decode.Class"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Decoders = $PS["Data.Argonaut.Decode.Decoders"];
  var Data_Argonaut_Decode_Error = $PS["Data.Argonaut.Decode.Error"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Record = $PS["Record"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var GDecodeJson = function (gDecodeJson) {
      this.gDecodeJson = gDecodeJson;
  };
  var DecodeJsonField = function (decodeJsonField) {
      this.decodeJsonField = decodeJsonField;
  };
  var DecodeJson = function (decodeJson) {
      this.decodeJson = decodeJson;
  };
  var gDecodeJsonNil = new GDecodeJson(function (v) {
      return function (v1) {
          return new Data_Either.Right({});
      };
  });
  var gDecodeJson = function (dict) {
      return dict.gDecodeJson;
  };                                                                        
  var decodeRecord = function (dictGDecodeJson) {
      return function (dictRowToList) {
          return new DecodeJson(function (json) {
              var v = Data_Argonaut_Core.toObject(json);
              if (v instanceof Data_Maybe.Just) {
                  return gDecodeJson(dictGDecodeJson)(v.value0)(Type_Proxy["Proxy"].value);
              };
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Either.Left.create(new Data_Argonaut_Decode_Error.TypeMismatch("Object"));
              };
              throw new Error("Failed pattern match at Data.Argonaut.Decode.Class (line 103, column 5 - line 105, column 46): " + [ v.constructor.name ]);
          });
      };
  };
  var decodeJsonString = new DecodeJson(Data_Argonaut_Decode_Decoders.decodeString);
  var decodeJsonNumber = new DecodeJson(Data_Argonaut_Decode_Decoders.decodeNumber);
  var decodeJsonField = function (dict) {
      return dict.decodeJsonField;
  };
  var gDecodeJsonCons = function (dictDecodeJsonField) {
      return function (dictGDecodeJson) {
          return function (dictIsSymbol) {
              return function (dictCons) {
                  return function (dictLacks) {
                      return new GDecodeJson(function (object) {
                          return function (v) {
                              var fieldName = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                              var fieldValue = Foreign_Object.lookup(fieldName)(object);
                              var v1 = decodeJsonField(dictDecodeJsonField)(fieldValue);
                              if (v1 instanceof Data_Maybe.Just) {
                                  return Control_Bind.bind(Data_Either.bindEither)(Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Data_Argonaut_Decode_Error.AtKey.create(fieldName))(v1.value0))(function (val) {
                                      return Control_Bind.bind(Data_Either.bindEither)(gDecodeJson(dictGDecodeJson)(object)(Type_Proxy["Proxy"].value))(function (rest) {
                                          return Data_Either.Right.create(Record.insert(dictIsSymbol)()()(Type_Proxy["Proxy"].value)(val)(rest));
                                      });
                                  });
                              };
                              if (v1 instanceof Data_Maybe.Nothing) {
                                  return Data_Either.Left.create(new Data_Argonaut_Decode_Error.AtKey(fieldName, Data_Argonaut_Decode_Error.MissingValue.value));
                              };
                              throw new Error("Failed pattern match at Data.Argonaut.Decode.Class (line 127, column 5 - line 134, column 44): " + [ v1.constructor.name ]);
                          };
                      });
                  };
              };
          };
      };
  };                                                                                      
  var decodeJsonBoolean = new DecodeJson(Data_Argonaut_Decode_Decoders.decodeBoolean);
  var decodeJson = function (dict) {
      return dict.decodeJson;
  };
  var decodeSet = function (dictOrd) {
      return function (dictDecodeJson) {
          return new DecodeJson(Data_Argonaut_Decode_Decoders.decodeSet(dictOrd)(decodeJson(dictDecodeJson)));
      };
  };
  var decodeFieldId = function (dictDecodeJson) {
      return new DecodeJsonField(function (j) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(decodeJson(dictDecodeJson))(j);
      });
  };
  var decodeArray = function (dictDecodeJson) {
      return new DecodeJson(Data_Argonaut_Decode_Decoders.decodeArray(decodeJson(dictDecodeJson)));
  };
  exports["decodeJson"] = decodeJson;
  exports["DecodeJson"] = DecodeJson;
  exports["decodeJsonBoolean"] = decodeJsonBoolean;
  exports["decodeJsonNumber"] = decodeJsonNumber;
  exports["decodeJsonString"] = decodeJsonString;
  exports["decodeArray"] = decodeArray;
  exports["decodeSet"] = decodeSet;
  exports["decodeRecord"] = decodeRecord;
  exports["gDecodeJsonNil"] = gDecodeJsonNil;
  exports["gDecodeJsonCons"] = gDecodeJsonCons;
  exports["decodeFieldId"] = decodeFieldId;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Argonaut.Types.Generic"] = $PS["Data.Argonaut.Types.Generic"] || {};
  var exports = $PS["Data.Argonaut.Types.Generic"];
  var defaultEncoding = {
      tagKey: "tag",
      valuesKey: "values",
      unwrapSingleArguments: false
  };
  exports["defaultEncoding"] = defaultEncoding;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Generic.Rep"] = $PS["Data.Generic.Rep"] || {};
  var exports = $PS["Data.Generic.Rep"];             
  var Inl = (function () {
      function Inl(value0) {
          this.value0 = value0;
      };
      Inl.create = function (value0) {
          return new Inl(value0);
      };
      return Inl;
  })();
  var Inr = (function () {
      function Inr(value0) {
          this.value0 = value0;
      };
      Inr.create = function (value0) {
          return new Inr(value0);
      };
      return Inr;
  })();
  var Generic = function (from, to) {
      this.from = from;
      this.to = to;
  };
  var Argument = function (x) {
      return x;
  };
  var to = function (dict) {
      return dict.to;
  };
  var from = function (dict) {
      return dict.from;
  };
  exports["Generic"] = Generic;
  exports["to"] = to;
  exports["from"] = from;
  exports["Inl"] = Inl;
  exports["Inr"] = Inr;
  exports["Argument"] = Argument;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Argonaut.Decode.Generic"] = $PS["Data.Argonaut.Decode.Generic"] || {};
  var exports = $PS["Data.Argonaut.Decode.Generic"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Class = $PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Error = $PS["Data.Argonaut.Decode.Error"];
  var Data_Argonaut_Types_Generic = $PS["Data.Argonaut.Types.Generic"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var DecodeRepArgs = function (decodeRepArgs) {
      this.decodeRepArgs = decodeRepArgs;
  };
  var DecodeRep = function (decodeRepWith) {
      this.decodeRepWith = decodeRepWith;
  };
  var withTag = function (e) {
      return function (j) {
          return function (name) {
              var decodingErr = Data_Argonaut_Decode_Error.Named.create(name);
              return Control_Bind.bind(Data_Either.bindEither)(Data_Either.note(decodingErr(new Data_Argonaut_Decode_Error.TypeMismatch("Object")))(Data_Argonaut_Core.toObject(j)))(function (jObj) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Either.note(decodingErr(new Data_Argonaut_Decode_Error.AtKey(e.tagKey, Data_Argonaut_Decode_Error.MissingValue.value)))(Foreign_Object.lookup(e.tagKey)(jObj)))(function (jTag) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Either.note(decodingErr(Data_Argonaut_Decode_Error.AtKey.create(e.tagKey)(new Data_Argonaut_Decode_Error.TypeMismatch("String"))))(Data_Argonaut_Core.toString(jTag)))(function (tag) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(Control_Applicative.when(Data_Either.applicativeEither)(tag !== name)(Data_Either.Left.create(decodingErr(Data_Argonaut_Decode_Error.AtKey.create(e.tagKey)(Data_Argonaut_Decode_Error.UnexpectedValue.create(Data_Argonaut_Core.fromString(tag)))))))(function () {
                              return Control_Applicative.pure(Data_Either.applicativeEither)({
                                  tag: tag,
                                  decodingErr: decodingErr
                              });
                          });
                      });
                  });
              });
          };
      };
  };
  var withTagAndValues = function (e) {
      return function (j) {
          return function (name) {
              return Control_Bind.bind(Data_Either.bindEither)(withTag(e)(j)(name))(function (v) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Either.note(v.decodingErr(new Data_Argonaut_Decode_Error.TypeMismatch("Object")))(Data_Argonaut_Core.toObject(j)))(function (jObj) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Either.note(v.decodingErr(new Data_Argonaut_Decode_Error.AtKey(e.valuesKey, Data_Argonaut_Decode_Error.MissingValue.value)))(Foreign_Object.lookup(e.valuesKey)(jObj)))(function (values) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)({
                              tag: v.tag,
                              values: values,
                              decodingErr: v.decodingErr
                          });
                      });
                  });
              });
          };
      };
  };
  var decodeRepWith = function (dict) {
      return dict.decodeRepWith;
  };
  var genericDecodeJsonWith = function (dictGeneric) {
      return function (dictDecodeRep) {
          return function (e) {
              var $61 = Data_Functor.map(Data_Either.functorEither)(Data_Generic_Rep.to(dictGeneric));
              var $62 = decodeRepWith(dictDecodeRep)(e);
              return function ($63) {
                  return $61($62($63));
              };
          };
      };
  };
  var genericDecodeJson = function (dictGeneric) {
      return function (dictDecodeRep) {
          return genericDecodeJsonWith(dictGeneric)(dictDecodeRep)(Data_Argonaut_Types_Generic.defaultEncoding);
      };
  };
  var decodeRepSum = function (dictDecodeRep) {
      return function (dictDecodeRep1) {
          return new DecodeRep(function (e) {
              return function (j) {
                  return Control_Alt.alt(Data_Either.altEither)(Data_Functor.map(Data_Either.functorEither)(Data_Generic_Rep.Inl.create)(decodeRepWith(dictDecodeRep)(e)(j)))(Data_Functor.map(Data_Either.functorEither)(Data_Generic_Rep.Inr.create)(decodeRepWith(dictDecodeRep1)(e)(j)));
              };
          });
      };
  }; 
  var decodeRepArgsArgument = function (dictDecodeJson) {
      return new DecodeRepArgs(function (js) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("NonEmptyArray"))(Data_Array.uncons(js)))(function (v) {
              return Data_Functor.map(Data_Either.functorEither)(function ($64) {
                  return (function (v1) {
                      return {
                          init: v1,
                          rest: v.tail
                      };
                  })(Data_Generic_Rep.Argument($64));
              })(Data_Argonaut_Decode_Class.decodeJson(dictDecodeJson)(v.head));
          });
      });
  };
  var decodeRepArgs = function (dict) {
      return dict.decodeRepArgs;
  };
  var construct = function (dictDecodeRepArgs) {
      return function (e) {
          return function (valuesArray) {
              return function (decodingErr) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(decodingErr)(decodeRepArgs(dictDecodeRepArgs)(valuesArray)))(function (v) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(Control_Applicative.when(Data_Either.applicativeEither)(Data_Eq.notEq(Data_Eq.eqArray(Data_Argonaut_Core.eqJson))(v.rest)([  ]))(Data_Either.Left.create(decodingErr(Data_Argonaut_Decode_Error.AtKey.create(e.valuesKey)(new Data_Argonaut_Decode_Error.UnexpectedValue(Data_Argonaut_Core.fromArray(v.rest)))))))(function () {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(v.init);
                      });
                  });
              };
          };
      };
  };
  var decodeRepConstructorArg = function (dictIsSymbol) {
      return function (dictDecodeJson) {
          return new DecodeRep(function (e) {
              return function (j) {
                  var name = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                  return Control_Bind.bind(Data_Either.bindEither)(withTagAndValues(e)(j)(name))(function (v) {
                      if (e.unwrapSingleArguments) {
                          return construct(decodeRepArgsArgument(dictDecodeJson))(e)([ v.values ])(v.decodingErr);
                      };
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Either.note(v.decodingErr(Data_Argonaut_Decode_Error.AtKey.create(e.valuesKey)(new Data_Argonaut_Decode_Error.TypeMismatch("Array"))))(Data_Argonaut_Core.toArray(v.values)))(function (valuesArray) {
                          return construct(decodeRepArgsArgument(dictDecodeJson))(e)(valuesArray)(v.decodingErr);
                      });
                  });
              };
          });
      };
  };
  exports["genericDecodeJson"] = genericDecodeJson;
  exports["decodeRepSum"] = decodeRepSum;
  exports["decodeRepConstructorArg"] = decodeRepConstructorArg;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Argonaut.Encode.Encoders"] = $PS["Data.Argonaut.Encode.Encoders"] || {};
  var exports = $PS["Data.Argonaut.Encode.Encoders"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Set = $PS["Data.Set"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var encodeString = Data_Argonaut_Core.fromString;
  var encodeNumber = Data_Argonaut_Core.fromNumber;
  var encodeList = function (encoder) {
      var $37 = Data_Functor.map(Data_Functor.functorArray)(encoder);
      var $38 = Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray);
      return function ($39) {
          return Data_Argonaut_Core.fromArray($37($38($39)));
      };
  };
  var encodeSet = function (dictOrd) {
      return function (encoder) {
          var $45 = encodeList(encoder);
          var $46 = Data_Set.toUnfoldable(Data_List_Types.unfoldableList);
          return function ($47) {
              return $45($46($47));
          };
      };
  };
  var encodeBoolean = Data_Argonaut_Core.fromBoolean;
  exports["encodeBoolean"] = encodeBoolean;
  exports["encodeNumber"] = encodeNumber;
  exports["encodeString"] = encodeString;
  exports["encodeSet"] = encodeSet;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Argonaut.Encode.Class"] = $PS["Data.Argonaut.Encode.Class"] || {};
  var exports = $PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Argonaut_Encode_Encoders = $PS["Data.Argonaut.Encode.Encoders"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Record = $PS["Record"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var GEncodeJson = function (gEncodeJson) {
      this.gEncodeJson = gEncodeJson;
  };
  var EncodeJson = function (encodeJson) {
      this.encodeJson = encodeJson;
  };
  var gEncodeJsonNil = new GEncodeJson(function (v) {
      return function (v1) {
          return Foreign_Object.empty;
      };
  });
  var gEncodeJson = function (dict) {
      return dict.gEncodeJson;
  };                                                                        
  var encodeRecord = function (dictGEncodeJson) {
      return function (dictRowToList) {
          return new EncodeJson(function (rec) {
              return Data_Argonaut_Core.fromObject(gEncodeJson(dictGEncodeJson)(rec)(Type_Proxy["Proxy"].value));
          });
      };
  };                                                                                          
  var encodeJsonJString = new EncodeJson(Data_Argonaut_Encode_Encoders.encodeString);
  var encodeJsonJNumber = new EncodeJson(Data_Argonaut_Encode_Encoders.encodeNumber);
  var encodeJsonJBoolean = new EncodeJson(Data_Argonaut_Encode_Encoders.encodeBoolean);
  var encodeJson = function (dict) {
      return dict.encodeJson;
  };
  var encodeSet = function (dictOrd) {
      return function (dictEncodeJson) {
          return new EncodeJson(Data_Argonaut_Encode_Encoders.encodeSet(dictOrd)(encodeJson(dictEncodeJson)));
      };
  };
  var gEncodeJsonCons = function (dictEncodeJson) {
      return function (dictGEncodeJson) {
          return function (dictIsSymbol) {
              return function (dictCons) {
                  return new GEncodeJson(function (row) {
                      return function (v) {
                          return Foreign_Object.insert(Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value))(encodeJson(dictEncodeJson)(Record.get(dictIsSymbol)()(Type_Proxy["Proxy"].value)(row)))(gEncodeJson(dictGEncodeJson)(row)(Type_Proxy["Proxy"].value));
                      };
                  });
              };
          };
      };
  };
  exports["encodeJson"] = encodeJson;
  exports["EncodeJson"] = EncodeJson;
  exports["encodeJsonJBoolean"] = encodeJsonJBoolean;
  exports["encodeJsonJNumber"] = encodeJsonJNumber;
  exports["encodeJsonJString"] = encodeJsonJString;
  exports["encodeSet"] = encodeSet;
  exports["encodeRecord"] = encodeRecord;
  exports["gEncodeJsonNil"] = gEncodeJsonNil;
  exports["gEncodeJsonCons"] = gEncodeJsonCons;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Argonaut.Encode.Generic"] = $PS["Data.Argonaut.Encode.Generic"] || {};
  var exports = $PS["Data.Argonaut.Encode.Generic"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Argonaut_Encode_Class = $PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Types_Generic = $PS["Data.Argonaut.Types.Generic"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var EncodeRepArgs = function (encodeRepArgs) {
      this.encodeRepArgs = encodeRepArgs;
  };
  var EncodeRep = function (encodeRepWith) {
      this.encodeRepWith = encodeRepWith;
  };
  var encodeRepWith = function (dict) {
      return dict.encodeRepWith;
  };
  var genericEncodeJsonWith = function (dictGeneric) {
      return function (dictEncodeRep) {
          return function (e) {
              var $47 = encodeRepWith(dictEncodeRep)(e);
              var $48 = Data_Generic_Rep.from(dictGeneric);
              return function ($49) {
                  return $47($48($49));
              };
          };
      };
  };
  var genericEncodeJson = function (dictGeneric) {
      return function (dictEncodeRep) {
          return genericEncodeJsonWith(dictGeneric)(dictEncodeRep)(Data_Argonaut_Types_Generic.defaultEncoding);
      };
  };
  var encodeRepSum = function (dictEncodeRep) {
      return function (dictEncodeRep1) {
          return new EncodeRep(function (e) {
              return function (v) {
                  if (v instanceof Data_Generic_Rep.Inl) {
                      return encodeRepWith(dictEncodeRep)(e)(v.value0);
                  };
                  if (v instanceof Data_Generic_Rep.Inr) {
                      return encodeRepWith(dictEncodeRep1)(e)(v.value0);
                  };
                  throw new Error("Failed pattern match at Data.Argonaut.Encode.Generic (line 36, column 1 - line 38, column 50): " + [ e.constructor.name, v.constructor.name ]);
              };
          });
      };
  }; 
  var encodeRepArgsArgument = function (dictEncodeJson) {
      return new EncodeRepArgs(function (v) {
          return [ Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson)(v) ];
      });
  };
  var encodeRepArgs = function (dict) {
      return dict.encodeRepArgs;
  };
  var encodeRepConstructor = function (dictIsSymbol) {
      return function (dictEncodeRepArgs) {
          return new EncodeRep(function (e) {
              return function (v) {
                  var values = (function () {
                      var vs = encodeRepArgs(dictEncodeRepArgs)(v);
                      if (e.unwrapSingleArguments) {
                          if (vs.length === 1) {
                              return vs[0];
                          };
                          return Data_Argonaut_Core.fromArray(vs);
                      };
                      return Data_Argonaut_Core.fromArray(vs);
                  })();
                  return Data_Argonaut_Core.fromObject(Foreign_Object.insert(e.tagKey)(Data_Argonaut_Core.fromString(Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value)))(Foreign_Object.insert(e.valuesKey)(values)(Foreign_Object.empty)));
              };
          });
      };
  };
  exports["genericEncodeJson"] = genericEncodeJson;
  exports["encodeRepSum"] = encodeRepSum;
  exports["encodeRepConstructor"] = encodeRepConstructor;
  exports["encodeRepArgsArgument"] = encodeRepArgsArgument;
})(PS);
(function(exports) {
  "use strict";

  exports._jsonParser = function (fail, succ, s) {
    try {
      return succ(JSON.parse(s));
    }
    catch (e) {
      return fail(e.message);
    }
  };
})(PS["Data.Argonaut.Parser"] = PS["Data.Argonaut.Parser"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.Argonaut.Parser"] = $PS["Data.Argonaut.Parser"] || {};
  var exports = $PS["Data.Argonaut.Parser"];
  var $foreign = $PS["Data.Argonaut.Parser"];
  var Data_Either = $PS["Data.Either"];                
  var jsonParser = function (j) {
      return $foreign["_jsonParser"](Data_Either.Left.create, Data_Either.Right.create, j);
  };
  exports["jsonParser"] = jsonParser;
})(PS);
(function(exports) {
  "use strict";

  exports.toLower = function (s) {
    return s.toLowerCase();
  };
})(PS["Data.String.Common"] = PS["Data.String.Common"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Data.String.Common"] = $PS["Data.String.Common"] || {};
  var exports = $PS["Data.String.Common"];
  var $foreign = $PS["Data.String.Common"];
  exports["toLower"] = $foreign.toLower;
})(PS);
(function(exports) {
    

  exports.log = a => {
	  console.log(a);
	  return a;
  };
})(PS["Debug"] = PS["Debug"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Debug"] = $PS["Debug"] || {};
  var exports = $PS["Debug"];
  var $foreign = $PS["Debug"];
  exports["log"] = $foreign.log;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Design"] = $PS["Design"] || {};
  var exports = $PS["Design"];
  var Css = $PS["Css"];
  var Css_Global = $PS["Css.Global"];                
  var staticStyles = Css_Global.style([ Css_Global.body([ Css.margin("0"), Css.fontFamily("monospace") ]) ]);
  exports["staticStyles"] = staticStyles;
})(PS);
(function(exports) {
  "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Effect.Console"] = $PS["Effect.Console"] || {};
  var exports = $PS["Effect.Console"];
  var $foreign = $PS["Effect.Console"];
  exports["log"] = $foreign.log;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Effect.Class.Console"] = $PS["Effect.Class.Console"] || {};
  var exports = $PS["Effect.Class.Console"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var log = function (dictMonadEffect) {
      var $30 = Effect_Class.liftEffect(dictMonadEffect);
      return function ($31) {
          return $30(Effect_Console.log($31));
      };
  };
  exports["log"] = log;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafePerformEffect = function (f) {
    return f();
  };
})(PS["Effect.Unsafe"] = PS["Effect.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Effect.Unsafe"] = $PS["Effect.Unsafe"] || {};
  var exports = $PS["Effect.Unsafe"];
  var $foreign = $PS["Effect.Unsafe"];
  exports["unsafePerformEffect"] = $foreign.unsafePerformEffect;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Effect.Exception.Unsafe"] = $PS["Effect.Exception.Unsafe"] || {};
  var exports = $PS["Effect.Exception.Unsafe"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Unsafe = $PS["Effect.Unsafe"];                
  var unsafeThrowException = function ($0) {
      return Effect_Unsafe.unsafePerformEffect(Effect_Exception.throwException($0));
  };
  var unsafeThrow = function ($1) {
      return unsafeThrowException(Effect_Exception.error($1));
  };
  exports["unsafeThrow"] = unsafeThrow;
})(PS);
(function(exports) {
  "use strict";

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.write = function (val) {
    return function (ref) {
      return function () {
        ref.value = val;
      };
    };
  };
})(PS["Effect.Ref"] = PS["Effect.Ref"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Effect.Ref"] = $PS["Effect.Ref"] || {};
  var exports = $PS["Effect.Ref"];
  var $foreign = $PS["Effect.Ref"];
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
  exports["write"] = $foreign.write;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Html"] = $PS["Html"] || {};
  var exports = $PS["Html"];
  var Data_Batched = $PS["Data.Batched"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var MyMap = $PS["MyMap"];
  var PointFree = $PS["PointFree"];
  var VirtualDom = $PS["VirtualDom"];
  var VirtualDom_Css = $PS["VirtualDom.Css"];                
  var text = function ($7) {
      return Data_Batched.Single.create(VirtualDom.text($7));
  };
  var noDiff = function (tag) {
      return function (attributes) {
          return function (children) {
              return Data_Batched.Single.create(new VirtualDom.VElement({
                  tag: tag,
                  styles: Data_List_Types.Nil.value,
                  css: Data_Maybe.Nothing.value,
                  attributes: Data_Batched.flatten(new Data_Batched.Batch(attributes)),
                  children: Data_Batched.flatten(new Data_Batched.Batch(children)),
                  node: Data_Maybe.Nothing.value,
                  noDiff: true
              }));
          };
      };
  };
  var elementS = function (tag) {
      return function (styles) {
          return function (attributes) {
              return function (children) {
                  var styles$prime = Data_Batched.flattenMap(Data_Newtype.unwrap())(new Data_Batched.Batch(styles));
                  var mstyles = VirtualDom_Css.process(styles$prime);
                  return Data_Batched.Single.create(VirtualDom.VElement.create((function (r) {
                      if (mstyles instanceof Data_Maybe.Just) {
                          return {
                              attributes: new Data_List_Types.Cons(new VirtualDom.AddClass(mstyles["value0"]["class"]), r.attributes),
                              css: Data_Maybe.Just.create(MyMap.singleton(mstyles["value0"]["class"])(mstyles.value0.css)),
                              children: r.children,
                              noDiff: r.noDiff,
                              node: r.node,
                              styles: r.styles,
                              tag: r.tag
                          };
                      };
                      if (mstyles instanceof Data_Maybe.Nothing) {
                          return r;
                      };
                      throw new Error("Failed pattern match at Html (line 303, column 15 - line 309, column 23): " + [ mstyles.constructor.name ]);
                  })({
                      tag: tag,
                      styles: styles$prime,
                      css: Data_Maybe.Nothing.value,
                      attributes: Data_Batched.flatten(new Data_Batched.Batch(attributes)),
                      children: Data_Batched.flatten(new Data_Batched.Batch(children)),
                      node: Data_Maybe.Nothing.value,
                      noDiff: false
                  })));
              };
          };
      };
  };                         
  var element = function (tag) {
      return function (attributes) {
          return function (children) {
              return Data_Batched.Single.create(new VirtualDom.VElement({
                  tag: tag,
                  styles: Data_List_Types.Nil.value,
                  css: Data_Maybe.Nothing.value,
                  attributes: Data_Batched.flatten(new Data_Batched.Batch(attributes)),
                  children: Data_Batched.flatten(new Data_Batched.Batch(children)),
                  node: Data_Maybe.Nothing.value,
                  noDiff: false
              }));
          };
      };
  };                                                    
  var input = PointFree.applySecond(element("input"))([  ]);
  var textarea = element("textarea");
  var divS = elementS("div");
  var div = element("div");        
  var button = element("button");
  exports["text"] = text;
  exports["button"] = button;
  exports["div"] = div;
  exports["divS"] = divS;
  exports["input"] = input;
  exports["textarea"] = textarea;
})(PS);
(function(exports) {
  exports.getHostname = () => window.location.hostname;

  exports.initialize_f = mk2Tuple => freshUid => freshCid => () => {
    let userId = localStorage.getItem('userId');
    if (!userId) userId = freshUid
    localStorage.setItem('userId', userId);

    const convoId = new URL(window.location.href).searchParams.get('convo');
    if (!convoId) window.location.href += '?convo=' + freshCid;

    return mk2Tuple(userId)(convoId);
  };
})(PS["Main"] = PS["Main"] || {});
(function(exports) {
  exports.raf = effect => () => window.requestAnimationFrame(effect);
})(PS["Platform"] = PS["Platform"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Throttle"] = $PS["Throttle"] || {};
  var exports = $PS["Throttle"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect_Ref = $PS["Effect.Ref"];                
  var throttle = function ($$switch) {
      return function (callback) {
          return function __do() {
              var throttlingRef = Effect_Ref["new"](false)();
              var savedValueRef = Effect_Ref["new"](Data_Maybe.Nothing.value)();
              var go = $$switch(function __do() {
                  var savedValue = Effect_Ref.read(savedValueRef)();
                  if (savedValue instanceof Data_Maybe.Just) {
                      Effect_Ref.write(Data_Maybe.Nothing.value)(savedValueRef)();
                      Effect_Ref.write(true)(throttlingRef)();
                      go();
                      return callback(savedValue.value0)();
                  };
                  if (savedValue instanceof Data_Maybe.Nothing) {
                      return Effect_Ref.write(false)(throttlingRef)();
                  };
                  throw new Error("Failed pattern match at Throttle (line 23, column 9 - line 30, column 51): " + [ savedValue.constructor.name ]);
              });
              return function (a) {
                  return function __do() {
                      var throttling = Effect_Ref.read(throttlingRef)();
                      if (throttling) {
                          Effect_Ref.write(new Data_Maybe.Just(a))(savedValueRef)();
                          return true;
                      };
                      Effect_Ref.write(true)(throttlingRef)();
                      go();
                      callback(a)();
                      return false;
                  };
              };
          };
      };
  };
  exports["throttle"] = throttle;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["WHATWG.HTML.Document"] = $PS["WHATWG.HTML.Document"] || {};
  var exports = $PS["WHATWG.HTML.Document"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var WHATWG_Internal = $PS["WHATWG.Internal"];                
  var headNullable = WHATWG_Internal.unsafeGet("head");
  var unsafeHead = (function () {
      var $1 = Data_Functor.map(Effect.functorEffect)(Unsafe_Coerce.unsafeCoerce);
      return function ($2) {
          return $1(headNullable($2));
      };
  })();
  var bodyNullable = WHATWG_Internal.unsafeGet("body");
  var unsafeBody = (function () {
      var $5 = Data_Functor.map(Effect.functorEffect)(Unsafe_Coerce.unsafeCoerce);
      return function ($6) {
          return $5(bodyNullable($6));
      };
  })();
  exports["unsafeBody"] = unsafeBody;
  exports["unsafeHead"] = unsafeHead;
})(PS);
(function(exports) {
  exports.window = () => window;
})(PS["WHATWG.HTML.Window"] = PS["WHATWG.HTML.Window"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["WHATWG.HTML.Window"] = $PS["WHATWG.HTML.Window"] || {};
  var exports = $PS["WHATWG.HTML.Window"];
  var $foreign = $PS["WHATWG.HTML.Window"];
  var WHATWG_Internal = $PS["WHATWG.Internal"];                
  var document = WHATWG_Internal.unsafeGet("document");
  exports["document"] = document;
  exports["window"] = $foreign.window;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Platform"] = $PS["Platform"] || {};
  var exports = $PS["Platform"];
  var $foreign = $PS["Platform"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Writer_Class = $PS["Control.Monad.Writer.Class"];
  var Control_Monad_Writer_Trans = $PS["Control.Monad.Writer.Trans"];
  var Data_Batched = $PS["Data.Batched"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Sub = $PS["Sub"];
  var Throttle = $PS["Throttle"];
  var VirtualDom = $PS["VirtualDom"];
  var WHATWG_HTML_Document = $PS["WHATWG.HTML.Document"];
  var WHATWG_HTML_Types = $PS["WHATWG.HTML.Types"];
  var WHATWG_HTML_Window = $PS["WHATWG.HTML.Window"];                
  var Cmd = function (x) {
      return x;
  };
  var batch = Data_Batched.Batch.create;
  var $dollar_SemigroupCmd_9 = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return function (sendMsg) {
              return function __do() {
                  v(sendMsg)();
                  return v1(sendMsg)();
              };
          };
      };
  });
  var app = function (init) {
      return function (flags) {
          var v = Control_Monad_Writer_Trans.runWriterT(init.init(flags))();
          var modelRef = Effect_Ref["new"](v.value0)();
          var doc = Control_Bind.bind(Effect.bindEffect)(WHATWG_HTML_Window.window)(WHATWG_HTML_Window.document)();
          var head = Data_Functor.map(Effect.functorEffect)(WHATWG_HTML_Types.toElement())(WHATWG_HTML_Document.unsafeHead(doc))();
          var body = Data_Functor.map(Effect.functorEffect)(WHATWG_HTML_Types.toElement())(WHATWG_HTML_Document.unsafeBody(doc))();
          var initialView = init.view(v.value0);
          var v1 = VirtualDom.render(doc)({
              head: head,
              body: body
          })(Data_Monoid.mempty(Data_Monoid.monoidRecord()(Data_Monoid.monoidRecordCons(new Data_Symbol.IsSymbol(function () {
              return "body";
          }))(Data_List_Types.monoidList)()(Data_Monoid.monoidRecordCons(new Data_Symbol.IsSymbol(function () {
              return "head";
          }))(Data_List_Types.monoidList)()(Data_Monoid.monoidRecordNil)))))({
              head: Data_Batched.flatten(Data_Batched.Batch.create(initialView.head)),
              body: Data_Batched.flatten(Data_Batched.Batch.create(initialView.body))
          })();
          var vdomsRef = Effect_Ref["new"](v1.value0)();
          var domSubsRef = Effect_Ref["new"](v1.value1)();
          var activeSubsRef = Effect_Ref["new"]([  ])();
          var refs = {
              model: modelRef,
              vdoms: vdomsRef,
              domSubs: domSubsRef,
              activeSubs: activeSubsRef
          };
          var render = Throttle.throttle($foreign.raf)(function (v2) {
              return function __do() {
                  var oldVDOMs = Effect_Ref.read(vdomsRef)();
                  var v3 = VirtualDom.render(doc)({
                      head: head,
                      body: body
                  })(oldVDOMs)(v2.value1)();
                  Effect_Ref.write(v3.value0)(vdomsRef)();
                  Effect_Ref.write(v3.value1)(domSubsRef)();
                  var model = Effect_Ref.read(modelRef)();
                  v2.value0(model)(v3.value1)();
                  return Data_Unit.unit;
              };
          })();
          var sendMsg = function (msg) {
              return function __do() {
                  var currentModel = Effect_Ref.read(refs.model)();
                  var v2 = Control_Monad_Writer_Trans.runWriterT(init.update(currentModel)(msg))();
                  Effect_Ref.write(v2.value0)(refs.model)();
                  var v3 = init.view(v2.value0);
                  var skipped = render(new Data_Tuple.Tuple(handleSubs, {
                      head: Data_Batched.flatten(Data_Batched.Batch.create(v3.head)),
                      body: Data_Batched.flatten(Data_Batched.Batch.create(v3.body))
                  }))();
                  (function () {
                      if (skipped) {
                          var domSubs = Effect_Ref.read(refs.domSubs)();
                          return handleSubs(v2.value0)(domSubs)();
                      };
                      return Data_Unit.unit;
                  })();
                  return Data_Newtype.unwrap()(v2.value1)(sendMsg)();
              };
          };
          var handleSubs = function (model) {
              return function (domSubs) {
                  return function __do() {
                      var activeSubs = Effect_Ref.read(refs.activeSubs)();
                      var newActiveSubs = Sub.something(activeSubs)(Data_Semigroup.append(Data_Batched["$_SemigroupBatched_6"])(domSubs)(init.subscriptions(model)))(sendMsg)();
                      return Effect_Ref.write(newActiveSubs)(refs.activeSubs)();
                  };
              };
          };
          var newActiveSubs = Sub.something([  ])(Data_Semigroup.append(Data_Batched["$_SemigroupBatched_6"])(v1.value1)(init.subscriptions(v.value0)))(sendMsg)();
          Effect_Ref.write(newActiveSubs)(activeSubsRef)();
          return Data_Newtype.unwrap()(v.value1)(sendMsg)();
      };
  };
  var $dollar_MonoidCmd_10 = new Data_Monoid.Monoid(function () {
      return $dollar_SemigroupCmd_9;
  }, Cmd(Data_Function["const"](Data_Monoid.mempty(Effect.monoidEffect(Data_Monoid.monoidUnit)))));
  var afterRender = (function () {
      var $40 = Control_Monad_Writer_Class.tell(Control_Monad_Writer_Trans.monadTellWriterT($dollar_MonoidCmd_10)(Effect.monadEffect));
      return function ($41) {
          return $40(Cmd(Data_Function["const"]($41)));
      };
  })();
  exports["app"] = app;
  exports["batch"] = batch;
  exports["afterRender"] = afterRender;
  exports["$_SemigroupCmd_9"] = $dollar_SemigroupCmd_9;
  exports["$_MonoidCmd_10"] = $dollar_MonoidCmd_10;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["TreeMap"] = $PS["TreeMap"] || {};
  var exports = $PS["TreeMap"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Effect_Exception_Unsafe = $PS["Effect.Exception.Unsafe"];
  var PointFree = $PS["PointFree"];                
  var TreeMap = function (x) {
      return x;
  };
  var toTreeMap = function (dictOrd) {
      var $87 = Data_Foldable.foldl(Data_List_Types.foldableList)(function (v) {
          return function (v1) {
              return (function (acc$prime) {
                  var v2 = Data_Map_Internal.lookup(dictOrd)(v1.id)(acc$prime.parents);
                  if (v2 instanceof Data_Maybe.Just && v2.value0 instanceof Data_Either.Left) {
                      return {
                          parents: Data_Map_Internal.insert(dictOrd)(v1.id)(new Data_Either.Right({
                              value: v1.value,
                              parent: v1.parent,
                              children: v2.value0.value0
                          }))(acc$prime.parents),
                          leaves: acc$prime.leaves
                      };
                  };
                  if (v2 instanceof Data_Maybe.Nothing) {
                      return {
                          leaves: Data_Map_Internal.insert(dictOrd)(v1.id)({
                              value: v1.value,
                              parent: v1.parent,
                              children: [  ]
                          })(acc$prime.leaves),
                          parents: acc$prime.parents
                      };
                  };
                  return Effect_Exception_Unsafe.unsafeThrow("Tree.purs: Something has gone wrong");
              })((function () {
                  if (v1.parent instanceof Data_Maybe.Just) {
                      var v2 = Data_Map_Internal.lookup(dictOrd)(v1.parent.value0)(v.leaves);
                      if (v2 instanceof Data_Maybe.Just) {
                          return {
                              leaves: Data_Map_Internal["delete"](dictOrd)(v1.parent.value0)(v.leaves),
                              parents: Data_Map_Internal.insert(dictOrd)(v1.parent.value0)(Data_Either.Right.create({
                                  children: [ v1.id ],
                                  parent: v2.value0.parent,
                                  value: v2.value0.value
                              }))(v.parents)
                          };
                      };
                      if (v2 instanceof Data_Maybe.Nothing) {
                          var v3 = Data_Map_Internal.lookup(dictOrd)(v1.parent.value0)(v.parents);
                          if (v3 instanceof Data_Maybe.Just && v3.value0 instanceof Data_Either.Left) {
                              return {
                                  parents: Data_Map_Internal.insert(dictOrd)(v1.parent.value0)(Data_Either.Left.create(Data_Array.snoc(v3.value0.value0)(v1.id)))(v.parents),
                                  leaves: v.leaves
                              };
                          };
                          if (v3 instanceof Data_Maybe.Just && v3.value0 instanceof Data_Either.Right) {
                              return {
                                  parents: Data_Map_Internal.insert(dictOrd)(v1.parent.value0)(Data_Either.Right.create({
                                      children: Data_Array.snoc(v3.value0.value0.children)(v1.id),
                                      parent: v3.value0.value0.parent,
                                      value: v3.value0.value0.value
                                  }))(v.parents),
                                  leaves: v.leaves
                              };
                          };
                          if (v3 instanceof Data_Maybe.Nothing) {
                              return {
                                  parents: Data_Map_Internal.insert(dictOrd)(v1.parent.value0)(new Data_Either.Left([ v1.id ]))(v.parents),
                                  leaves: v.leaves
                              };
                          };
                          throw new Error("Failed pattern match at TreeMap (line 60, column 19 - line 81, column 86): " + [ v3.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at TreeMap (line 49, column 15 - line 81, column 86): " + [ v2.constructor.name ]);
                  };
                  if (v1.parent instanceof Data_Maybe.Nothing) {
                      return v;
                  };
                  throw new Error("Failed pattern match at TreeMap (line 47, column 11 - line 83, column 27): " + [ v1.parent.constructor.name ]);
              })());
          };
      })({
          leaves: Data_Map_Internal.empty,
          parents: Data_Map_Internal.empty
      });
      return function ($88) {
          return TreeMap($87($88));
      };
  };
  var lookupEither = function (dictOrd) {
      return function (key) {
          return function (v) {
              var v1 = Data_Map_Internal.lookup(dictOrd)(key)(v.parents);
              if (v1 instanceof Data_Maybe.Just && v1.value0 instanceof Data_Either.Right) {
                  return new Data_Either.Right(v1.value0.value0);
              };
              if (v1 instanceof Data_Maybe.Nothing) {
                  var v2 = Data_Map_Internal.lookup(dictOrd)(key)(v.leaves);
                  if (v2 instanceof Data_Maybe.Just) {
                      return new Data_Either.Right(v2.value0);
                  };
                  if (v2 instanceof Data_Maybe.Nothing) {
                      return Data_Either.Left.create("key not found");
                  };
                  throw new Error("Failed pattern match at TreeMap (line 132, column 16 - line 134, column 40): " + [ v2.constructor.name ]);
              };
              return Effect_Exception_Unsafe.unsafeThrow("Tree.purs: lookup: Something has gone wrong");
          };
      };
  };
  var siblings = function (dictOrd) {
      return function (key) {
          return function (tm) {
              var find = PointFree.applySecond(lookupEither(dictOrd))(tm);
              return Control_Bind.bind(Data_Either.bindEither)(lookupEither(dictOrd)(key)(tm))(function (v) {
                  if (v.parent instanceof Data_Maybe.Just) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.mapFlipped(Data_Either.functorEither)(find(v.parent.value0))((function () {
                          var $89 = Data_Array["delete"](dictOrd.Eq0())(key);
                          return function ($90) {
                              return $89((function (v1) {
                                  return v1.children;
                              })($90));
                          };
                      })()))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)((function () {
                          var $91 = Data_Functor.map(Data_Either.functorEither)(function (v1) {
                              return v1.value;
                          });
                          return function ($92) {
                              return $91(find($92));
                          };
                      })()));
                  };
                  if (v.parent instanceof Data_Maybe.Nothing) {
                      return new Data_Either.Right([  ]);
                  };
                  throw new Error("Failed pattern match at TreeMap (line 143, column 9 - line 148, column 30): " + [ v.parent.constructor.name ]);
              });
          };
      };
  };
  var lookup = function (dictOrd) {
      return function (key) {
          return function (v) {
              var v1 = Data_Map_Internal.lookup(dictOrd)(key)(v.parents);
              if (v1 instanceof Data_Maybe.Just && v1.value0 instanceof Data_Either.Right) {
                  return new Data_Maybe.Just(v1.value0.value0);
              };
              if (v1 instanceof Data_Maybe.Nothing) {
                  return Data_Map_Internal.lookup(dictOrd)(key)(v.leaves);
              };
              return Effect_Exception_Unsafe.unsafeThrow("Tree.purs: lookup: Something has gone wrong");
          };
      };
  };
  var leaves = function (v) {
      return Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(v.leaves);
  };
  var getThread = function (dictOrd) {
      return function (start) {
          return function (tm) {
              var helper = function (acc) {
                  return PointFree.applySecond(go)(PointFree.applySecond(Data_List_NonEmpty.cons)(acc));
              };
              var go = function (key) {
                  return function (f) {
                      return Control_Bind.bind(Data_Maybe.bindMaybe)(lookup(dictOrd)(key)(tm))(function (v) {
                          var v1 = siblings(dictOrd)(key)(tm);
                          if (v1 instanceof Data_Either.Right) {
                              var f$primed = f(new Data_Tuple.Tuple(v.value, v1.value0));
                              if (v.parent instanceof Data_Maybe.Just) {
                                  return helper(f$primed)(v.parent.value0);
                              };
                              if (v.parent instanceof Data_Maybe.Nothing) {
                                  return new Data_Maybe.Just(f$primed);
                              };
                              throw new Error("Failed pattern match at TreeMap (line 162, column 17 - line 164, column 38): " + [ v.parent.constructor.name ]);
                          };
                          if (v1 instanceof Data_Either.Left) {
                              return Effect_Exception_Unsafe.unsafeThrow("Tree.purs: getThread");
                          };
                          throw new Error("Failed pattern match at TreeMap (line 159, column 13 - line 165, column 59): " + [ v1.constructor.name ]);
                      });
                  };
              };
              return Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(go(start)(Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)))(Data_List_NonEmpty.reverse);
          };
      };
  };
  var findLeaf = function (dictOrd) {
      return function (id) {
          return function (tm) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(lookup(dictOrd)(id)(tm))(function (v) {
                  var v1 = Data_Array.uncons(v.children);
                  if (v1 instanceof Data_Maybe.Just) {
                      return findLeaf(dictOrd)(v1.value0.head)(tm);
                  };
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return new Data_Maybe.Just(id);
                  };
                  throw new Error("Failed pattern match at TreeMap (line 187, column 9 - line 189, column 29): " + [ v1.constructor.name ]);
              });
          };
      };
  };
  var empty = {
      leaves: Data_Map_Internal.empty,
      parents: Data_Map_Internal.empty
  };
  exports["empty"] = empty;
  exports["findLeaf"] = findLeaf;
  exports["getThread"] = getThread;
  exports["leaves"] = leaves;
  exports["lookup"] = lookup;
  exports["toTreeMap"] = toTreeMap;
})(PS);
(function(exports) {
  exports.getElementByIdImpl = id => document => () => document.getElementById(id)
})(PS["WHATWG.DOM.Mixin.NonElementParentNode"] = PS["WHATWG.DOM.Mixin.NonElementParentNode"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["WHATWG.DOM.Mixin.NonElementParentNode"] = $PS["WHATWG.DOM.Mixin.NonElementParentNode"] || {};
  var exports = $PS["WHATWG.DOM.Mixin.NonElementParentNode"];
  var $foreign = $PS["WHATWG.DOM.Mixin.NonElementParentNode"];
  var getElementById = function (dictNonElementParentNode) {
      return $foreign.getElementByIdImpl;
  };
  exports["getElementById"] = getElementById;
})(PS);
(function(exports) {
  exports.focusImpl = options => element => () => element.focus(options);
})(PS["WHATWG.HTML.Mixin.HTMLOrSVGElement"] = PS["WHATWG.HTML.Mixin.HTMLOrSVGElement"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["WHATWG.HTML.Mixin.HTMLOrSVGElement"] = $PS["WHATWG.HTML.Mixin.HTMLOrSVGElement"] || {};
  var exports = $PS["WHATWG.HTML.Mixin.HTMLOrSVGElement"];
  var $foreign = $PS["WHATWG.HTML.Mixin.HTMLOrSVGElement"];
  var focus = function (dictFFIOptions) {
      return function (dictHTMLOrSVGElement) {
          return $foreign.focusImpl;
      };
  };
  exports["focus"] = focus;
})(PS);
(function(exports) {
  exports.newConnection =
  ({ url }) => () =>
  {
    const client = new WebSocket(url);
    return client;
  }

  exports.onOpen =
  k => client => () =>
  {
    client.addEventListener('open', () => {
      k();
    });
  }

  exports.onTransmission_f =
  decode =>
  k => client => () =>
  {
    client.addEventListener('message', event => {
      const text = event.data.toString();
      console.log('Transmission received:', text);
      const val = decode(text);
      k(val)();
    });
  }

  exports.transmit_f =
  text => client => () =>
  {
    console.log('Sending transmission:', text);
    client.send(text);
  }
})(PS["Y.Client.WebSocket"] = PS["Y.Client.WebSocket"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Y.Shared.Util.Codable"] = $PS["Y.Shared.Util.Codable"] || {};
  var exports = $PS["Y.Shared.Util.Codable"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Class = $PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Encode_Class = $PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Parser = $PS["Data.Argonaut.Parser"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var Encodable = function (encode) {
      this.encode = encode;
  };
  var Decodable = function (decode) {
      this.decode = decode;
  };
  var encode = function (dict) {
      return dict.encode;
  };
  var encodableArgonaut = function (dictEncodeJson) {
      return new Encodable((function () {
          var $3 = Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson);
          return function ($4) {
              return Data_Argonaut_Core.stringify($3($4));
          };
      })());
  };
  var decode = function (dict) {
      return dict.decode;
  };
  var decodableMaybeArgonaut = function (dictDecodeJson) {
      return new Decodable(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(function ($5) {
          return Data_Either.hush(Data_Argonaut_Parser.jsonParser($5));
      })((function () {
          var $6 = Data_Argonaut_Decode_Class.decodeJson(dictDecodeJson);
          return function ($7) {
              return Data_Either.hush($6($7));
          };
      })()));
  };
  exports["decode"] = decode;
  exports["encode"] = encode;
  exports["encodableArgonaut"] = encodableArgonaut;
  exports["decodableMaybeArgonaut"] = decodableMaybeArgonaut;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Y.Client.WebSocket"] = $PS["Y.Client.WebSocket"] || {};
  var exports = $PS["Y.Client.WebSocket"];
  var $foreign = $PS["Y.Client.WebSocket"];
  var Y_Shared_Util_Codable = $PS["Y.Shared.Util.Codable"];                
  var transmit = function (dictEncodable) {
      return function (tn) {
          return function (client) {
              return $foreign.transmit_f(Y_Shared_Util_Codable.encode(dictEncodable)(tn))(client);
          };
      };
  };
  var onTransmission = function (dictDecodable) {
      return $foreign.onTransmission_f(Y_Shared_Util_Codable.decode(dictDecodable));
  };
  exports["onTransmission"] = onTransmission;
  exports["transmit"] = transmit;
  exports["newConnection"] = $foreign.newConnection;
  exports["onOpen"] = $foreign.onOpen;
})(PS);
(function(exports) {
  exports.new_f = namespace => () => {
    if (!(typeof namespace === 'string' && /^[a-zA-Z]+$/.test(namespace)))
      throw Error('Namepsace must be string of 1 or more letters');
    const time = Date.now() + '';
    const rand = (Math.floor(Math.random() * 1e6) + '').padStart(6, '0')
    return `y-${namespace}-${time}-${rand}`;
  }
})(PS["Y.Shared.Id"] = PS["Y.Shared.Id"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Y.Shared.Id"] = $PS["Y.Shared.Id"] || {};
  var exports = $PS["Y.Shared.Id"];
  var $foreign = $PS["Y.Shared.Id"];
  var Data_Argonaut_Decode_Class = $PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Encode_Class = $PS["Data.Argonaut.Encode.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Symbol = $PS["Data.Symbol"];                
  var Id = function (x) {
      return x;
  };
  var format = function (v) {
      return v;
  };
  var eqId = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x === y;
      };
  });
  var ordId = new Data_Ord.Ord(function () {
      return eqId;
  }, function (x) {
      return function (y) {
          return Data_Ord.compare(Data_Ord.ordString)(x)(y);
      };
  });
  var encodeJsonId = new Data_Argonaut_Encode_Class.EncodeJson((function () {
      var $18 = Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString);
      return function ($19) {
          return $18(format($19));
      };
  })());
  var decodeJsonId = new Data_Argonaut_Decode_Class.DecodeJson((function () {
      var $20 = Data_Functor.map(Data_Either.functorEither)(Id);
      var $21 = Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString);
      return function ($22) {
          return $20($21($22));
      };
  })());
  var _tagName = function (dictIsSymbol) {
      return function (proxy) {
          return Data_String_Common.toLower(Data_Symbol.reflectSymbol(dictIsSymbol)(proxy));
      };
  };
  var $$new = function (dictIsSymbol) {
      return $foreign.new_f(_tagName(dictIsSymbol)(Data_Symbol.SProxy.value));
  };
  exports["new"] = $$new;
  exports["eqId"] = eqId;
  exports["ordId"] = ordId;
  exports["encodeJsonId"] = encodeJsonId;
  exports["decodeJsonId"] = decodeJsonId;
})(PS);
(function(exports) {
  exports.getNow_f =
  () =>
  {
    return +Date.now();
  };
})(PS["Y.Shared.Util.Instant"] = PS["Y.Shared.Util.Instant"] || {});
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Y.Shared.Util.Instant"] = $PS["Y.Shared.Util.Instant"] || {};
  var exports = $PS["Y.Shared.Util.Instant"];
  var $foreign = $PS["Y.Shared.Util.Instant"];
  var Data_Argonaut_Decode_Class = $PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Generic = $PS["Data.Argonaut.Decode.Generic"];
  var Data_Argonaut_Encode_Class = $PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Encode_Generic = $PS["Data.Argonaut.Encode.Generic"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Effect = $PS["Effect"];
  var getNow = Data_Functor.mapFlipped(Effect.functorEffect)($foreign.getNow_f)(function (now) {
      return {
          milliseconds: now
      };
  });
  var genericInstant = new Data_Generic_Rep.Generic(function (x) {
      return x;
  }, function (x) {
      return x;
  });
  var eqInstant = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x.milliseconds === y.milliseconds;
      };
  });
  var ordInstant = new Data_Ord.Ord(function () {
      return eqInstant;
  }, function (x) {
      return function (y) {
          return Data_Ord.compare(Data_Ord.ordNumber)(x.milliseconds)(y.milliseconds);
      };
  });
  var encodeJsonInstant = new Data_Argonaut_Encode_Class.EncodeJson(Data_Argonaut_Encode_Generic.genericEncodeJson(genericInstant)(Data_Argonaut_Encode_Generic.encodeRepConstructor(new Data_Symbol.IsSymbol(function () {
      return "Instant";
  }))(Data_Argonaut_Encode_Generic.encodeRepArgsArgument(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonJNumber)(Data_Argonaut_Encode_Class.gEncodeJsonNil)(new Data_Symbol.IsSymbol(function () {
      return "milliseconds";
  }))())()))));
  var decodeJsonInstant = new Data_Argonaut_Decode_Class.DecodeJson(Data_Argonaut_Decode_Generic.genericDecodeJson(genericInstant)(Data_Argonaut_Decode_Generic.decodeRepConstructorArg(new Data_Symbol.IsSymbol(function () {
      return "Instant";
  }))(Data_Argonaut_Decode_Class.decodeRecord(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeFieldId(Data_Argonaut_Decode_Class.decodeJsonNumber))(Data_Argonaut_Decode_Class.gDecodeJsonNil)(new Data_Symbol.IsSymbol(function () {
      return "milliseconds";
  }))()())())));
  exports["getNow"] = getNow;
  exports["ordInstant"] = ordInstant;
  exports["encodeJsonInstant"] = encodeJsonInstant;
  exports["decodeJsonInstant"] = decodeJsonInstant;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Y.Shared.Event"] = $PS["Y.Shared.Event"] || {};
  var exports = $PS["Y.Shared.Event"];
  var Data_Argonaut_Decode_Class = $PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Generic = $PS["Data.Argonaut.Decode.Generic"];
  var Data_Argonaut_Encode_Class = $PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Encode_Generic = $PS["Data.Argonaut.Encode.Generic"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Y_Shared_Id = $PS["Y.Shared.Id"];
  var Y_Shared_Util_Instant = $PS["Y.Shared.Util.Instant"];                
  var EventPayload_SetName = (function () {
      function EventPayload_SetName(value0) {
          this.value0 = value0;
      };
      EventPayload_SetName.create = function (value0) {
          return new EventPayload_SetName(value0);
      };
      return EventPayload_SetName;
  })();
  var EventPayload_MessageSend = (function () {
      function EventPayload_MessageSend(value0) {
          this.value0 = value0;
      };
      EventPayload_MessageSend.create = function (value0) {
          return new EventPayload_MessageSend(value0);
      };
      return EventPayload_MessageSend;
  })();
  var EventPayload_SetReadState = (function () {
      function EventPayload_SetReadState(value0) {
          this.value0 = value0;
      };
      EventPayload_SetReadState.create = function (value0) {
          return new EventPayload_SetReadState(value0);
      };
      return EventPayload_SetReadState;
  })();
  var genericEventPayload = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof EventPayload_SetName) {
          return new Data_Generic_Rep.Inl(x.value0);
      };
      if (x instanceof EventPayload_MessageSend) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
      };
      if (x instanceof EventPayload_SetReadState) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0));
      };
      throw new Error("Failed pattern match at Y.Shared.Event (line 58, column 1 - line 58, column 62): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return new EventPayload_SetName(x.value0);
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return new EventPayload_MessageSend(x.value0.value0);
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
          return new EventPayload_SetReadState(x.value0.value0);
      };
      throw new Error("Failed pattern match at Y.Shared.Event (line 58, column 1 - line 58, column 62): " + [ x.constructor.name ]);
  });
  var genericEvent = new Data_Generic_Rep.Generic(function (x) {
      return x;
  }, function (x) {
      return x;
  });
  var encodeJsonEventPayload = new Data_Argonaut_Encode_Class.EncodeJson(Data_Argonaut_Encode_Generic.genericEncodeJson(genericEventPayload)(Data_Argonaut_Encode_Generic.encodeRepSum(Data_Argonaut_Encode_Generic.encodeRepConstructor(new Data_Symbol.IsSymbol(function () {
      return "EventPayload_SetName";
  }))(Data_Argonaut_Encode_Generic.encodeRepArgsArgument(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Y_Shared_Id.encodeJsonId)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonJString)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Y_Shared_Id.encodeJsonId)(Data_Argonaut_Encode_Class.gEncodeJsonNil)(new Data_Symbol.IsSymbol(function () {
      return "userId";
  }))())(new Data_Symbol.IsSymbol(function () {
      return "name";
  }))())(new Data_Symbol.IsSymbol(function () {
      return "convoId";
  }))())())))(Data_Argonaut_Encode_Generic.encodeRepSum(Data_Argonaut_Encode_Generic.encodeRepConstructor(new Data_Symbol.IsSymbol(function () {
      return "EventPayload_MessageSend";
  }))(Data_Argonaut_Encode_Generic.encodeRepArgsArgument(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Y_Shared_Id.encodeJsonId)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Y_Shared_Id.encodeJsonId)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonJString)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Y_Shared_Id.encodeJsonId)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeSet(Y_Shared_Id.ordId)(Y_Shared_Id.encodeJsonId))(Data_Argonaut_Encode_Class.gEncodeJsonCons(Y_Shared_Id.encodeJsonId)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Y_Shared_Util_Instant.encodeJsonInstant)(Data_Argonaut_Encode_Class.gEncodeJsonNil)(new Data_Symbol.IsSymbol(function () {
      return "timeSent";
  }))())(new Data_Symbol.IsSymbol(function () {
      return "id";
  }))())(new Data_Symbol.IsSymbol(function () {
      return "depIds";
  }))())(new Data_Symbol.IsSymbol(function () {
      return "convoId";
  }))())(new Data_Symbol.IsSymbol(function () {
      return "content";
  }))())(new Data_Symbol.IsSymbol(function () {
      return "authorId";
  }))())())(Data_Argonaut_Encode_Class.gEncodeJsonNil)(new Data_Symbol.IsSymbol(function () {
      return "message";
  }))())(new Data_Symbol.IsSymbol(function () {
      return "convoId";
  }))())())))(Data_Argonaut_Encode_Generic.encodeRepConstructor(new Data_Symbol.IsSymbol(function () {
      return "EventPayload_SetReadState";
  }))(Data_Argonaut_Encode_Generic.encodeRepArgsArgument(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Y_Shared_Id.encodeJsonId)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Y_Shared_Id.encodeJsonId)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonJBoolean)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Y_Shared_Id.encodeJsonId)(Data_Argonaut_Encode_Class.gEncodeJsonNil)(new Data_Symbol.IsSymbol(function () {
      return "userId";
  }))())(new Data_Symbol.IsSymbol(function () {
      return "readState";
  }))())(new Data_Symbol.IsSymbol(function () {
      return "messageId";
  }))())(new Data_Symbol.IsSymbol(function () {
      return "convoId";
  }))())()))))));
  var encodeJsonEvent = new Data_Argonaut_Encode_Class.EncodeJson(Data_Argonaut_Encode_Generic.genericEncodeJson(genericEvent)(Data_Argonaut_Encode_Generic.encodeRepConstructor(new Data_Symbol.IsSymbol(function () {
      return "Event";
  }))(Data_Argonaut_Encode_Generic.encodeRepArgsArgument(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Y_Shared_Id.encodeJsonId)(Data_Argonaut_Encode_Class.gEncodeJsonCons(encodeJsonEventPayload)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Y_Shared_Util_Instant.encodeJsonInstant)(Data_Argonaut_Encode_Class.gEncodeJsonNil)(new Data_Symbol.IsSymbol(function () {
      return "time";
  }))())(new Data_Symbol.IsSymbol(function () {
      return "payload";
  }))())(new Data_Symbol.IsSymbol(function () {
      return "id";
  }))())()))));
  var decodeJsonEventPayload = new Data_Argonaut_Decode_Class.DecodeJson(Data_Argonaut_Decode_Generic.genericDecodeJson(genericEventPayload)(Data_Argonaut_Decode_Generic.decodeRepSum(Data_Argonaut_Decode_Generic.decodeRepConstructorArg(new Data_Symbol.IsSymbol(function () {
      return "EventPayload_SetName";
  }))(Data_Argonaut_Decode_Class.decodeRecord(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeFieldId(Y_Shared_Id.decodeJsonId))(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeFieldId(Data_Argonaut_Decode_Class.decodeJsonString))(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeFieldId(Y_Shared_Id.decodeJsonId))(Data_Argonaut_Decode_Class.gDecodeJsonNil)(new Data_Symbol.IsSymbol(function () {
      return "userId";
  }))()())(new Data_Symbol.IsSymbol(function () {
      return "name";
  }))()())(new Data_Symbol.IsSymbol(function () {
      return "convoId";
  }))()())()))(Data_Argonaut_Decode_Generic.decodeRepSum(Data_Argonaut_Decode_Generic.decodeRepConstructorArg(new Data_Symbol.IsSymbol(function () {
      return "EventPayload_MessageSend";
  }))(Data_Argonaut_Decode_Class.decodeRecord(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeFieldId(Y_Shared_Id.decodeJsonId))(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeFieldId(Data_Argonaut_Decode_Class.decodeRecord(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeFieldId(Y_Shared_Id.decodeJsonId))(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeFieldId(Data_Argonaut_Decode_Class.decodeJsonString))(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeFieldId(Y_Shared_Id.decodeJsonId))(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeFieldId(Data_Argonaut_Decode_Class.decodeSet(Y_Shared_Id.ordId)(Y_Shared_Id.decodeJsonId)))(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeFieldId(Y_Shared_Id.decodeJsonId))(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeFieldId(Y_Shared_Util_Instant.decodeJsonInstant))(Data_Argonaut_Decode_Class.gDecodeJsonNil)(new Data_Symbol.IsSymbol(function () {
      return "timeSent";
  }))()())(new Data_Symbol.IsSymbol(function () {
      return "id";
  }))()())(new Data_Symbol.IsSymbol(function () {
      return "depIds";
  }))()())(new Data_Symbol.IsSymbol(function () {
      return "convoId";
  }))()())(new Data_Symbol.IsSymbol(function () {
      return "content";
  }))()())(new Data_Symbol.IsSymbol(function () {
      return "authorId";
  }))()())()))(Data_Argonaut_Decode_Class.gDecodeJsonNil)(new Data_Symbol.IsSymbol(function () {
      return "message";
  }))()())(new Data_Symbol.IsSymbol(function () {
      return "convoId";
  }))()())()))(Data_Argonaut_Decode_Generic.decodeRepConstructorArg(new Data_Symbol.IsSymbol(function () {
      return "EventPayload_SetReadState";
  }))(Data_Argonaut_Decode_Class.decodeRecord(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeFieldId(Y_Shared_Id.decodeJsonId))(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeFieldId(Y_Shared_Id.decodeJsonId))(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeFieldId(Data_Argonaut_Decode_Class.decodeJsonBoolean))(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeFieldId(Y_Shared_Id.decodeJsonId))(Data_Argonaut_Decode_Class.gDecodeJsonNil)(new Data_Symbol.IsSymbol(function () {
      return "userId";
  }))()())(new Data_Symbol.IsSymbol(function () {
      return "readState";
  }))()())(new Data_Symbol.IsSymbol(function () {
      return "messageId";
  }))()())(new Data_Symbol.IsSymbol(function () {
      return "convoId";
  }))()())())))));
  var decodeJsonEvent = new Data_Argonaut_Decode_Class.DecodeJson(Data_Argonaut_Decode_Generic.genericDecodeJson(genericEvent)(Data_Argonaut_Decode_Generic.decodeRepConstructorArg(new Data_Symbol.IsSymbol(function () {
      return "Event";
  }))(Data_Argonaut_Decode_Class.decodeRecord(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeFieldId(Y_Shared_Id.decodeJsonId))(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeFieldId(decodeJsonEventPayload))(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeFieldId(Y_Shared_Util_Instant.decodeJsonInstant))(Data_Argonaut_Decode_Class.gDecodeJsonNil)(new Data_Symbol.IsSymbol(function () {
      return "time";
  }))()())(new Data_Symbol.IsSymbol(function () {
      return "payload";
  }))()())(new Data_Symbol.IsSymbol(function () {
      return "id";
  }))()())())));
  exports["EventPayload_SetName"] = EventPayload_SetName;
  exports["EventPayload_MessageSend"] = EventPayload_MessageSend;
  exports["encodeJsonEvent"] = encodeJsonEvent;
  exports["decodeJsonEvent"] = decodeJsonEvent;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["Y.Shared.Transmission"] = $PS["Y.Shared.Transmission"] || {};
  var exports = $PS["Y.Shared.Transmission"];
  var Data_Argonaut_Decode_Class = $PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Generic = $PS["Data.Argonaut.Decode.Generic"];
  var Data_Argonaut_Encode_Class = $PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Encode_Generic = $PS["Data.Argonaut.Encode.Generic"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Y_Shared_Event = $PS["Y.Shared.Event"];
  var Y_Shared_Id = $PS["Y.Shared.Id"];                
  var ToServer_Subscribe = (function () {
      function ToServer_Subscribe(value0) {
          this.value0 = value0;
      };
      ToServer_Subscribe.create = function (value0) {
          return new ToServer_Subscribe(value0);
      };
      return ToServer_Subscribe;
  })();
  var ToServer_Pull = (function () {
      function ToServer_Pull(value0) {
          this.value0 = value0;
      };
      ToServer_Pull.create = function (value0) {
          return new ToServer_Pull(value0);
      };
      return ToServer_Pull;
  })();
  var ToServer_Push = (function () {
      function ToServer_Push(value0) {
          this.value0 = value0;
      };
      ToServer_Push.create = function (value0) {
          return new ToServer_Push(value0);
      };
      return ToServer_Push;
  })();
  var ToClient_Broadcast = (function () {
      function ToClient_Broadcast(value0) {
          this.value0 = value0;
      };
      ToClient_Broadcast.create = function (value0) {
          return new ToClient_Broadcast(value0);
      };
      return ToClient_Broadcast;
  })();
  var genericToServer = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof ToServer_Subscribe) {
          return new Data_Generic_Rep.Inl(x.value0);
      };
      if (x instanceof ToServer_Pull) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
      };
      if (x instanceof ToServer_Push) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0));
      };
      throw new Error("Failed pattern match at Y.Shared.Transmission (line 33, column 1 - line 33, column 54): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return new ToServer_Subscribe(x.value0);
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return new ToServer_Pull(x.value0.value0);
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
          return new ToServer_Push(x.value0.value0);
      };
      throw new Error("Failed pattern match at Y.Shared.Transmission (line 33, column 1 - line 33, column 54): " + [ x.constructor.name ]);
  });
  var genericToClient = new Data_Generic_Rep.Generic(function (x) {
      return x.value0;
  }, function (x) {
      return new ToClient_Broadcast(x);
  });
  var encodeJsonToServer = new Data_Argonaut_Encode_Class.EncodeJson(Data_Argonaut_Encode_Generic.genericEncodeJson(genericToServer)(Data_Argonaut_Encode_Generic.encodeRepSum(Data_Argonaut_Encode_Generic.encodeRepConstructor(new Data_Symbol.IsSymbol(function () {
      return "ToServer_Subscribe";
  }))(Data_Argonaut_Encode_Generic.encodeRepArgsArgument(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Y_Shared_Id.encodeJsonId)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Y_Shared_Id.encodeJsonId)(Data_Argonaut_Encode_Class.gEncodeJsonNil)(new Data_Symbol.IsSymbol(function () {
      return "userId";
  }))())(new Data_Symbol.IsSymbol(function () {
      return "convoId";
  }))())())))(Data_Argonaut_Encode_Generic.encodeRepSum(Data_Argonaut_Encode_Generic.encodeRepConstructor(new Data_Symbol.IsSymbol(function () {
      return "ToServer_Pull";
  }))(Data_Argonaut_Encode_Generic.encodeRepArgsArgument(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Y_Shared_Id.encodeJsonId)(Data_Argonaut_Encode_Class.gEncodeJsonNil)(new Data_Symbol.IsSymbol(function () {
      return "convoId";
  }))())())))(Data_Argonaut_Encode_Generic.encodeRepConstructor(new Data_Symbol.IsSymbol(function () {
      return "ToServer_Push";
  }))(Data_Argonaut_Encode_Generic.encodeRepArgsArgument(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Y_Shared_Id.encodeJsonId)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Y_Shared_Event.encodeJsonEvent)(Data_Argonaut_Encode_Class.gEncodeJsonNil)(new Data_Symbol.IsSymbol(function () {
      return "event";
  }))())(new Data_Symbol.IsSymbol(function () {
      return "convoId";
  }))())())))))); 
  var decodeJsonToClient = new Data_Argonaut_Decode_Class.DecodeJson(Data_Argonaut_Decode_Generic.genericDecodeJson(genericToClient)(Data_Argonaut_Decode_Generic.decodeRepConstructorArg(new Data_Symbol.IsSymbol(function () {
      return "ToClient_Broadcast";
  }))(Data_Argonaut_Decode_Class.decodeArray(Y_Shared_Event.decodeJsonEvent))));
  exports["ToServer_Subscribe"] = ToServer_Subscribe;
  exports["ToServer_Pull"] = ToServer_Pull;
  exports["ToServer_Push"] = ToServer_Push;
  exports["encodeJsonToServer"] = encodeJsonToServer;
  exports["decodeJsonToClient"] = decodeJsonToClient;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.2
  "use strict";
  $PS["WebSocketSub"] = $PS["WebSocketSub"] || {};
  var exports = $PS["WebSocketSub"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Batched = $PS["Data.Batched"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Producer = $PS["Producer"];
  var RefEq = $PS["RefEq"];
  var Sub = $PS["Sub"];
  var Y_Client_WebSocket = $PS["Y.Client.WebSocket"];
  var Y_Shared_Transmission = $PS["Y.Shared.Transmission"];
  var Y_Shared_Util_Codable = $PS["Y.Shared.Util.Codable"];                
  var canceler = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
  var helper = function (v) {
      return function (v1) {
          return function (msgCallback) {
              return function __do() {
                  Y_Client_WebSocket.onTransmission(Y_Shared_Util_Codable.decodableMaybeArgonaut(Y_Shared_Transmission.decodeJsonToClient))(function ($6) {
                      return msgCallback(v.value0($6));
                  })(v1.value0)();
                  return canceler;
              };
          };
      };
  };
  var wsToSub = function (toMsg) {
      return function (client) {
          return Data_Batched.Single.create(Sub.SingleSub(Producer.producer2(Data_Tuple.eqTuple(RefEq.eqRefEq)(RefEq.eqRefEq))(helper)(new RefEq.RefEq(toMsg))(new RefEq.RefEq(client))));
      };
  };
  exports["wsToSub"] = wsToSub;
})(PS);
(function($PS) {
  "use strict";
  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var $foreign = $PS["Main"];
  var Attribute = $PS["Attribute"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Writer_Class = $PS["Control.Monad.Writer.Class"];
  var Control_Monad_Writer_Trans = $PS["Control.Monad.Writer.Trans"];
  var Css = $PS["Css"];
  var Data_Array = $PS["Data.Array"];
  var Data_Batched = $PS["Data.Batched"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Set = $PS["Data.Set"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Debug = $PS["Debug"];
  var Design = $PS["Design"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Class_Console = $PS["Effect.Class.Console"];
  var Html = $PS["Html"];
  var Platform = $PS["Platform"];
  var PointFree = $PS["PointFree"];
  var Producer = $PS["Producer"];
  var TreeMap = $PS["TreeMap"];
  var WHATWG_DOM_Mixin_NonElementParentNode = $PS["WHATWG.DOM.Mixin.NonElementParentNode"];
  var WHATWG_HTML_Mixin_HTMLOrSVGElement = $PS["WHATWG.HTML.Mixin.HTMLOrSVGElement"];
  var WHATWG_HTML_Types = $PS["WHATWG.HTML.Types"];
  var WHATWG_HTML_Window = $PS["WHATWG.HTML.Window"];
  var WebSocketSub = $PS["WebSocketSub"];
  var Y_Client_WebSocket = $PS["Y.Client.WebSocket"];
  var Y_Shared_Event = $PS["Y.Shared.Event"];
  var Y_Shared_Id = $PS["Y.Shared.Id"];
  var Y_Shared_Transmission = $PS["Y.Shared.Transmission"];
  var Y_Shared_Util_Codable = $PS["Y.Shared.Util.Codable"];
  var Y_Shared_Util_Instant = $PS["Y.Shared.Util.Instant"];                
  var WebSocketOpened = (function () {
      function WebSocketOpened() {

      };
      WebSocketOpened.value = new WebSocketOpened();
      return WebSocketOpened;
  })();
  var TransmissionReceived = (function () {
      function TransmissionReceived(value0) {
          this.value0 = value0;
      };
      TransmissionReceived.create = function (value0) {
          return new TransmissionReceived(value0);
      };
      return TransmissionReceived;
  })();
  var UpdateMessage = (function () {
      function UpdateMessage(value0) {
          this.value0 = value0;
      };
      UpdateMessage.create = function (value0) {
          return new UpdateMessage(value0);
      };
      return UpdateMessage;
  })();
  var SendMessage = (function () {
      function SendMessage() {

      };
      SendMessage.value = new SendMessage();
      return SendMessage;
  })();
  var SelectThreadRoot = (function () {
      function SelectThreadRoot(value0) {
          this.value0 = value0;
      };
      SelectThreadRoot.create = function (value0) {
          return new SelectThreadRoot(value0);
      };
      return SelectThreadRoot;
  })();
  var NewThread = (function () {
      function NewThread() {

      };
      NewThread.value = new NewThread();
      return NewThread;
  })();
  var SelectMessageParent = (function () {
      function SelectMessageParent(value0) {
          this.value0 = value0;
      };
      SelectMessageParent.create = function (value0) {
          return new SelectMessageParent(value0);
      };
      return SelectMessageParent;
  })();
  var UpdateNameInput = (function () {
      function UpdateNameInput(value0) {
          this.value0 = value0;
      };
      UpdateNameInput.create = function (value0) {
          return new UpdateNameInput(value0);
      };
      return UpdateNameInput;
  })();
  var UpdateName = (function () {
      function UpdateName() {

      };
      UpdateName.value = new UpdateName();
      return UpdateName;
  })();
  var toIVP = function (v) {
      return {
          id: v.id,
          value: v,
          parent: Data_Set.findMax(v.depIds)
      };
  };
  var subscriptions = function (model) {
      return WebSocketSub.wsToSub(TransmissionReceived.create)(model.wsClient);
  };
  var splitEvents = Data_Foldable.foldr(Data_Foldable.foldableArray)(function (v) {
      return function (v1) {
          if (v.payload instanceof Y_Shared_Event.EventPayload_SetName) {
              return {
                  nameEvents: new Data_List_Types.Cons(v.payload.value0, v1.nameEvents),
                  messageEvents: v1.messageEvents
              };
          };
          if (v.payload instanceof Y_Shared_Event.EventPayload_MessageSend) {
              return {
                  messageEvents: new Data_List_Types.Cons(v.payload.value0, v1.messageEvents),
                  nameEvents: v1.nameEvents
              };
          };
          return v1;
      };
  })({
      nameEvents: Data_List_Types.Nil.value,
      messageEvents: Data_List_Types.Nil.value
  });
  var pushEvent = function (v) {
      return function (payload) {
          return function __do() {
              var v1 = Y_Shared_Id["new"](new Data_Symbol.IsSymbol(function () {
                  return "Event";
              }))();
              var now = Y_Shared_Util_Instant.getNow();
              return Y_Client_WebSocket.transmit(Y_Shared_Util_Codable.encodableArgonaut(Y_Shared_Transmission.encodeJsonToServer))(new Y_Shared_Transmission.ToServer_Push({
                  convoId: v.convoId,
                  event: {
                      id: v1,
                      time: now,
                      payload: payload(now)
                  }
              }))(v.wsClient)();
          };
      };
  };
  var processEvents = function ($106) {
      return (function (v) {
          return {
              names: Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
                  return function (v1) {
                      return Data_Map_Internal.insert(Y_Shared_Id.ordId)(v1.userId)(v1.name)(acc);
                  };
              })(Data_Map_Internal.empty)(v.nameEvents),
              messages: TreeMap.toTreeMap(Y_Shared_Id.ordId)(Data_Functor.mapFlipped(Data_List_Types.functorList)(v.messageEvents)(function ($107) {
                  return toIVP((function (v1) {
                      return v1.message;
                  })($107));
              }))
          };
      })(splitEvents($106));
  };
  var inputId = "input";
  var init = function (v) {
      return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Platform["$_SemigroupCmd_9"])(Effect.bindEffect))(Effect_Class.liftEffect(Control_Monad_Writer_Trans.monadEffectWriter(Platform["$_MonoidCmd_10"])(Effect_Class.monadEffectEffect))(function __do() {
          var v1 = Effect_Class.liftEffect(Effect_Class.monadEffectEffect)(Control_Apply.lift2(Effect.applyEffect)(Data_Tuple.Tuple.create)(Y_Shared_Id["new"](new Data_Symbol.IsSymbol(function () {
              return "User";
          })))(Y_Shared_Id["new"](new Data_Symbol.IsSymbol(function () {
              return "Convo";
          }))))();
          return $foreign.initialize_f(Data_Tuple.Tuple.create)(v1.value0)(v1.value1)();
      }))(function (v1) {
          return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Platform["$_SemigroupCmd_9"])(Effect.bindEffect))(Effect_Class.liftEffect(Control_Monad_Writer_Trans.monadEffectWriter(Platform["$_MonoidCmd_10"])(Effect_Class.monadEffectEffect))($foreign.getHostname))(function (hostname) {
              return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Platform["$_SemigroupCmd_9"])(Effect.bindEffect))(Effect_Class.liftEffect(Control_Monad_Writer_Trans.monadEffectWriter(Platform["$_MonoidCmd_10"])(Effect_Class.monadEffectEffect))(Y_Client_WebSocket.newConnection({
                  url: "ws://y.maynards.site:8081"
              })))(function (wsClient) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Platform["$_SemigroupCmd_9"])(Effect.bindEffect))(Control_Monad_Writer_Class.tell(Control_Monad_Writer_Trans.monadTellWriterT(Platform["$_MonoidCmd_10"])(Effect.monadEffect))(function (msgCallback) {
                      return Y_Client_WebSocket.onOpen(function __do() {
                          Effect_Class_Console.log(Effect_Class.monadEffectEffect)("WebSocket opened")();
                          return msgCallback(WebSocketOpened.value)();
                      })(wsClient);
                  }))(function () {
                      return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Platform["$_MonoidCmd_10"])(Effect.applicativeEffect))({
                          convoId: v1.value1,
                          userId: v1.value0,
                          wsClient: wsClient,
                          state: {
                              events: [  ],
                              messages: TreeMap.empty,
                              names: Data_Map_Internal.empty
                          },
                          currentMessage: "",
                          selectedThreadRoot: Data_Maybe.Nothing.value,
                          messageParent: Data_Maybe.Nothing.value,
                          nameInput: ""
                      });
                  });
              });
          });
      });
  };
  var eventTime = function (v) {
      return v.time;
  };
  var addEvents = function (events) {
      return function (newEvents) {
          var sortedEvents = Data_Array.sortWith(Y_Shared_Util_Instant.ordInstant)(eventTime)(newEvents);
          var potentialFinalArray = Data_Semigroup.append(Data_Semigroup.semigroupArray)(events)(sortedEvents);
          var oldEnd = Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(Data_Array.unsnoc(events))(function (v) {
              return v.last;
          });
          var newHead = Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(Data_Array.uncons(sortedEvents))(function (v) {
              return v.head;
          });
          if (oldEnd instanceof Data_Maybe.Just && newHead instanceof Data_Maybe.Just) {
              var $64 = Data_Ord.lessThanOrEq(Y_Shared_Util_Instant.ordInstant)(oldEnd.value0.time)(newHead.value0.time);
              if ($64) {
                  return potentialFinalArray;
              };
              return Data_Array.sortWith(Y_Shared_Util_Instant.ordInstant)(eventTime)(potentialFinalArray);
          };
          return potentialFinalArray;
      };
  };
  var update = function (v) {
      var v1 = Debug.log(v);
      var focusInput = Platform.afterRender(Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(WHATWG_HTML_Window.window)(WHATWG_HTML_Window.document))((function () {
          var $108 = Data_Functor.map(Effect.functorEffect)(WHATWG_HTML_Types.toMaybeHTMLElement());
          var $109 = WHATWG_DOM_Mixin_NonElementParentNode.getElementById()(inputId);
          return function ($110) {
              return $108($109($110));
          };
      })()))(Data_Maybe.maybe(Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))(WHATWG_HTML_Mixin_HTMLOrSVGElement.focus()()({}))));
      return function (v2) {
          if (v2 instanceof UpdateName) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Platform["$_SemigroupCmd_9"])(Effect.bindEffect))(Effect_Class.liftEffect(Control_Monad_Writer_Trans.monadEffectWriter(Platform["$_MonoidCmd_10"])(Effect_Class.monadEffectEffect))(pushEvent(v)(function (v3) {
                  return new Y_Shared_Event.EventPayload_SetName({
                      convoId: v.convoId,
                      userId: v.userId,
                      name: v.nameInput
                  });
              })))(function () {
                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Platform["$_MonoidCmd_10"])(Effect.applicativeEffect))(v);
              });
          };
          if (v2 instanceof UpdateNameInput) {
              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Platform["$_MonoidCmd_10"])(Effect.applicativeEffect))({
                  nameInput: v2.value0,
                  convoId: v.convoId,
                  currentMessage: v.currentMessage,
                  messageParent: v.messageParent,
                  selectedThreadRoot: v.selectedThreadRoot,
                  state: v.state,
                  userId: v.userId,
                  wsClient: v.wsClient
              });
          };
          if (v2 instanceof SelectMessageParent) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Platform["$_SemigroupCmd_9"])(Effect.bindEffect))(focusInput)(function () {
                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Platform["$_MonoidCmd_10"])(Effect.applicativeEffect))({
                      messageParent: new Data_Maybe.Just(v2.value0),
                      convoId: v.convoId,
                      currentMessage: v.currentMessage,
                      nameInput: v.nameInput,
                      selectedThreadRoot: v.selectedThreadRoot,
                      state: v.state,
                      userId: v.userId,
                      wsClient: v.wsClient
                  });
              });
          };
          if (v2 instanceof NewThread) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Platform["$_SemigroupCmd_9"])(Effect.bindEffect))(focusInput)(function () {
                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Platform["$_MonoidCmd_10"])(Effect.applicativeEffect))({
                      selectedThreadRoot: Data_Maybe.Nothing.value,
                      messageParent: Data_Maybe.Nothing.value,
                      convoId: v.convoId,
                      currentMessage: v.currentMessage,
                      nameInput: v.nameInput,
                      state: v.state,
                      userId: v.userId,
                      wsClient: v.wsClient
                  });
              });
          };
          if (v2 instanceof SelectThreadRoot) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Platform["$_SemigroupCmd_9"])(Effect.bindEffect))(focusInput)(function () {
                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Platform["$_MonoidCmd_10"])(Effect.applicativeEffect))({
                      selectedThreadRoot: new Data_Maybe.Just(v2.value0),
                      messageParent: new Data_Maybe.Just(v2.value0),
                      convoId: v.convoId,
                      currentMessage: v.currentMessage,
                      nameInput: v.nameInput,
                      state: v.state,
                      userId: v.userId,
                      wsClient: v.wsClient
                  });
              });
          };
          if (v2 instanceof SendMessage) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Platform["$_SemigroupCmd_9"])(Effect.bindEffect))(focusInput)(function () {
                  var $72 = v.currentMessage !== "";
                  if ($72) {
                      return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Platform["$_SemigroupCmd_9"])(Effect.bindEffect))(Effect_Class.liftEffect(Control_Monad_Writer_Trans.monadEffectWriter(Platform["$_MonoidCmd_10"])(Effect_Class.monadEffectEffect))(Y_Shared_Id["new"](new Data_Symbol.IsSymbol(function () {
                          return "Message";
                      }))))(function (v3) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Platform["$_SemigroupCmd_9"])(Effect.bindEffect))(Effect_Class.liftEffect(Control_Monad_Writer_Trans.monadEffectWriter(Platform["$_MonoidCmd_10"])(Effect_Class.monadEffectEffect))(pushEvent(v)(function (instant) {
                              return new Y_Shared_Event.EventPayload_MessageSend({
                                  convoId: v.convoId,
                                  message: {
                                      id: v3,
                                      timeSent: instant,
                                      authorId: v.userId,
                                      convoId: v.convoId,
                                      depIds: Data_Maybe.fromMaybe(Data_Monoid.mempty(Data_Set.monoidSet(Y_Shared_Id.ordId)))(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(v.messageParent)(Data_Set.singleton)),
                                      content: v.currentMessage
                                  }
                              });
                          })))(function () {
                              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Platform["$_MonoidCmd_10"])(Effect.applicativeEffect))({
                                  currentMessage: "",
                                  messageParent: Data_Maybe.Nothing.value,
                                  selectedThreadRoot: (function () {
                                      if (v.selectedThreadRoot instanceof Data_Maybe.Nothing) {
                                          return new Data_Maybe.Just(v3);
                                      };
                                      return v.selectedThreadRoot;
                                  })(),
                                  convoId: v.convoId,
                                  nameInput: v.nameInput,
                                  state: v.state,
                                  userId: v.userId,
                                  wsClient: v.wsClient
                              });
                          });
                      });
                  };
                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Platform["$_MonoidCmd_10"])(Effect.applicativeEffect))(v);
              });
          };
          if (v2 instanceof UpdateMessage) {
              var model2 = {
                  currentMessage: v2.value0,
                  convoId: v.convoId,
                  messageParent: v.messageParent,
                  nameInput: v.nameInput,
                  selectedThreadRoot: v.selectedThreadRoot,
                  state: v.state,
                  userId: v.userId,
                  wsClient: v.wsClient
              };
              if (v.selectedThreadRoot instanceof Data_Maybe.Just && v.messageParent instanceof Data_Maybe.Nothing) {
                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Platform["$_MonoidCmd_10"])(Effect.applicativeEffect))({
                      messageParent: v.selectedThreadRoot,
                      convoId: model2.convoId,
                      currentMessage: model2.currentMessage,
                      nameInput: model2.nameInput,
                      selectedThreadRoot: model2.selectedThreadRoot,
                      state: model2.state,
                      userId: model2.userId,
                      wsClient: model2.wsClient
                  });
              };
              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Platform["$_MonoidCmd_10"])(Effect.applicativeEffect))(model2);
          };
          if (v2 instanceof TransmissionReceived) {
              if (v2.value0 instanceof Data_Maybe.Just) {
                  var newEvents = addEvents(v.state.events)(v2.value0.value0.value0);
                  var processedEvents = processEvents(newEvents);
                  var model2 = {
                      state: {
                          events: newEvents,
                          names: processedEvents.names,
                          messages: processedEvents.messages
                      },
                      nameInput: (function () {
                          var $80 = v.nameInput === "";
                          if ($80) {
                              return Data_Maybe.fromMaybe("")(Data_Map_Internal.lookup(Y_Shared_Id.ordId)(v.userId)(processedEvents.names));
                          };
                          return v.nameInput;
                      })(),
                      convoId: v.convoId,
                      currentMessage: v.currentMessage,
                      messageParent: v.messageParent,
                      selectedThreadRoot: v.selectedThreadRoot,
                      userId: v.userId,
                      wsClient: v.wsClient
                  };
                  if (v.selectedThreadRoot instanceof Data_Maybe.Just) {
                      var mleaf = TreeMap.findLeaf(Y_Shared_Id.ordId)(v.selectedThreadRoot.value0)(processedEvents.messages);
                      return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Platform["$_MonoidCmd_10"])(Effect.applicativeEffect))({
                          selectedThreadRoot: mleaf,
                          messageParent: (function () {
                              var $82 = v.currentMessage === "";
                              if ($82) {
                                  return mleaf;
                              };
                              return v.messageParent;
                          })(),
                          convoId: model2.convoId,
                          currentMessage: model2.currentMessage,
                          nameInput: model2.nameInput,
                          state: model2.state,
                          userId: model2.userId,
                          wsClient: model2.wsClient
                      });
                  };
                  if (v.selectedThreadRoot instanceof Data_Maybe.Nothing) {
                      return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Platform["$_MonoidCmd_10"])(Effect.applicativeEffect))(model2);
                  };
                  throw new Error("Failed pattern match at Main (line 247, column 9 - line 260, column 33): " + [ v.selectedThreadRoot.constructor.name ]);
              };
              if (v2.value0 instanceof Data_Maybe.Nothing) {
                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Platform["$_MonoidCmd_10"])(Effect.applicativeEffect))(v);
              };
              throw new Error("Failed pattern match at Main (line 224, column 33 - line 262, column 28): " + [ v2.value0.constructor.name ]);
          };
          if (v2 instanceof WebSocketOpened) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Platform["$_SemigroupCmd_9"])(Effect.bindEffect))(Effect_Class.liftEffect(Control_Monad_Writer_Trans.monadEffectWriter(Platform["$_MonoidCmd_10"])(Effect_Class.monadEffectEffect))(function __do() {
                  Y_Client_WebSocket.transmit(Y_Shared_Util_Codable.encodableArgonaut(Y_Shared_Transmission.encodeJsonToServer))(new Y_Shared_Transmission.ToServer_Subscribe({
                      userId: v.userId,
                      convoId: v.convoId
                  }))(v.wsClient)();
                  return Y_Client_WebSocket.transmit(Y_Shared_Util_Codable.encodableArgonaut(Y_Shared_Transmission.encodeJsonToServer))(new Y_Shared_Transmission.ToServer_Pull({
                      convoId: v.convoId
                  }))(v.wsClient)();
              }))(function () {
                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Platform["$_MonoidCmd_10"])(Effect.applicativeEffect))(v);
              });
          };
          throw new Error("Failed pattern match at Main (line 140, column 3 - line 268, column 17): " + [ v2.constructor.name ]);
      };
  };
  var $dollar_EqMsg_32 = new Data_Eq.Eq(function (m1) {
      return function (m2) {
          if (m1 instanceof UpdateMessage && m2 instanceof UpdateMessage) {
              return m1.value0 === m2.value0;
          };
          if (m1 instanceof SendMessage && m2 instanceof SendMessage) {
              return true;
          };
          if (m1 instanceof WebSocketOpened && m2 instanceof WebSocketOpened) {
              return true;
          };
          if (m1 instanceof SelectThreadRoot && m2 instanceof SelectThreadRoot) {
              return Data_Eq.eq(Y_Shared_Id.eqId)(m1.value0)(m2.value0);
          };
          if (m1 instanceof NewThread && m2 instanceof NewThread) {
              return true;
          };
          if (m1 instanceof SelectMessageParent && m2 instanceof SelectMessageParent) {
              return Data_Eq.eq(Y_Shared_Id.eqId)(m1.value0)(m2.value0);
          };
          if (m1 instanceof UpdateNameInput && m2 instanceof UpdateNameInput) {
              return m1.value0 === m2.value0;
          };
          if (m1 instanceof UpdateName && m2 instanceof UpdateName) {
              return true;
          };
          return false;
      };
  });
  var threadBar = function (model) {
      var leaves = Data_Functor.mapFlipped(Data_Functor.functorArray)(Data_Array.sortBy(function (a) {
          return function (b) {
              return Data_Ord.compare(Y_Shared_Util_Instant.ordInstant)((Data_Tuple.snd(b)).value.timeSent)((Data_Tuple.snd(a)).value.timeSent);
          };
      })(TreeMap.leaves(model.state.messages)))(Data_Tuple.fst);
      return Html.divS([ Css.display("grid"), Css.gridTemplateRows("max-content") ])([  ])([ Html.div([  ])([ Html.button([ Attribute.onClick(Producer.producea($dollar_EqMsg_32))(NewThread.value) ])([ Html.text("New Thread") ]), Html.divS([ Css.margin(".3em") ])([  ])([ Html.input([ Attribute.value(model.nameInput), Attribute.onInput(Producer.produceab)(UpdateNameInput.create) ]), Html.button([ Attribute.onClick(Producer.producea($dollar_EqMsg_32))(UpdateName.value) ])([ Html.text("Update Name") ]) ]) ]), Html.divS([ Css.overflow("auto") ])([  ])(Data_Functor.mapFlipped(Data_Functor.functorArray)(leaves)(function (mid) {
          return (function (mes) {
              return Html.divS([ (function () {
                  var $99 = Data_Eq.eq(Data_Maybe.eqMaybe(Y_Shared_Id.eqId))(model.selectedThreadRoot)(new Data_Maybe.Just(mid));
                  if ($99) {
                      return Css.background("red");
                  };
                  return Data_Monoid.mempty(Data_Batched["$_MonoidBatched_7"]);
              })(), Css.border("1px solid"), Css.padding(".3em") ])([ Attribute.onClick(Producer.producea($dollar_EqMsg_32))(new SelectThreadRoot(mid)) ])([ Html.text(mes) ]);
          })(Data_Maybe.maybe("oops")(function ($111) {
              return (function (v) {
                  return v.content;
              })((function (v) {
                  return v.value;
              })($111));
          })(TreeMap.lookup(Y_Shared_Id.ordId)(mid)(model.state.messages)));
      })) ]);
  };
  var threadView = function (model) {
      var mthread = Control_Bind.bind(Data_Maybe.bindMaybe)(model.selectedThreadRoot)(PointFree.applySecond(TreeMap.getThread(Y_Shared_Id.ordId))(model.state.messages));
      var messageInput = Html.div([  ])([ Html.textarea([ Attribute.id(inputId), Attribute.value(model.currentMessage), Attribute.onInput(Producer.produceab)(UpdateMessage.create) ])([  ]), Html.button([ Attribute.onClick(Producer.producea($dollar_EqMsg_32))(SendMessage.value) ])([ Html.text("send") ]) ]);
      if (mthread instanceof Data_Maybe.Just) {
          return (function (messagesHtml) {
              return Html.divS([ Css.display("grid"), Css.gridTemplateRows("max-content") ])([  ])([ Html.divS([ Css.border("1px solid"), Css.overflow("auto"), Css.display("flex"), Css.flexDirection("column-reverse") ])([  ])(messagesHtml), messageInput ]);
          })(Data_Functor.map(Data_Functor.functorArray)(function (v) {
              var createMessage = function (styles) {
                  return function (mes) {
                      return Html.divS([ Css.borderJ([ "1px solid", (function () {
                          var $102 = Data_Eq.eq(Data_Maybe.eqMaybe(Y_Shared_Id.eqId))(model.messageParent)(new Data_Maybe.Just(mes.id));
                          if ($102) {
                              return "red";
                          };
                          return "darkgray";
                      })() ]), Css.padding(".25em"), styles ])([ Attribute.onClick(Producer.producea($dollar_EqMsg_32))(new SelectMessageParent(mes.id)) ])([ Html.divS([ Css.font("0.7em sans-serif"), Css.opacity("0.5"), Css.marginBottom("0.5em"), Css.paddingTop("1px") ])([  ])([ Html.text(Data_Maybe.fromMaybe("<anonomous>")(Data_Map_Internal.lookup(Y_Shared_Id.ordId)(mes.authorId)(model.state.names))) ]), Html.divS([ Css.whiteSpace("pre-wrap") ])([  ])([ Html.text(mes.content) ]) ]);
                  };
              };
              return Platform.batch(Data_Array.reverse(Data_Array.snoc(Data_Functor.mapFlipped(Data_Functor.functorArray)(v.value1)(createMessage(Css.background("lightgray"))))(createMessage(Css.background("white"))(v.value0))));
          })(Data_Array.fromFoldable(Data_List_Types.foldableNonEmptyList)(mthread.value0)));
      };
      if (mthread instanceof Data_Maybe.Nothing) {
          return messageInput;
      };
      throw new Error("Failed pattern match at Main (line 472, column 3 - line 529, column 28): " + [ mthread.constructor.name ]);
  };
  var view = function (model) {
      return {
          head: [  ],
          body: [ Design.staticStyles, Html.divS([ Css.display("grid"), Css.grid("100vh / 30% 1fr") ])([  ])([ threadBar(model), threadView(model) ]) ]
      };
  };
  var main = Platform.app({
      init: init,
      update: update,
      view: view,
      subscriptions: subscriptions
  });
  exports["main"] = main;
  exports["init"] = init;
  exports["WebSocketOpened"] = WebSocketOpened;
  exports["TransmissionReceived"] = TransmissionReceived;
  exports["UpdateMessage"] = UpdateMessage;
  exports["SendMessage"] = SendMessage;
  exports["SelectThreadRoot"] = SelectThreadRoot;
  exports["NewThread"] = NewThread;
  exports["SelectMessageParent"] = SelectMessageParent;
  exports["UpdateNameInput"] = UpdateNameInput;
  exports["UpdateName"] = UpdateName;
  exports["update"] = update;
  exports["pushEvent"] = pushEvent;
  exports["addEvents"] = addEvents;
  exports["eventTime"] = eventTime;
  exports["processEvents"] = processEvents;
  exports["splitEvents"] = splitEvents;
  exports["toIVP"] = toIVP;
  exports["subscriptions"] = subscriptions;
  exports["view"] = view;
  exports["threadBar"] = threadBar;
  exports["inputId"] = inputId;
  exports["threadView"] = threadView;
  exports["$_EqMsg_32"] = $dollar_EqMsg_32;
  exports["initialize_f"] = $foreign.initialize_f;
  exports["getHostname"] = $foreign.getHostname;
})(PS);
PS["Main"].main();